// WARNING: This file's extension ('.S') indicates that it may not have been a C or C++ file.
// It should contain Ghidra's best effort at decompiling the machine language to C, 
// but TDR does not currently attempt to handle assembly language or other non-C/C++ code differently, 
// so any decompiled code below may not reflect the original project source code for this file.
// If the source file is from a library, you should replace it with the original library version of the file.
// Otherwise, manual reconstruction of the code may be required, 
// Especially if the original source code was assembly language which used hardware features inaccessible to C.
#include "THISDUST.H"
#include "DRAWS.H"


// autogenerated function stub: 
// void depthQPTable() /* depthQPTable method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
void depthQPTable() 
{ // line 33, offset 0x800d05dc
	/* begin block 1 */
		// Start line: 67
	/* end block 1 */
	// End Line: 68

	/* begin block 2 */
		// Start line: 68
	/* end block 2 */
	// End Line: 69

	/* begin block 3 */
		// Start line: 69
	/* end block 3 */
	// End Line: 70

	/* begin block 4 */
		// Start line: 70
	/* end block 4 */
	// End Line: 71

	/* begin block 5 */
		// Start line: 71
	/* end block 5 */
	// End Line: 72

	/* begin block 6 */
		// Start line: 72
	/* end block 6 */
	// End Line: 73

	/* begin block 7 */
		// Start line: 73
	/* end block 7 */
	// End Line: 74

	/* begin block 8 */
		// Start line: 74
	/* end block 8 */
	// End Line: 75

	/* begin block 9 */
		// Start line: 75
	/* end block 9 */
	// End Line: 76

	/* begin block 10 */
		// Start line: 76
	/* end block 10 */
	// End Line: 77

	/* begin block 11 */
		// Start line: 77
	/* end block 11 */
	// End Line: 78

	/* begin block 12 */
		// Start line: 78
	/* end block 12 */
	// End Line: 79

	/* begin block 13 */
		// Start line: 79
	/* end block 13 */
	// End Line: 80

	return null;
}


// autogenerated function stub: 
// void depthQBlendStart() /* depthQBlendStart method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
void depthQBlendStart() 
{ // line 47, offset 0x800d05e0
	/* begin block 1 */
		// Start line: 95
	/* end block 1 */
	// End Line: 96

	return null;
}


// autogenerated function stub: 
// void depthQFogStart() /* depthQFogStart method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
void depthQFogStart() 
{ // line 49, offset 0x800d05e4
	/* begin block 1 */
		// Start line: 99
	/* end block 1 */
	// End Line: 100

	return null;
}


// autogenerated function stub: 
// void depthQFogFar() /* depthQFogFar method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
void depthQFogFar() 
{ // line 51, offset 0x800d05e8
	/* begin block 1 */
		// Start line: 103
	/* end block 1 */
	// End Line: 104

	return null;
}


// autogenerated function stub: 
// void depthQBackColor() /* depthQBackColor method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
void depthQBackColor() 
{ // line 53, offset 0x800d05ec
	/* begin block 1 */
		// Start line: 107
	/* end block 1 */
	// End Line: 108

	return null;
}


// autogenerated function stub: 
// void gameTimer() /* gameTimer method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
void gameTimer() 
{ // line 55, offset 0x800d05f0
	/* begin block 1 */
		// Start line: 111
	/* end block 1 */
	// End Line: 112

	return null;
}


// autogenerated function stub: 
// void modelFadeValue() /* modelFadeValue method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
void modelFadeValue() 
{ // line 57, offset 0x800d05f4
	/* begin block 1 */
		// Start line: 115
	/* end block 1 */
	// End Line: 116

	return null;
}


// autogenerated function stub: 
// void lowerSplitPush() /* lowerSplitPush method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
void lowerSplitPush() 
{ // line 59, offset 0x800d05f8
	/* begin block 1 */
		// Start line: 119
	/* end block 1 */
	// End Line: 120

	return null;
}


// autogenerated function stub: 
// void overlayAddress() /* overlayAddress method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
void overlayAddress() 
{ // line 61, offset 0x800d05fc
	/* begin block 1 */
		// Start line: 123
	/* end block 1 */
	// End Line: 124

	/* begin block 2 */
		// Start line: 124
	/* end block 2 */
	// End Line: 125

	/* begin block 3 */
		// Start line: 125
	/* end block 3 */
	// End Line: 126

	/* begin block 4 */
		// Start line: 126
	/* end block 4 */
	// End Line: 127

	return null;
}


// autogenerated function stub: 
// void forceDrawInFront() /* forceDrawInFront method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
void forceDrawInFront() 
{ // line 66, offset 0x800d0600
	/* begin block 1 */
		// Start line: 133
	/* end block 1 */
	// End Line: 134

	return null;
}


// decompiled code
// original method signature: 
// void ClearBss() /* ClearBss method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
 // line 68, offset 0x800251ac
	/* begin block 1 */
		// Start line: 137
	/* end block 1 */
	// End Line: 138

	/* begin block 2 */
		// Start line: 138
	/* end block 2 */
	// End Line: 139

void ClearBss(void)

{
  DebugMenuLine *pDVar1;
  
  pDVar1 = &debugSoundMenu;
  do {
    pDVar1->type = DEBUG_LINE_TYPE_BIT;
    pDVar1 = (DebugMenuLine *)&pDVar1->lower;
  } while (pDVar1 < (DebugMenuLine *)&DAT_800dfe74);
  return;
}



// autogenerated function stub: 
// void clearloop() /* clearloop method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
void clearloop() 
{ // line 72, offset 0x800251bc
	/* begin block 1 */
		// Start line: 145
	/* end block 1 */
	// End Line: 146

	/* begin block 2 */
		// Start line: 146
	/* end block 2 */
	// End Line: 147

	return null;
}


// decompiled code
// original method signature: 
// void TimerTick() /* TimerTick method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
 // line 82, offset 0x800251d8
	/* begin block 1 */
		// Start line: 165
	/* end block 1 */
	// End Line: 166

	/* begin block 2 */
		// Start line: 166
	/* end block 2 */
	// End Line: 167

undefined8 TimerTick(void)

{
  undefined4 in_v0;
  undefined4 in_v1;
  
  gameTimer = gameTimer + 1;
  return CONCAT44(in_v0,in_v1);
}



// decompiled code
// original method signature: 
// void CheckVolatile() /* CheckVolatile method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
 // line 103, offset 0x80025210
	/* begin block 1 */
		// Start line: 207
	/* end block 1 */
	// End Line: 208

	/* begin block 2 */
		// Start line: 208
	/* end block 2 */
	// End Line: 209

undefined4 CheckVolatile(undefined4 param_1)

{
  return param_1;
}



// autogenerated function stub: 
// void DRAW_AnimatedModel_S() /* DRAW_AnimatedModel_S method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
void DRAW_AnimatedModel_S() 
{ // line 108, offset 0x8002521c
	/* begin block 1 */
		// Start line: 217
	/* end block 1 */
	// End Line: 218

	/* begin block 2 */
		// Start line: 218
	/* end block 2 */
	// End Line: 219

	/* begin block 3 */
		// Start line: 219
	/* end block 3 */
	// End Line: 220

	/* begin block 4 */
		// Start line: 231
	/* end block 4 */
	// End Line: 232

	/* begin block 5 */
		// Start line: 232
	/* end block 5 */
	// End Line: 233

	/* begin block 6 */
		// Start line: 233
	/* end block 6 */
	// End Line: 234

	/* begin block 7 */
		// Start line: 234
	/* end block 7 */
	// End Line: 235

	/* begin block 8 */
		// Start line: 235
	/* end block 8 */
	// End Line: 236

	/* begin block 9 */
		// Start line: 236
	/* end block 9 */
	// End Line: 237

	/* begin block 10 */
		// Start line: 237
	/* end block 10 */
	// End Line: 238

	/* begin block 11 */
		// Start line: 238
	/* end block 11 */
	// End Line: 239

	/* begin block 12 */
		// Start line: 239
	/* end block 12 */
	// End Line: 240

	/* begin block 13 */
		// Start line: 240
	/* end block 13 */
	// End Line: 241

	/* begin block 14 */
		// Start line: 241
	/* end block 14 */
	// End Line: 242

	/* begin block 15 */
		// Start line: 242
	/* end block 15 */
	// End Line: 243

	/* begin block 16 */
		// Start line: 243
	/* end block 16 */
	// End Line: 244

	/* begin block 17 */
		// Start line: 244
	/* end block 17 */
	// End Line: 245

	/* begin block 18 */
		// Start line: 245
	/* end block 18 */
	// End Line: 246

	/* begin block 19 */
		// Start line: 246
	/* end block 19 */
	// End Line: 247

	/* begin block 20 */
		// Start line: 247
	/* end block 20 */
	// End Line: 248

	/* begin block 21 */
		// Start line: 248
	/* end block 21 */
	// End Line: 249

	/* begin block 22 */
		// Start line: 249
	/* end block 22 */
	// End Line: 250

	/* begin block 23 */
		// Start line: 250
	/* end block 23 */
	// End Line: 251

	/* begin block 24 */
		// Start line: 251
	/* end block 24 */
	// End Line: 252

	/* begin block 25 */
		// Start line: 252
	/* end block 25 */
	// End Line: 253

	/* begin block 26 */
		// Start line: 253
	/* end block 26 */
	// End Line: 254

	/* begin block 27 */
		// Start line: 254
	/* end block 27 */
	// End Line: 255

	/* begin block 28 */
		// Start line: 255
	/* end block 28 */
	// End Line: 256

	/* begin block 29 */
		// Start line: 256
	/* end block 29 */
	// End Line: 257

	/* begin block 30 */
		// Start line: 257
	/* end block 30 */
	// End Line: 258

	/* begin block 31 */
		// Start line: 258
	/* end block 31 */
	// End Line: 259

	/* begin block 32 */
		// Start line: 259
	/* end block 32 */
	// End Line: 260

	/* begin block 33 */
		// Start line: 260
	/* end block 33 */
	// End Line: 261

	/* begin block 34 */
		// Start line: 261
	/* end block 34 */
	// End Line: 262

	/* begin block 35 */
		// Start line: 262
	/* end block 35 */
	// End Line: 263

	/* begin block 36 */
		// Start line: 263
	/* end block 36 */
	// End Line: 264

	/* begin block 37 */
		// Start line: 264
	/* end block 37 */
	// End Line: 265

	/* begin block 38 */
		// Start line: 265
	/* end block 38 */
	// End Line: 266

	/* begin block 39 */
		// Start line: 266
	/* end block 39 */
	// End Line: 267

	/* begin block 40 */
		// Start line: 267
	/* end block 40 */
	// End Line: 268

	/* begin block 41 */
		// Start line: 268
	/* end block 41 */
	// End Line: 269

	/* begin block 42 */
		// Start line: 269
	/* end block 42 */
	// End Line: 270

	/* begin block 43 */
		// Start line: 270
	/* end block 43 */
	// End Line: 271

	/* begin block 44 */
		// Start line: 271
	/* end block 44 */
	// End Line: 272

	return null;
}


// autogenerated function stub: 
// void anim_loop_top() /* anim_loop_top method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
void anim_loop_top() 
{ // line 224, offset 0x80025300
	/* begin block 1 */
		// Start line: 449
	/* end block 1 */
	// End Line: 450

	/* begin block 2 */
		// Start line: 450
	/* end block 2 */
	// End Line: 451

	/* begin block 3 */
		// Start line: 451
	/* end block 3 */
	// End Line: 452

	/* begin block 4 */
		// Start line: 452
	/* end block 4 */
	// End Line: 453

	/* begin block 5 */
		// Start line: 453
	/* end block 5 */
	// End Line: 454

	return null;
}


// autogenerated function stub: 
// void anim_dont_flip_backface() /* anim_dont_flip_backface method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
void anim_dont_flip_backface() 
{ // line 263, offset 0x80025368
	/* begin block 1 */
		// Start line: 527
	/* end block 1 */
	// End Line: 528

	/* begin block 2 */
		// Start line: 528
	/* end block 2 */
	// End Line: 529

	return null;
}


// autogenerated function stub: 
// void sort_max_z2() /* sort_max_z2 method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
void sort_max_z2() 
{ // line 306, offset 0x800253e0
	/* begin block 1 */
		// Start line: 613
	/* end block 1 */
	// End Line: 614

	/* begin block 2 */
		// Start line: 614
	/* end block 2 */
	// End Line: 615

	return null;
}


// autogenerated function stub: 
// void mm2L1() /* mm2L1 method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
void mm2L1() 
{ // line 317, offset 0x800253fc
	/* begin block 1 */
		// Start line: 635
	/* end block 1 */
	// End Line: 636

	return null;
}


// autogenerated function stub: 
// void mm2L2() /* mm2L2 method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
void mm2L2() 
{ // line 322, offset 0x8002540c
	/* begin block 1 */
		// Start line: 645
	/* end block 1 */
	// End Line: 646

	/* begin block 2 */
		// Start line: 646
	/* end block 2 */
	// End Line: 647

	return null;
}


// autogenerated function stub: 
// void sort_avz_continue2() /* sort_avz_continue2 method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
void sort_avz_continue2() 
{ // line 326, offset 0x80025414
	/* begin block 1 */
		// Start line: 653
	/* end block 1 */
	// End Line: 654

	return null;
}


// autogenerated function stub: 
// void anim_no_pushsort() /* anim_no_pushsort method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
void anim_no_pushsort() 
{ // line 334, offset 0x80025430
	/* begin block 1 */
		// Start line: 669
	/* end block 1 */
	// End Line: 670

	return null;
}


// autogenerated function stub: 
// void not_colored_fog() /* not_colored_fog method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
void not_colored_fog() 
{ // line 354, offset 0x8002545c
	/* begin block 1 */
		// Start line: 709
	/* end block 1 */
	// End Line: 710

	/* begin block 2 */
		// Start line: 710
	/* end block 2 */
	// End Line: 711

	/* begin block 3 */
		// Start line: 711
	/* end block 3 */
	// End Line: 712

	return null;
}


// autogenerated function stub: 
// void anim_ft3() /* anim_ft3 method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
void anim_ft3() 
{ // line 359, offset 0x80025464
	/* begin block 1 */
		// Start line: 719
	/* end block 1 */
	// End Line: 720

	/* begin block 2 */
		// Start line: 720
	/* end block 2 */
	// End Line: 721

	/* begin block 3 */
		// Start line: 721
	/* end block 3 */
	// End Line: 722

	/* begin block 4 */
		// Start line: 722
	/* end block 4 */
	// End Line: 723

	return null;
}


// autogenerated function stub: 
// void always_ft3() /* always_ft3 method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
void always_ft3() 
{ // line 367, offset 0x80025474
	/* begin block 1 */
		// Start line: 735
	/* end block 1 */
	// End Line: 736

	/* begin block 2 */
		// Start line: 736
	/* end block 2 */
	// End Line: 737

	/* begin block 3 */
		// Start line: 737
	/* end block 3 */
	// End Line: 738

	/* begin block 4 */
		// Start line: 738
	/* end block 4 */
	// End Line: 739

	return null;
}


// autogenerated function stub: 
// void nofade_ft3_a() /* nofade_ft3_a method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
void nofade_ft3_a() 
{ // line 388, offset 0x800254b0
	/* begin block 1 */
		// Start line: 777
	/* end block 1 */
	// End Line: 778

	/* begin block 2 */
		// Start line: 778
	/* end block 2 */
	// End Line: 779

	return null;
}


// autogenerated function stub: 
// void nofade_ft3_b() /* nofade_ft3_b method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
void nofade_ft3_b() 
{ // line 408, offset 0x800254e8
	/* begin block 1 */
		// Start line: 817
	/* end block 1 */
	// End Line: 818

	/* begin block 2 */
		// Start line: 818
	/* end block 2 */
	// End Line: 819

	return null;
}


// autogenerated function stub: 
// void nofade_ft3_c() /* nofade_ft3_c method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
void nofade_ft3_c() 
{ // line 444, offset 0x80025560
	/* begin block 1 */
		// Start line: 889
	/* end block 1 */
	// End Line: 890

	/* begin block 2 */
		// Start line: 890
	/* end block 2 */
	// End Line: 891

	return null;
}


// autogenerated function stub: 
// void anim_gt3() /* anim_gt3 method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
void anim_gt3() 
{ // line 458, offset 0x80025588
	/* begin block 1 */
		// Start line: 917
	/* end block 1 */
	// End Line: 918

	/* begin block 2 */
		// Start line: 918
	/* end block 2 */
	// End Line: 919

	/* begin block 3 */
		// Start line: 919
	/* end block 3 */
	// End Line: 920

	/* begin block 4 */
		// Start line: 920
	/* end block 4 */
	// End Line: 921

	/* begin block 5 */
		// Start line: 921
	/* end block 5 */
	// End Line: 922

	/* begin block 6 */
		// Start line: 922
	/* end block 6 */
	// End Line: 923

	/* begin block 7 */
		// Start line: 923
	/* end block 7 */
	// End Line: 924

	/* begin block 8 */
		// Start line: 924
	/* end block 8 */
	// End Line: 925

	/* begin block 9 */
		// Start line: 925
	/* end block 9 */
	// End Line: 926

	/* begin block 10 */
		// Start line: 926
	/* end block 10 */
	// End Line: 927

	return null;
}


// autogenerated function stub: 
// void nofade_gt3_a() /* nofade_gt3_a method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
void nofade_gt3_a() 
{ // line 499, offset 0x800255f8
	/* begin block 1 */
		// Start line: 999
	/* end block 1 */
	// End Line: 1000

	/* begin block 2 */
		// Start line: 1000
	/* end block 2 */
	// End Line: 1001

	return null;
}


// autogenerated function stub: 
// void nofade_gt3_b2() /* nofade_gt3_b2 method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
void nofade_gt3_b2() 
{ // line 542, offset 0x80025670
	/* begin block 1 */
		// Start line: 1085
	/* end block 1 */
	// End Line: 1086

	/* begin block 2 */
		// Start line: 1086
	/* end block 2 */
	// End Line: 1087

	/* begin block 3 */
		// Start line: 1087
	/* end block 3 */
	// End Line: 1088

	return null;
}


// autogenerated function stub: 
// void nofade_gt3_b() /* nofade_gt3_b method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
void nofade_gt3_b() 
{ // line 551, offset 0x80025688
	/* begin block 1 */
		// Start line: 1103
	/* end block 1 */
	// End Line: 1104

	/* begin block 2 */
		// Start line: 1104
	/* end block 2 */
	// End Line: 1105

	return null;
}


// autogenerated function stub: 
// void anim_nontext() /* anim_nontext method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
void anim_nontext() 
{ // line 575, offset 0x800256e4
	/* begin block 1 */
		// Start line: 1151
	/* end block 1 */
	// End Line: 1152

	/* begin block 2 */
		// Start line: 1152
	/* end block 2 */
	// End Line: 1153

	/* begin block 3 */
		// Start line: 1153
	/* end block 3 */
	// End Line: 1154

	/* begin block 4 */
		// Start line: 1154
	/* end block 4 */
	// End Line: 1155

	/* begin block 5 */
		// Start line: 1155
	/* end block 5 */
	// End Line: 1156

	return null;
}


// autogenerated function stub: 
// void anim_g3() /* anim_g3 method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
void anim_g3() 
{ // line 582, offset 0x800256ec
	/* begin block 1 */
		// Start line: 1165
	/* end block 1 */
	// End Line: 1166

	/* begin block 2 */
		// Start line: 1166
	/* end block 2 */
	// End Line: 1167

	/* begin block 3 */
		// Start line: 1167
	/* end block 3 */
	// End Line: 1168

	/* begin block 4 */
		// Start line: 1168
	/* end block 4 */
	// End Line: 1169

	/* begin block 5 */
		// Start line: 1169
	/* end block 5 */
	// End Line: 1170

	/* begin block 6 */
		// Start line: 1170
	/* end block 6 */
	// End Line: 1171

	/* begin block 7 */
		// Start line: 1171
	/* end block 7 */
	// End Line: 1172

	/* begin block 8 */
		// Start line: 1172
	/* end block 8 */
	// End Line: 1173

	/* begin block 9 */
		// Start line: 1173
	/* end block 9 */
	// End Line: 1174

	return null;
}


// autogenerated function stub: 
// void anim_g3_from_t() /* anim_g3_from_t method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
void anim_g3_from_t() 
{ // line 610, offset 0x80025724
	/* begin block 1 */
		// Start line: 1221
	/* end block 1 */
	// End Line: 1222

	/* begin block 2 */
		// Start line: 1222
	/* end block 2 */
	// End Line: 1223

	return null;
}


// autogenerated function stub: 
// void anim_g3_overface() /* anim_g3_overface method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
void anim_g3_overface() 
{ // line 668, offset 0x800257e4
	/* begin block 1 */
		// Start line: 1337
	/* end block 1 */
	// End Line: 1338

	/* begin block 2 */
		// Start line: 1338
	/* end block 2 */
	// End Line: 1339

	/* begin block 3 */
		// Start line: 1339
	/* end block 3 */
	// End Line: 1340

	return null;
}


// autogenerated function stub: 
// void anim_f3() /* anim_f3 method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
void anim_f3() 
{ // line 694, offset 0x8002583c
	/* begin block 1 */
		// Start line: 1389
	/* end block 1 */
	// End Line: 1390

	/* begin block 2 */
		// Start line: 1390
	/* end block 2 */
	// End Line: 1391

	/* begin block 3 */
		// Start line: 1391
	/* end block 3 */
	// End Line: 1392

	/* begin block 4 */
		// Start line: 1392
	/* end block 4 */
	// End Line: 1393

	/* begin block 5 */
		// Start line: 1393
	/* end block 5 */
	// End Line: 1394

	return null;
}


// autogenerated function stub: 
// void anim_next_mface() /* anim_next_mface method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
void anim_next_mface() 
{ // line 724, offset 0x80025890
	/* begin block 1 */
		// Start line: 1449
	/* end block 1 */
	// End Line: 1450

	/* begin block 2 */
		// Start line: 1450
	/* end block 2 */
	// End Line: 1451

	/* begin block 3 */
		// Start line: 1451
	/* end block 3 */
	// End Line: 1452

	/* begin block 4 */
		// Start line: 1452
	/* end block 4 */
	// End Line: 1453

	/* begin block 5 */
		// Start line: 1453
	/* end block 5 */
	// End Line: 1454

	return null;
}


// autogenerated function stub: 
// void exit_AnimDraw() /* exit_AnimDraw method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
void exit_AnimDraw() 
{ // line 735, offset 0x800258a8
	/* begin block 1 */
		// Start line: 1471
	/* end block 1 */
	// End Line: 1472

	return null;
}


// autogenerated function stub: 
// void fogged_face() /* fogged_face method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
void fogged_face() 
{ // line 749, offset 0x800258dc
	/* begin block 1 */
		// Start line: 1499
	/* end block 1 */
	// End Line: 1500

	/* begin block 2 */
		// Start line: 1500
	/* end block 2 */
	// End Line: 1501

	return null;
}


// autogenerated function stub: 
// void always_fogged_ft3() /* always_fogged_ft3 method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
void always_fogged_ft3() 
{ // line 765, offset 0x80025904
	/* begin block 1 */
		// Start line: 1531
	/* end block 1 */
	// End Line: 1532

	/* begin block 2 */
		// Start line: 1532
	/* end block 2 */
	// End Line: 1533

	/* begin block 3 */
		// Start line: 1533
	/* end block 3 */
	// End Line: 1534

	/* begin block 4 */
		// Start line: 1534
	/* end block 4 */
	// End Line: 1535

	return null;
}


// autogenerated function stub: 
// void fanim_gt3() /* fanim_gt3 method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
void fanim_gt3() 
{ // line 809, offset 0x80025990
	/* begin block 1 */
		// Start line: 1619
	/* end block 1 */
	// End Line: 1620

	/* begin block 2 */
		// Start line: 1620
	/* end block 2 */
	// End Line: 1621

	/* begin block 3 */
		// Start line: 1621
	/* end block 3 */
	// End Line: 1622

	/* begin block 4 */
		// Start line: 1622
	/* end block 4 */
	// End Line: 1623

	/* begin block 5 */
		// Start line: 1623
	/* end block 5 */
	// End Line: 1624

	return null;
}


// autogenerated function stub: 
// void fog_backface() /* fog_backface method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
void fog_backface() 
{ // line 857, offset 0x80025a34
	/* begin block 1 */
		// Start line: 1715
	/* end block 1 */
	// End Line: 1716

	/* begin block 2 */
		// Start line: 1716
	/* end block 2 */
	// End Line: 1717

	/* begin block 3 */
		// Start line: 1717
	/* end block 3 */
	// End Line: 1718

	/* begin block 4 */
		// Start line: 1718
	/* end block 4 */
	// End Line: 1719

	/* begin block 5 */
		// Start line: 1719
	/* end block 5 */
	// End Line: 1720

	/* begin block 6 */
		// Start line: 1720
	/* end block 6 */
	// End Line: 1721

	/* begin block 7 */
		// Start line: 1721
	/* end block 7 */
	// End Line: 1722

	/* begin block 8 */
		// Start line: 1722
	/* end block 8 */
	// End Line: 1723

	return null;
}


// autogenerated function stub: 
// void fog_backface2() /* fog_backface2 method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
void fog_backface2() 
{ // line 895, offset 0x80025a9c
	/* begin block 1 */
		// Start line: 1791
	/* end block 1 */
	// End Line: 1792

	/* begin block 2 */
		// Start line: 1792
	/* end block 2 */
	// End Line: 1793

	/* begin block 3 */
		// Start line: 1793
	/* end block 3 */
	// End Line: 1794

	/* begin block 4 */
		// Start line: 1794
	/* end block 4 */
	// End Line: 1795

	return null;
}


// autogenerated function stub: 
// void fanim_nontext() /* fanim_nontext method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
void fanim_nontext() 
{ // line 937, offset 0x80025b1c
	/* begin block 1 */
		// Start line: 1875
	/* end block 1 */
	// End Line: 1876

	/* begin block 2 */
		// Start line: 1876
	/* end block 2 */
	// End Line: 1877

	/* begin block 3 */
		// Start line: 1877
	/* end block 3 */
	// End Line: 1878

	/* begin block 4 */
		// Start line: 1878
	/* end block 4 */
	// End Line: 1879

	/* begin block 5 */
		// Start line: 1879
	/* end block 5 */
	// End Line: 1880

	/* begin block 6 */
		// Start line: 1880
	/* end block 6 */
	// End Line: 1881

	return null;
}


// autogenerated function stub: 
// void fanim_g3() /* fanim_g3 method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
void fanim_g3() 
{ // line 945, offset 0x80025b24
	/* begin block 1 */
		// Start line: 1891
	/* end block 1 */
	// End Line: 1892

	/* begin block 2 */
		// Start line: 1892
	/* end block 2 */
	// End Line: 1893

	/* begin block 3 */
		// Start line: 1893
	/* end block 3 */
	// End Line: 1894

	/* begin block 4 */
		// Start line: 1894
	/* end block 4 */
	// End Line: 1895

	/* begin block 5 */
		// Start line: 1895
	/* end block 5 */
	// End Line: 1896

	return null;
}


// autogenerated function stub: 
// void fanim_f3() /* fanim_f3 method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
void fanim_f3() 
{ // line 1020, offset 0x80025c24
	/* begin block 1 */
		// Start line: 2041
	/* end block 1 */
	// End Line: 2042

	/* begin block 2 */
		// Start line: 2042
	/* end block 2 */
	// End Line: 2043

	/* begin block 3 */
		// Start line: 2043
	/* end block 3 */
	// End Line: 2044

	/* begin block 4 */
		// Start line: 2044
	/* end block 4 */
	// End Line: 2045

	return null;
}


// autogenerated function stub: 
// void faded_backpoly() /* faded_backpoly method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
void faded_backpoly() 
{ // line 1075, offset 0x80025cd0
	/* begin block 1 */
		// Start line: 2151
	/* end block 1 */
	// End Line: 2152

	/* begin block 2 */
		// Start line: 2152
	/* end block 2 */
	// End Line: 2153

	/* begin block 3 */
		// Start line: 2153
	/* end block 3 */
	// End Line: 2154

	/* begin block 4 */
		// Start line: 2154
	/* end block 4 */
	// End Line: 2155

	/* begin block 5 */
		// Start line: 2155
	/* end block 5 */
	// End Line: 2156

	/* begin block 6 */
		// Start line: 2156
	/* end block 6 */
	// End Line: 2157

	/* begin block 7 */
		// Start line: 2157
	/* end block 7 */
	// End Line: 2158

	/* begin block 8 */
		// Start line: 2158
	/* end block 8 */
	// End Line: 2159

	return null;
}


// autogenerated function stub: 
// void faded_t5_smaller() /* faded_t5_smaller method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
void faded_t5_smaller() 
{ // line 1118, offset 0x80025d3c
	/* begin block 1 */
		// Start line: 2237
	/* end block 1 */
	// End Line: 2238

	/* begin block 2 */
		// Start line: 2238
	/* end block 2 */
	// End Line: 2239

	return null;
}


// autogenerated function stub: 
// void faded_t6_min() /* faded_t6_min method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
void faded_t6_min() 
{ // line 1125, offset 0x80025d50
	/* begin block 1 */
		// Start line: 2251
	/* end block 1 */
	// End Line: 2252

	/* begin block 2 */
		// Start line: 2252
	/* end block 2 */
	// End Line: 2253

	return null;
}


// autogenerated function stub: 
// void faded_tpage_calc() /* faded_tpage_calc method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
void faded_tpage_calc() 
{ // line 1128, offset 0x80025d54
	/* begin block 1 */
		// Start line: 2257
	/* end block 1 */
	// End Line: 2258

	/* begin block 2 */
		// Start line: 2258
	/* end block 2 */
	// End Line: 2259

	/* begin block 3 */
		// Start line: 2259
	/* end block 3 */
	// End Line: 2260

	/* begin block 4 */
		// Start line: 2260
	/* end block 4 */
	// End Line: 2261

	return null;
}


// autogenerated function stub: 
// void do_super_subdiv() /* do_super_subdiv method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
void do_super_subdiv() 
{ // line 1155, offset 0x80025db8
	/* begin block 1 */
		// Start line: 2311
	/* end block 1 */
	// End Line: 2312

	/* begin block 2 */
		// Start line: 2312
	/* end block 2 */
	// End Line: 2313

	/* begin block 3 */
		// Start line: 2313
	/* end block 3 */
	// End Line: 2314

	/* begin block 4 */
		// Start line: 2314
	/* end block 4 */
	// End Line: 2315

	/* begin block 5 */
		// Start line: 2315
	/* end block 5 */
	// End Line: 2316

	/* begin block 6 */
		// Start line: 2316
	/* end block 6 */
	// End Line: 2317

	/* begin block 7 */
		// Start line: 2317
	/* end block 7 */
	// End Line: 2318

	/* begin block 8 */
		// Start line: 2318
	/* end block 8 */
	// End Line: 2319

	/* begin block 9 */
		// Start line: 2319
	/* end block 9 */
	// End Line: 2320

	/* begin block 10 */
		// Start line: 2320
	/* end block 10 */
	// End Line: 2321

	/* begin block 11 */
		// Start line: 2321
	/* end block 11 */
	// End Line: 2322

	/* begin block 12 */
		// Start line: 2322
	/* end block 12 */
	// End Line: 2323

	/* begin block 13 */
		// Start line: 2323
	/* end block 13 */
	// End Line: 2324

	/* begin block 14 */
		// Start line: 2324
	/* end block 14 */
	// End Line: 2325

	/* begin block 15 */
		// Start line: 2325
	/* end block 15 */
	// End Line: 2326

	/* begin block 16 */
		// Start line: 2326
	/* end block 16 */
	// End Line: 2327

	/* begin block 17 */
		// Start line: 2327
	/* end block 17 */
	// End Line: 2328

	/* begin block 18 */
		// Start line: 2328
	/* end block 18 */
	// End Line: 2329

	/* begin block 19 */
		// Start line: 2329
	/* end block 19 */
	// End Line: 2330

	/* begin block 20 */
		// Start line: 2330
	/* end block 20 */
	// End Line: 2331

	/* begin block 21 */
		// Start line: 2331
	/* end block 21 */
	// End Line: 2332

	/* begin block 22 */
		// Start line: 2332
	/* end block 22 */
	// End Line: 2333

	/* begin block 23 */
		// Start line: 2333
	/* end block 23 */
	// End Line: 2334

	/* begin block 24 */
		// Start line: 2334
	/* end block 24 */
	// End Line: 2335

	/* begin block 25 */
		// Start line: 2335
	/* end block 25 */
	// End Line: 2336

	/* begin block 26 */
		// Start line: 2336
	/* end block 26 */
	// End Line: 2337

	/* begin block 27 */
		// Start line: 2337
	/* end block 27 */
	// End Line: 2338

	/* begin block 28 */
		// Start line: 2338
	/* end block 28 */
	// End Line: 2339

	/* begin block 29 */
		// Start line: 2339
	/* end block 29 */
	// End Line: 2340

	/* begin block 30 */
		// Start line: 2340
	/* end block 30 */
	// End Line: 2341

	/* begin block 31 */
		// Start line: 2341
	/* end block 31 */
	// End Line: 2342

	/* begin block 32 */
		// Start line: 2342
	/* end block 32 */
	// End Line: 2343

	/* begin block 33 */
		// Start line: 2343
	/* end block 33 */
	// End Line: 2344

	/* begin block 34 */
		// Start line: 2344
	/* end block 34 */
	// End Line: 2345

	/* begin block 35 */
		// Start line: 2345
	/* end block 35 */
	// End Line: 2346

	/* begin block 36 */
		// Start line: 2346
	/* end block 36 */
	// End Line: 2347

	/* begin block 37 */
		// Start line: 2347
	/* end block 37 */
	// End Line: 2348

	/* begin block 38 */
		// Start line: 2348
	/* end block 38 */
	// End Line: 2349

	/* begin block 39 */
		// Start line: 2349
	/* end block 39 */
	// End Line: 2350

	return null;
}


// autogenerated function stub: 
// void super_clip() /* super_clip method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
void super_clip() 
{ // line 1227, offset 0x80025e24
	/* begin block 1 */
		// Start line: 2455
	/* end block 1 */
	// End Line: 2456

	/* begin block 2 */
		// Start line: 2456
	/* end block 2 */
	// End Line: 2457

	return null;
}


// decompiled code
// original method signature: 
// void DRAW_DisplayTFace_S() /* DRAW_DisplayTFace_S method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
 // line 1231, offset 0x80025e2c
	/* begin block 1 */
		// Start line: 2463
	/* end block 1 */
	// End Line: 2464

	/* begin block 2 */
		// Start line: 2464
	/* end block 2 */
	// End Line: 2465

	/* begin block 3 */
		// Start line: 2465
	/* end block 3 */
	// End Line: 2466

	/* begin block 4 */
		// Start line: 2466
	/* end block 4 */
	// End Line: 2467

	/* begin block 5 */
		// Start line: 2467
	/* end block 5 */
	// End Line: 2468

	/* begin block 6 */
		// Start line: 2468
	/* end block 6 */
	// End Line: 2469

	/* begin block 7 */
		// Start line: 2469
	/* end block 7 */
	// End Line: 2470

	/* begin block 8 */
		// Start line: 2470
	/* end block 8 */
	// End Line: 2471

	/* begin block 9 */
		// Start line: 2471
	/* end block 9 */
	// End Line: 2472

	/* begin block 10 */
		// Start line: 2472
	/* end block 10 */
	// End Line: 2473

	/* begin block 11 */
		// Start line: 2473
	/* end block 11 */
	// End Line: 2474

	/* begin block 12 */
		// Start line: 2474
	/* end block 12 */
	// End Line: 2475

undefined4 DRAW_DisplayTFace_S(undefined4 param_1,uint param_2,int param_3)

{
  undefined4 uVar1;
  long *plVar2;
  int iVar3;
  uint uVar4;
  POLY_GT3 *in_t0;
  undefined4 in_t1;
  undefined4 in_t2;
  undefined4 in_t3;
  int in_t4;
  uint uVar5;
  int iVar6;
  int in_t6;
  int iVar7;
  uint unaff_s2;
  uint unaff_s3;
  ulong **unaff_s4;
  uint uVar8;
  int iVar9;
  uint uVar10;
  int iVar11;
  undefined4 unaff_retaddr;
  
  uVar8 = getCopControlWord(2,0xf800);
  copFunction(2,0x1400006);
  uVar4 = getCopReg(2,0x6000);
  uVar5 = getCopReg(2,0x6800);
  uVar10 = getCopReg(2,0x7000);
  if (((uVar10 & uVar5 & uVar4 & 0x80008000) != 0) ||
     ((0xf00200 - uVar10 & 0xf00200 - uVar5 & 0xf00200 - uVar4 & 0x80008000) != 0)) {
    return 0;
  }
  if ((uVar8 & unaff_s2) == 0) {
    iVar3 = getCopReg(2,0xc000);
    if (-1 < iVar3) {
      return 1;
    }
    uVar4 = getCopReg(2,0x8800);
    uVar8 = getCopReg(2,0x9000);
    uVar5 = getCopReg(2,0x9800);
    if ((int)uVar4 <= (int)uVar8) {
      uVar4 = uVar8;
    }
    if ((int)uVar5 <= (int)uVar4) {
      uVar5 = uVar4;
    }
    param_3 = (uVar5 & 0xfffc) + (int)*(char *)(in_t4 + 200) * 0x10;
    if (0x2fff < param_3) {
      return 0;
    }
    if (param_3 < 0xa0) {
      return 0;
    }
    iVar6 = getCopReg(2,0x6000);
    iVar7 = getCopReg(2,0x6800);
    iVar11 = getCopReg(2,0x7000);
    copFunction(2,0xf8002a);
    iVar9 = (iVar6 >> 0x10) - (iVar7 >> 0x10);
    in_t6 = (iVar11 >> 0x10) - (iVar7 >> 0x10);
    iVar3 = (iVar6 >> 0x10) - (iVar11 >> 0x10);
    if ((((-0x200 < iVar9) && (iVar9 < 0x200)) && (-0x200 < iVar3)) &&
       (((iVar3 < 0x200 && (-0x200 < in_t6)) && (in_t6 < 0x200)))) {
      iVar9 = (int)(short)iVar6 - (int)(short)iVar7;
      iVar3 = (int)(short)iVar6 - (int)(short)iVar11;
      if (((-0x400 < iVar9) && (in_t6 = (int)(short)iVar11 - (int)(short)iVar7, iVar9 < 0x400)) &&
         ((-0x400 < iVar3 && (((iVar3 < 0x400 && (-0x400 < in_t6)) && (in_t6 < 0x400)))))) {
        uVar4 = *(uint *)(param_3 + (int)unaff_s4);
        *(uint *)(param_3 + (int)unaff_s4) = (uint)in_t0 & param_2;
        in_t0->tag = uVar4 | unaff_s3;
        uVar1 = getCopReg(2,0xc);
        *(undefined4 *)&in_t0->x0 = uVar1;
        uVar1 = getCopReg(2,0xd);
        *(undefined4 *)&in_t0->x1 = uVar1;
        uVar1 = getCopReg(2,0xe);
        *(undefined4 *)&in_t0->x2 = uVar1;
        uVar1 = getCopReg(2,0x14);
        *(undefined4 *)&in_t0->r0 = uVar1;
        uVar1 = getCopReg(2,0x15);
        *(undefined4 *)&in_t0->r1 = uVar1;
        uVar1 = getCopReg(2,0x16);
        *(undefined4 *)&in_t0->r2 = uVar1;
        return 0;
      }
    }
  }
  *(POLY_GT3 **)(in_t4 + 0xdc) = in_t0;
  *(undefined4 *)(in_t4 + 0xe0) = in_t1;
  *(undefined4 *)(in_t4 + 0xe4) = in_t2;
  *(undefined4 *)(in_t4 + 0xe8) = in_t3;
  *(int *)(in_t4 + 0xec) = in_t6;
  *(uint *)(in_t4 + 0xf0) = param_2;
  *(int *)(in_t4 + 0xf4) = param_3;
  *(undefined4 *)(in_t4 + 0xf8) = unaff_retaddr;
  plVar2 = DRAW_Zclip_subdiv(in_t0,unaff_s4,0);
  if (plVar2 == (long *)0x0) {
    return 1;
  }
  return 0;
}



// autogenerated function stub: 
// void rLL2() /* rLL2 method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
void rLL2() 
{ // line 1382, offset 0x80025ff8
	/* begin block 1 */
		// Start line: 2765
	/* end block 1 */
	// End Line: 2766

	return null;
}


// autogenerated function stub: 
// void rLL2A() /* rLL2A method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
void rLL2A() 
{ // line 1385, offset 0x80026000
	/* begin block 1 */
		// Start line: 2771
	/* end block 1 */
	// End Line: 2772

	return null;
}


// autogenerated function stub: 
// void subdiv_begin() /* subdiv_begin method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
void subdiv_begin() 
{ // line 1388, offset 0x80026008
	/* begin block 1 */
		// Start line: 2777
	/* end block 1 */
	// End Line: 2778

	/* begin block 2 */
		// Start line: 2778
	/* end block 2 */
	// End Line: 2779

	/* begin block 3 */
		// Start line: 2779
	/* end block 3 */
	// End Line: 2780

	/* begin block 4 */
		// Start line: 2780
	/* end block 4 */
	// End Line: 2781

	/* begin block 5 */
		// Start line: 2781
	/* end block 5 */
	// End Line: 2782

	/* begin block 6 */
		// Start line: 2812
	/* end block 6 */
	// End Line: 2813

	/* begin block 7 */
		// Start line: 2813
	/* end block 7 */
	// End Line: 2814

	/* begin block 8 */
		// Start line: 2814
	/* end block 8 */
	// End Line: 2815

	/* begin block 9 */
		// Start line: 2815
	/* end block 9 */
	// End Line: 2816

	/* begin block 10 */
		// Start line: 2831
	/* end block 10 */
	// End Line: 2832

	/* begin block 11 */
		// Start line: 2832
	/* end block 11 */
	// End Line: 2833

	/* begin block 12 */
		// Start line: 2833
	/* end block 12 */
	// End Line: 2834

	/* begin block 13 */
		// Start line: 2856
	/* end block 13 */
	// End Line: 2857

	/* begin block 14 */
		// Start line: 2857
	/* end block 14 */
	// End Line: 2858

	/* begin block 15 */
		// Start line: 2858
	/* end block 15 */
	// End Line: 2859

	/* begin block 16 */
		// Start line: 2859
	/* end block 16 */
	// End Line: 2860

	/* begin block 17 */
		// Start line: 2860
	/* end block 17 */
	// End Line: 2861

	/* begin block 18 */
		// Start line: 2861
	/* end block 18 */
	// End Line: 2862

	/* begin block 19 */
		// Start line: 2862
	/* end block 19 */
	// End Line: 2863

	/* begin block 20 */
		// Start line: 2863
	/* end block 20 */
	// End Line: 2864

	/* begin block 21 */
		// Start line: 2864
	/* end block 21 */
	// End Line: 2865

	/* begin block 22 */
		// Start line: 2865
	/* end block 22 */
	// End Line: 2866

	/* begin block 23 */
		// Start line: 2866
	/* end block 23 */
	// End Line: 2867

	/* begin block 24 */
		// Start line: 2867
	/* end block 24 */
	// End Line: 2868

	/* begin block 25 */
		// Start line: 2868
	/* end block 25 */
	// End Line: 2869

	/* begin block 26 */
		// Start line: 2869
	/* end block 26 */
	// End Line: 2870

	/* begin block 27 */
		// Start line: 2870
	/* end block 27 */
	// End Line: 2871

	/* begin block 28 */
		// Start line: 2871
	/* end block 28 */
	// End Line: 2872

	/* begin block 29 */
		// Start line: 2872
	/* end block 29 */
	// End Line: 2873

	/* begin block 30 */
		// Start line: 2873
	/* end block 30 */
	// End Line: 2874

	/* begin block 31 */
		// Start line: 2874
	/* end block 31 */
	// End Line: 2875

	/* begin block 32 */
		// Start line: 2875
	/* end block 32 */
	// End Line: 2876

	/* begin block 33 */
		// Start line: 2876
	/* end block 33 */
	// End Line: 2877

	/* begin block 34 */
		// Start line: 2877
	/* end block 34 */
	// End Line: 2878

	/* begin block 35 */
		// Start line: 2878
	/* end block 35 */
	// End Line: 2879

	/* begin block 36 */
		// Start line: 2879
	/* end block 36 */
	// End Line: 2880

	/* begin block 37 */
		// Start line: 2880
	/* end block 37 */
	// End Line: 2881

	/* begin block 38 */
		// Start line: 2881
	/* end block 38 */
	// End Line: 2882

	/* begin block 39 */
		// Start line: 2882
	/* end block 39 */
	// End Line: 2883

	return null;
}


// autogenerated function stub: 
// void not_liquid_26() /* not_liquid_26 method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
void not_liquid_26() 
{ // line 1495, offset 0x800260ec
	/* begin block 1 */
		// Start line: 2991
	/* end block 1 */
	// End Line: 2992

	/* begin block 2 */
		// Start line: 2992
	/* end block 2 */
	// End Line: 2993

	return null;
}


// autogenerated function stub: 
// void next_tface_subdiv() /* next_tface_subdiv method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
void next_tface_subdiv() 
{ // line 1683, offset 0x800265e4
	/* begin block 1 */
		// Start line: 3367
	/* end block 1 */
	// End Line: 3368

	/* begin block 2 */
		// Start line: 3368
	/* end block 2 */
	// End Line: 3369

	return null;
}


// decompiled code
// original method signature: 
// void DRAW_DisplaySubdivPolytope_S() /* DRAW_DisplaySubdivPolytope_S method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
 // line 1691, offset 0x800265fc
	/* begin block 1 */
		// Start line: 3383
	/* end block 1 */
	// End Line: 3384

	/* begin block 2 */
		// Start line: 3384
	/* end block 2 */
	// End Line: 3385

	/* begin block 3 */
		// Start line: 3385
	/* end block 3 */
	// End Line: 3386

	/* begin block 4 */
		// Start line: 3386
	/* end block 4 */
	// End Line: 3387

/* WARNING: Instruction at (ram,0x80026a80) overlaps instruction at (ram,0x80026a7c)
    */
/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */

void DRAW_DisplaySubdivPolytope_S(int *param_1,int param_2)

{
  char cVar1;
  short sVar2;
  bool bVar3;
  undefined4 uVar4;
  ushort uVar5;
  undefined4 in_zero;
  undefined *in_at;
  undefined uVar6;
  uint uVar7;
  uint uVar8;
  uint uVar9;
  undefined4 extraout_v1;
  int iVar10;
  uint uVar11;
  undefined4 uVar12;
  int *piVar13;
  uint uVar14;
  int *piVar15;
  int *piVar16;
  uint *in_t0;
  uint *puVar17;
  int iVar18;
  int iVar19;
  uint uVar20;
  uint uVar21;
  undefined4 uVar22;
  int iVar23;
  int iVar24;
  uint uVar25;
  undefined4 unaff_s0;
  undefined4 unaff_s1;
  uint *puVar26;
  undefined4 unaff_s2;
  uint uVar27;
  undefined4 unaff_s3;
  int unaff_s4;
  undefined4 unaff_s5;
  int iVar28;
  undefined4 unaff_s6;
  uint *puVar29;
  undefined4 unaff_s7;
  uint uVar30;
  int iVar31;
  int iVar32;
  int iVar33;
  uint uVar34;
  undefined4 uVar35;
  undefined4 unaff_s8;
  undefined4 unaff_retaddr;
  longlong lVar36;
  undefined8 uVar37;
  
  iVar18 = 0x1f800000;
  DAT_1f8000ac = 0;
  iVar28 = *(int *)(param_2 + 0x1c);
  iVar10 = (int)*(short *)(*param_1 + 0xc);
  puVar26 = *(uint **)(*param_1 + 8);
  DAT_1f800014 = unaff_s8;
  DAT_1f800088 = unaff_s0;
  _DAT_1f80008c = unaff_s1;
  DAT_1f800090 = unaff_s2;
  DAT_1f800094 = unaff_s3;
  DAT_1f800098 = unaff_s4;
  DAT_1f80009c = unaff_s5;
  DAT_1f8000a0 = unaff_s6;
  _DAT_1f8000a4 = unaff_s7;
  _DAT_1f8000a8 = unaff_retaddr;
  if (iVar10 != 0) {
    puVar29 = puVar26 + iVar10 * 3;
    iVar10 = *(int *)(param_2 + 0x34);
    uVar14 = 0xffffff;
    do {
      while( true ) {
        uVar7 = puVar26[1];
        uVar21 = (int)uVar7 >> 0x10;
        if ((uVar21 & 4) == 0) break;
skip_tface:
        *(undefined4 *)(iVar18 + 0xac) = 0;
joined_r0x80026df0:
        puVar26 = puVar26 + 3;
        if (puVar29 <= puVar26) {
          return;
        }
      }
      piVar16 = (int *)(iVar28 + (*puVar26 & 0xffff) * 0xc);
      setCopReg(2,in_zero,*piVar16);
      setCopReg(2,in_at,piVar16[1]);
      copFunction(2,0x180001);
      piVar13 = (int *)(iVar28 + (*puVar26 >> 0x10) * 0xc);
      iVar24 = *piVar13;
      iVar31 = piVar13[1];
      uVar35 = getCopReg(2,8);
      *(undefined4 *)(iVar18 + 0xbc) = uVar35;
      setCopReg(2,0,iVar24);
      setCopReg(2,0x800,iVar31);
      uVar27 = getCopControlWord(2,0xf800);
      copFunction(2,0x180001);
      piVar15 = (int *)(iVar28 + (uVar7 & 0xffff) * 0xc);
      iVar24 = *piVar15;
      iVar31 = piVar15[1];
      uVar35 = getCopReg(2,8);
      *(undefined4 *)(iVar18 + 0xc0) = uVar35;
      setCopReg(2,0,iVar24);
      setCopReg(2,0x800,iVar31);
      uVar8 = getCopControlWord(2,0xf800);
      copFunction(2,0x180001);
      puVar17 = (uint *)(*(short *)((int)puVar26 + 10) + iVar10);
      uVar25 = *puVar17;
      uVar30 = puVar17[1];
      uVar11 = puVar17[2];
      uVar9 = getCopControlWord(2,0xf800);
      uVar35 = getCopReg(2,8);
      *(undefined4 *)(iVar18 + 0xc4) = uVar35;
      uVar9 = uVar27 | uVar8 | uVar9;
      copFunction(2,0x1400006);
      in_t0[3] = uVar25;
      in_t0[6] = uVar30;
      in_t0[9] = uVar11;
      *(uint *)(iVar18 + 0xd8) = uVar11;
      iVar24 = getCopReg(2,0xc000);
      if (-1 < iVar24) {
        in_at = &UNK_00026000;
        uVar8 = uVar9 & 0x26000;
        uVar9 = 0x6000;
        if (uVar8 != 0) {
          iVar24 = getCopReg(2,0x8800);
          iVar31 = getCopReg(2,0x9000);
          iVar33 = getCopReg(2,0x9800);
          in_at = (undefined *)(uint)(iVar24 < 0x801);
          if ((iVar24 < 0x801) && (((0x9f < iVar24 || (0x9f < iVar31)) || (0x9f < iVar33))))
          goto do_poly;
        }
        goto skip_tface;
      }
do_poly:
      uVar8 = getCopReg(2,0x6000);
      uVar11 = getCopReg(2,0x6800);
      uVar25 = getCopReg(2,0x7000);
      if (((uVar25 & uVar11 & uVar8 & 0x80008000) != 0) ||
         ((0xf00200 - uVar25 & 0xf00200 - uVar11 & 0xf00200 - uVar8 & 0x80008000) != 0))
      goto skip_tface;
      iVar24 = piVar13[2];
      uVar27 = piVar16[2];
      *(int *)(iVar18 + 0x84) = piVar15[2];
      *(int *)(iVar18 + 0x80) = iVar24;
      *(uint *)(iVar18 + 0x7c) = uVar27;
      iVar24 = *piVar16;
      if (*(int *)(iVar18 + 0x18) != 0) {
        uVar35 = getCopReg(2,8);
        *(undefined4 *)(iVar18 + 0xc4) = uVar35;
        iVar31 = (int)(short)iVar24 - *(int *)(iVar18 + 0x1c);
        iVar24 = (iVar24 >> 0x10) - *(int *)(iVar18 + 0x20);
        if (iVar31 < 0) {
          iVar31 = -iVar31;
        }
        if (iVar24 < 0) {
          iVar24 = -iVar24;
        }
        iVar33 = *(int *)(iVar18 + 0x18);
        if (iVar24 <= iVar31) {
          iVar24 = iVar31;
        }
        iVar31 = (int)*(short *)(piVar16 + 1) - *(int *)(iVar18 + 0x24);
        if (iVar31 < 0) {
          iVar31 = -iVar31;
        }
        if (iVar24 <= iVar31) {
          iVar24 = iVar31;
        }
        if (iVar24 < *(short *)(iVar33 + 0x10)) {
          setCopReg(2,uVar8,*(undefined4 *)(iVar33 + 4));
          setCopReg(2,uVar11,*(undefined4 *)(iVar33 + 8));
          setCopReg(2,uVar25,*(undefined4 *)(iVar33 + 0xc));
          setCopReg(2,0x4000,(*(short *)(iVar33 + 0x10) - iVar24) * 0x10);
          setCopReg(2,0x3000,uVar27);
          uVar27 = uVar27 & uVar14;
          setCopReg(2,0xc800,(uVar27 & 0xff) << 4);
          setCopReg(2,0xd000,(uVar27 & 0xff00) >> 4);
          setCopReg(2,0xd800,(uVar27 >> 0x10) << 4);
          copFunction(2,0x1a8003e);
          uVar35 = getCopReg(2,0x16);
          *(undefined4 *)(iVar18 + 0x7c) = uVar35;
        }
        iVar24 = (int)(short)*piVar13 - *(int *)(iVar18 + 0x1c);
        iVar31 = (*piVar13 >> 0x10) - *(int *)(iVar18 + 0x20);
        if (iVar24 < 0) {
          iVar24 = -iVar24;
        }
        if (iVar31 < 0) {
          iVar31 = -iVar31;
        }
        iVar33 = *(int *)(iVar18 + 0x18);
        if (iVar31 <= iVar24) {
          iVar31 = iVar24;
        }
        iVar24 = (int)*(short *)(piVar13 + 1) - *(int *)(iVar18 + 0x24);
        if (iVar24 < 0) {
          iVar24 = -iVar24;
        }
        if (iVar31 <= iVar24) {
          iVar31 = iVar24;
        }
        if (iVar31 < *(short *)(iVar33 + 0x10)) {
          setCopReg(2,uVar8,*(undefined4 *)(iVar33 + 4));
          setCopReg(2,uVar11,*(undefined4 *)(iVar33 + 8));
          setCopReg(2,uVar25,*(undefined4 *)(iVar33 + 0xc));
          setCopReg(2,0x4000,(*(short *)(iVar33 + 0x10) - iVar31) * 0x10);
          setCopReg(2,0x3000,*(uint *)(iVar18 + 0x80));
          uVar27 = *(uint *)(iVar18 + 0x80) & uVar14;
          setCopReg(2,0xc800,(uVar27 & 0xff) << 4);
          setCopReg(2,0xd000,(uVar27 & 0xff00) >> 4);
          setCopReg(2,0xd800,(uVar27 >> 0x10) << 4);
          copFunction(2,0x1a8003e);
          uVar35 = getCopReg(2,0x16);
          *(undefined4 *)(iVar18 + 0x80) = uVar35;
        }
        iVar24 = (int)(short)*piVar15 - *(int *)(iVar18 + 0x1c);
        iVar31 = (*piVar15 >> 0x10) - *(int *)(iVar18 + 0x20);
        if (iVar24 < 0) {
          iVar24 = -iVar24;
        }
        if (iVar31 < 0) {
          iVar31 = -iVar31;
        }
        iVar33 = *(int *)(iVar18 + 0x18);
        if (iVar31 <= iVar24) {
          iVar31 = iVar24;
        }
        iVar24 = (int)*(short *)(piVar15 + 1) - *(int *)(iVar18 + 0x24);
        iVar19 = (int)*(short *)(iVar33 + 0x10);
        if (iVar24 < 0) {
          iVar24 = -iVar24;
        }
        if (iVar31 <= iVar24) {
          iVar31 = iVar24;
        }
        in_at = (undefined *)(uint)(iVar31 < iVar19);
        if (iVar31 < iVar19) {
          setCopReg(2,uVar8,*(undefined4 *)(iVar33 + 4));
          setCopReg(2,uVar11,*(undefined4 *)(iVar33 + 8));
          setCopReg(2,uVar25,*(undefined4 *)(iVar33 + 0xc));
          setCopReg(2,0x4000,(iVar19 - iVar31) * 0x10);
          setCopReg(2,0x3000,*(uint *)(iVar18 + 0x84));
          uVar27 = *(uint *)(iVar18 + 0x84) & uVar14;
          setCopReg(2,0xc800,(uVar27 & 0xff) << 4);
          setCopReg(2,0xd000,(uVar27 & 0xff00) >> 4);
          setCopReg(2,0xd800,(uVar27 >> 0x10) << 4);
          copFunction(2,0x1a8003e);
          uVar35 = getCopReg(2,0x16);
          *(undefined4 *)(iVar18 + 0x84) = uVar35;
        }
        setCopReg(2,in_t0,*(undefined4 *)(iVar18 + 0xc4));
      }
      if ((uVar21 & 8) != 0) {
no_subdiv:
        *(undefined4 *)(iVar18 + 0xac) = 0;
        if ((uVar9 & 0x66000) != 0) goto subdiv_begin;
        *(undefined4 *)(iVar18 + 0xac) = 0;
        uVar27 = getCopReg(2,0x8800);
        uVar34 = getCopReg(2,0x9000);
        uVar20 = getCopReg(2,0x9800);
        uVar9 = uVar34;
        if ((int)uVar27 <= (int)uVar34) {
          uVar9 = uVar27;
          uVar27 = uVar34;
        }
        uVar34 = uVar20;
        if ((int)uVar20 <= (int)uVar27) {
          uVar34 = uVar27;
          uVar27 = uVar20;
        }
        in_at = (undefined *)(uint)((int)uVar9 < (int)uVar27);
        if ((int)uVar9 >= (int)uVar27) {
          uVar9 = uVar27;
        }
        uVar34 = uVar34 & 0xfffc;
        iVar24 = uVar34 + ((int)uVar7 >> 0x18) * 0x10;
        if (((iVar24 < 1) || (uVar34 < 0xa0)) ||
           ((0x2fff < iVar24 ||
            (bVar3 = (int)uVar9 < *(int *)(iVar18 + 0xd0), in_at = (undefined *)(uint)bVar3, !bVar3)
            ))) goto skip_tface;
        in_at = (undefined *)(uint)((int)uVar9 < 0x280);
        if ((int)uVar9 < 0x280) goto subdiv_begin;
        if ((int)uVar34 < *(int *)(iVar18 + 0xb0)) {
          uVar35 = getCopReg(2,0xa800);
          if ((uVar21 & 8) != 0) {
            uVar22 = getCopReg(2,0xb000);
            uVar12 = getCopReg(2,0xb800);
            setCopReg(2,0xa800,0);
            setCopReg(2,0xb000,0);
            setCopReg(2,0xb800,0);
            iVar31 = getCopReg(2,0x8800);
            iVar31 = 0x1000 - iVar31;
            if (iVar31 < 0x1001) {
              if (iVar31 < 1) {
                iVar31 = 0;
              }
              setCopReg(2,piVar15,*(undefined4 *)(iVar18 + 0x7c));
              setCopReg(2,0x4000,iVar31);
              copFunction(2,0x780010);
              uVar4 = getCopReg(2,0x16);
              *(undefined4 *)(iVar18 + 0x7c) = uVar4;
            }
            iVar31 = getCopReg(2,0x9000);
            iVar31 = 0x1000 - iVar31;
            if (iVar31 < 0x1001) {
              if (iVar31 < 1) {
                iVar31 = 0;
              }
              setCopReg(2,piVar15,*(undefined4 *)(iVar18 + 0x80));
              setCopReg(2,0x4000,iVar31);
              copFunction(2,0x780010);
              uVar4 = getCopReg(2,0x16);
              *(undefined4 *)(iVar18 + 0x80) = uVar4;
            }
            iVar31 = getCopReg(2,0x9800);
            iVar31 = 0x1000 - iVar31;
            in_at = (undefined *)(uint)(0x1000 < iVar31);
            if (0x1000 >= iVar31) {
              if (iVar31 < 1) {
                iVar31 = 0;
              }
              setCopReg(2,piVar15,*(undefined4 *)(iVar18 + 0x84));
              setCopReg(2,0x4000,iVar31);
              copFunction(2,0x780010);
              uVar4 = getCopReg(2,0x16);
              *(undefined4 *)(iVar18 + 0x84) = uVar4;
            }
            setCopReg(2,0xa800,uVar35);
            setCopReg(2,0xb000,uVar22);
            setCopReg(2,0xb800,uVar12);
          }
          uVar21 = *(uint *)(iVar18 + 0x80);
          uVar7 = *(uint *)(iVar18 + 0x7c);
          in_t0[7] = *(uint *)(iVar18 + 0x84);
          in_t0[4] = uVar21;
          in_t0[1] = uVar7;
          in_t0[8] = uVar25;
          uVar7 = *(uint *)(iVar24 + unaff_s4);
          *(uint *)(iVar24 + unaff_s4) = (uint)in_t0 & uVar14;
          *in_t0 = uVar7 | 0x9000000;
          in_t0[2] = uVar8;
          in_t0[5] = uVar11;
          in_t0 = in_t0 + 10;
        }
        else {
          setCopReg(2,piVar15,*(undefined4 *)(iVar18 + 0x84));
          setCopReg(2,in_t0,*(undefined4 *)(iVar18 + 0xc4));
          puVar17 = (uint *)(iVar24 + unaff_s4);
          uVar7 = *puVar17;
          copFunction(2,0x780010);
          *puVar17 = (uint)in_t0 & uVar14;
          *in_t0 = uVar7 | 0x9000000;
          uVar7 = getCopReg(2,0x16);
          in_t0[7] = uVar7;
          setCopReg(2,puVar17,*(undefined4 *)(iVar18 + 0x80));
          setCopReg(2,in_t0,*(undefined4 *)(iVar18 + 0xc0));
          copFunction(2,0x780010);
          in_t0[8] = uVar25;
          in_t0[5] = uVar11;
          cVar1 = *(char *)(iVar18 + 0x7f);
          uVar7 = getCopReg(2,0x16);
          in_t0[4] = uVar7;
          setCopReg(2,puVar17,*(undefined4 *)(iVar18 + 0x7c));
          setCopReg(2,in_t0,*(undefined4 *)(iVar18 + 0xbc));
          uVar35 = *(undefined4 *)(iVar18 + 0xcc);
          in_t0[2] = uVar8;
          copFunction(2,0x780010);
          bVar3 = *(int *)(iVar18 + 0xb8) < (int)uVar34;
          in_at = (undefined *)(uint)bVar3;
          puVar17 = in_t0 + 10;
          if ((bVar3) && ((uVar21 & 1 | (int)cVar1 & 2U) == 0)) {
            uVar5 = (ushort)(uVar30 >> 0x10);
            if (*(char *)(iVar18 + 0xda) == '\0') {
              setCopReg(2,0x3000,uVar35);
              uVar7 = getCopReg(2,0xb000);
              in_t0[1] = uVar7 | 0x2000000;
              iVar33 = *(int *)(iVar18 + 0xcc);
              copFunction(2,0x780010);
              *(ushort *)((int)in_t0 + 0x1a) = uVar5 & 0xff9f | 0x20;
              uVar35 = *(undefined4 *)(iVar18 + 0xc0);
              in_t0[0xd] = uVar8;
              iVar31 = getCopReg(2,0xb000);
              in_t0[0xc] = iVar33 - iVar31 | 0x30000000;
              setCopReg(2,0x4000,uVar35);
              copFunction(2,0x780010);
              uVar35 = *(undefined4 *)(iVar18 + 0xc4);
              in_t0[0xf] = uVar11;
              in_t0[0xb] = 0xe1000640;
              iVar31 = getCopReg(2,0xb000);
              in_t0[0xe] = iVar33 - iVar31;
              setCopReg(2,0x4000,uVar35);
              copFunction(2,0x780010);
              uVar7 = *(uint *)(iVar24 + unaff_s4);
              *(uint *)(iVar24 + unaff_s4) = (uint)puVar17 & uVar14;
              in_at = (undefined *)0x7000000;
              *puVar17 = uVar7 | 0x7000000;
              in_t0[0x11] = uVar25;
              iVar24 = getCopReg(2,0xb000);
              in_t0[0x10] = iVar33 - iVar24;
              in_t0 = in_t0 + 0x12;
            }
            else {
              setCopReg(2,0x3000,uVar35);
              uVar7 = getCopReg(2,0xb000);
              in_t0[1] = uVar7 | 0x2000000;
              iVar31 = *(int *)(iVar18 + 0xcc);
              if ((uVar7 & 0xff000000 | 0x2000000) != 0x36000000) {
                getCopReg(2,0xb000);
              }
              copFunction(2,0x780010);
              *(ushort *)((int)in_t0 + 0x1a) = uVar5 & 0xff9f | 0x20;
              uVar35 = *(undefined4 *)(iVar18 + 0xc0);
              in_t0[0xc] = uVar8;
              iVar33 = getCopReg(2,0xb000);
              in_t0[0xb] = iVar31 - iVar33 | 0x34000000;
              setCopReg(2,0x4000,uVar35);
              in_t0[0x10] = uVar30 & 0xff9fffff;
              copFunction(2,0x780010);
              in_t0[0xd] = in_t0[3];
              in_t0[0x13] = in_t0[9];
              *(undefined2 *)((int)in_t0 + 0x36) = *(undefined2 *)(iVar18 + 0xd4);
              uVar35 = *(undefined4 *)(iVar18 + 0xc4);
              in_t0[0xf] = uVar11;
              iVar33 = getCopReg(2,0xb000);
              in_t0[0xe] = iVar31 - iVar33;
              setCopReg(2,0x4000,uVar35);
              copFunction(2,0x780010);
              uVar7 = *(uint *)(iVar24 + unaff_s4);
              *(uint *)(iVar24 + unaff_s4) = (uint)puVar17 & uVar14;
              in_at = (undefined *)0x9000000;
              *puVar17 = uVar7 | 0x9000000;
              in_t0[0x12] = uVar25;
              iVar24 = getCopReg(2,0xb000);
              in_t0[0x11] = iVar31 - iVar24;
              in_t0 = in_t0 + 0x14;
            }
          }
          else {
            uVar7 = getCopReg(2,0x16);
            in_t0[1] = uVar7;
            in_t0 = puVar17;
          }
        }
        goto joined_r0x80026df0;
      }
      if ((uVar21 & 2) == 0) {
        iVar24 = getCopReg(2,0xc000);
code_r0x80026a88:
        *(undefined **)(iVar18 + 0xac) = &DAT_00004e20 + iVar24;
        if (-1 < (int)(&DAT_00004e20 + iVar24)) goto no_subdiv;
      }
      else {
        iVar24 = getCopReg(2,0xc000);
        if (*(int *)(iVar18 + 0xac) == 0) goto code_r0x80026a88;
      }
subdiv_begin:
      uVar35 = getCopReg(2,0xa800);
      if ((uVar21 & 8) != 0) {
        uVar22 = getCopReg(2,0xb000);
        uVar12 = getCopReg(2,0xb800);
        setCopReg(2,0xa800,0);
        setCopReg(2,0xb000,0);
        setCopReg(2,0xb800,0);
        iVar24 = getCopReg(2,0x8800);
        iVar24 = 0x1000 - iVar24;
        if (iVar24 < 0x1001) {
          if (iVar24 < 1) {
            iVar24 = 0;
          }
          setCopReg(2,piVar15,*(undefined4 *)(iVar18 + 0x7c));
          setCopReg(2,0x4000,iVar24);
          copFunction(2,0x780010);
          uVar4 = getCopReg(2,0x16);
          *(undefined4 *)(iVar18 + 0x7c) = uVar4;
        }
        iVar24 = getCopReg(2,0x9000);
        iVar24 = 0x1000 - iVar24;
        if (iVar24 < 0x1001) {
          if (iVar24 < 1) {
            iVar24 = 0;
          }
          setCopReg(2,piVar15,*(undefined4 *)(iVar18 + 0x80));
          setCopReg(2,0x4000,iVar24);
          copFunction(2,0x780010);
          uVar4 = getCopReg(2,0x16);
          *(undefined4 *)(iVar18 + 0x80) = uVar4;
        }
        iVar24 = getCopReg(2,0x9800);
        iVar24 = 0x1000 - iVar24;
        in_at = (undefined *)(uint)(0x1000 < iVar24);
        if (0x1000 >= iVar24) {
          if (iVar24 < 1) {
            iVar24 = 0;
          }
          setCopReg(2,piVar15,*(undefined4 *)(iVar18 + 0x84));
          setCopReg(2,0x4000,iVar24);
          copFunction(2,0x780010);
          uVar4 = getCopReg(2,0x16);
          *(undefined4 *)(iVar18 + 0x84) = uVar4;
        }
        setCopReg(2,0xa800,uVar35);
        setCopReg(2,0xb000,uVar22);
        setCopReg(2,0xb800,uVar12);
      }
      iVar33 = *piVar16;
      iVar32 = (int)*(short *)(piVar16 + 1);
      iVar19 = *piVar13;
      iVar31 = (int)*(short *)(piVar13 + 1);
      iVar24 = *piVar15;
      iVar23 = (int)*(short *)(piVar15 + 1);
      *(int *)(iVar18 + 0x30) = iVar19;
      *(int *)(iVar18 + 0x34) = iVar31;
      *(int *)(iVar18 + 0x28) = iVar33;
      *(int *)(iVar18 + 0x2c) = iVar32;
      *(int *)(iVar18 + 0x38) = iVar24;
      *(int *)(iVar18 + 0x3c) = iVar23;
      *(undefined2 *)(iVar18 + 0x40) = (short)((int)(short)iVar33 + (int)(short)iVar19 >> 1);
      *(undefined2 *)(iVar18 + 0x42) = (short)((iVar33 >> 0x10) + (iVar19 >> 0x10) >> 1);
      *(undefined2 *)(iVar18 + 0x44) = (short)(iVar32 + iVar31 >> 1);
      *(undefined2 *)(iVar18 + 0x48) = (short)((int)(short)iVar19 + (int)(short)iVar24 >> 1);
      *(undefined2 *)(iVar18 + 0x4a) = (short)((iVar19 >> 0x10) + (iVar24 >> 0x10) >> 1);
      *(undefined2 *)(iVar18 + 0x4c) = (short)(iVar31 + iVar23 >> 1);
      *(undefined2 *)(iVar18 + 0x50) = (short)((int)(short)iVar24 + (int)(short)iVar33 >> 1);
      *(undefined2 *)(iVar18 + 0x52) = (short)((iVar24 >> 0x10) + (iVar33 >> 0x10) >> 1);
      *(undefined2 *)(iVar18 + 0x54) = (short)(iVar23 + iVar32 >> 1);
      uVar11 = *puVar17;
      uVar25 = puVar17[1];
      uVar7 = puVar17[2];
      uVar21 = uVar11 >> 8 & 0xff;
      uVar8 = uVar25 >> 8 & 0xff;
      uVar9 = uVar7 >> 8 & 0xff;
      *(uint *)(iVar18 + 0x58) = uVar11;
      *(uint *)(iVar18 + 0x5c) = uVar25;
      *(uint *)(iVar18 + 0x60) = uVar7;
      *(undefined *)(iVar18 + 100) = (char)((uVar11 & 0xff) + (uVar25 & 0xff) >> 1);
      *(undefined *)(iVar18 + 0x65) = (char)(uVar21 + uVar8 >> 1);
      *(undefined *)(iVar18 + 0x68) = (char)((uVar25 & 0xff) + (uVar7 & 0xff) >> 1);
      *(undefined *)(iVar18 + 0x69) = (char)(uVar8 + uVar9 >> 1);
      *(undefined *)(iVar18 + 0x6c) = (char)((uVar7 & 0xff) + (uVar11 & 0xff) >> 1);
      *(undefined *)(iVar18 + 0x6d) = (char)(uVar9 + uVar21 >> 1);
      uVar7 = *(uint *)(iVar18 + 0x7c);
      uVar9 = *(uint *)(iVar18 + 0x80);
      uVar27 = *(uint *)(iVar18 + 0x84);
      uVar21 = uVar7 >> 8 & 0xff;
      uVar8 = uVar7 >> 0x10 & 0xff;
      *(uint *)(iVar18 + 0x7c) = uVar7;
      uVar11 = uVar9 >> 8 & 0xff;
      uVar25 = uVar9 >> 0x10 & 0xff;
      *(uint *)(iVar18 + 0x80) = uVar9;
      uVar30 = uVar27 >> 8 & 0xff;
      uVar20 = uVar27 >> 0x10 & 0xff;
      *(uint *)(iVar18 + 0x84) = uVar27;
      uVar6 = (undefined)(uVar27 >> 0x18);
      *(undefined *)(iVar18 + 0x73) = uVar6;
      *(undefined *)(iVar18 + 0x77) = uVar6;
      *(undefined *)(iVar18 + 0x7b) = uVar6;
      *(undefined *)(iVar18 + 0x70) = (char)((int)((uVar7 & 0xff) + (uVar9 & 0xff)) >> 1);
      *(undefined *)(iVar18 + 0x71) = (char)((int)(uVar21 + uVar11) >> 1);
      *(undefined *)(iVar18 + 0x72) = (char)((int)(uVar8 + uVar25) >> 1);
      *(undefined *)(iVar18 + 0x74) = (char)((int)((uVar9 & 0xff) + (uVar27 & 0xff)) >> 1);
      *(undefined *)(iVar18 + 0x75) = (char)((int)(uVar11 + uVar30) >> 1);
      *(undefined *)(iVar18 + 0x76) = (char)((int)(uVar25 + uVar20) >> 1);
      *(undefined *)(iVar18 + 0x78) = (char)((int)((uVar7 & 0xff) + (uVar27 & 0xff)) >> 1);
      *(undefined *)(iVar18 + 0x79) = (char)((int)(uVar21 + uVar30) >> 1);
      *(undefined *)(iVar18 + 0x7a) = (char)((int)(uVar8 + uVar20) >> 1);
      sVar2 = *(short *)(iVar18 + 0x5e);
      uVar6 = *(undefined *)((int)puVar26 + 7);
      *(short *)(iVar18 + 0x66) = sVar2;
      *(short *)(iVar18 + 0x6a) = sVar2;
      *(short *)(iVar18 + 0x6e) = *(short *)(iVar18 + 0x5a);
      *(undefined *)(iVar18 + 200) = uVar6;
      setCopReg(2,in_zero,*(undefined4 *)(iVar18 + 0x28));
      setCopReg(2,in_at,*(undefined4 *)(iVar18 + 0x2c));
      setCopReg(2,(int)*(short *)(iVar18 + 0x5a),*(undefined4 *)(iVar18 + 0x40));
      setCopReg(2,(int)sVar2,*(undefined4 *)(iVar18 + 0x44));
      setCopReg(2,piVar13,*(undefined4 *)(iVar18 + 0x50));
      setCopReg(2,uVar14,*(undefined4 *)(iVar18 + 0x54));
      copFunction(2,0x280030);
      uVar7 = *(uint *)(iVar18 + 100);
      uVar21 = *(uint *)(iVar18 + 0x6c);
      in_t0[3] = *(uint *)(iVar18 + 0x58);
      in_t0[6] = uVar7;
      in_t0[9] = uVar21;
      setCopReg(2,iVar28,*(undefined4 *)(iVar18 + 0x70));
      setCopReg(2,puVar29,*(undefined4 *)(iVar18 + 0x78));
      setCopReg(2,0xa000,*(undefined4 *)(iVar18 + 0x7c));
      setCopReg(2,0x3000,*(undefined4 *)(iVar18 + 0x7c));
      lVar36 = DRAW_DisplayTFace_S();
      if (lVar36 < 0x100000000) {
        setCopReg(2,in_zero,*(undefined4 *)(iVar18 + 0x50));
        setCopReg(2,in_at,*(undefined4 *)(iVar18 + 0x54));
        setCopReg(2,(int)((ulonglong)lVar36 >> 0x20),*(undefined4 *)(iVar18 + 0x48));
        setCopReg(2,(int)lVar36,*(undefined4 *)(iVar18 + 0x4c));
        setCopReg(2,piVar13,*(undefined4 *)(iVar18 + 0x38));
        setCopReg(2,uVar14,*(undefined4 *)(iVar18 + 0x3c));
        copFunction(2,0x280030);
        uVar7 = *(uint *)(iVar18 + 0x68);
        uVar21 = *(uint *)(iVar18 + 0x60);
        in_t0[3] = *(uint *)(iVar18 + 0x6c);
        in_t0[6] = uVar7;
        in_t0[9] = uVar21;
        setCopReg(2,iVar28,*(undefined4 *)(iVar18 + 0x74));
        setCopReg(2,puVar29,*(undefined4 *)(iVar18 + 0x84));
        setCopReg(2,0xa000,*(undefined4 *)(iVar18 + 0x78));
        setCopReg(2,0x3000,*(undefined4 *)(iVar18 + 0x78));
        iVar24 = DRAW_DisplayTFace_S();
        if (iVar24 < 1) {
          *(short *)(iVar18 + 0x66) = *(short *)(iVar18 + 0x5a);
          *(short *)(iVar18 + 0x6e) = *(short *)(iVar18 + 0x5e);
          setCopReg(2,in_zero,*(undefined4 *)(iVar18 + 0x40));
          setCopReg(2,in_at,*(undefined4 *)(iVar18 + 0x44));
          setCopReg(2,(int)*(short *)(iVar18 + 0x5a),*(undefined4 *)(iVar18 + 0x48));
          setCopReg(2,(int)*(short *)(iVar18 + 0x5e),*(undefined4 *)(iVar18 + 0x4c));
          setCopReg(2,piVar13,*(undefined4 *)(iVar18 + 0x50));
          setCopReg(2,uVar14,*(undefined4 *)(iVar18 + 0x54));
          copFunction(2,0x280030);
          uVar7 = *(uint *)(iVar18 + 0x68);
          uVar21 = *(uint *)(iVar18 + 0x6c);
          in_t0[3] = *(uint *)(iVar18 + 100);
          in_t0[6] = uVar7;
          in_t0[9] = uVar21;
          setCopReg(2,iVar28,*(undefined4 *)(iVar18 + 0x74));
          setCopReg(2,puVar29,*(undefined4 *)(iVar18 + 0x78));
          setCopReg(2,0xa000,*(undefined4 *)(iVar18 + 0x70));
          setCopReg(2,0x3000,*(undefined4 *)(iVar18 + 0x70));
          lVar36 = DRAW_DisplayTFace_S();
          if (lVar36 < 0x100000000) {
            setCopReg(2,in_zero,*(undefined4 *)(iVar18 + 0x40));
            setCopReg(2,in_at,*(undefined4 *)(iVar18 + 0x44));
            setCopReg(2,(int)((ulonglong)lVar36 >> 0x20),*(undefined4 *)(iVar18 + 0x30));
            setCopReg(2,(int)lVar36,*(undefined4 *)(iVar18 + 0x34));
            setCopReg(2,piVar13,*(undefined4 *)(iVar18 + 0x48));
            setCopReg(2,uVar14,*(undefined4 *)(iVar18 + 0x4c));
            copFunction(2,0x280030);
            uVar7 = *(uint *)(iVar18 + 0x5c);
            uVar21 = *(uint *)(iVar18 + 0x68);
            in_t0[3] = *(uint *)(iVar18 + 100);
            in_t0[6] = uVar7;
            in_t0[9] = uVar21;
            setCopReg(2,iVar28,*(undefined4 *)(iVar18 + 0x80));
            setCopReg(2,puVar29,*(undefined4 *)(iVar18 + 0x74));
            setCopReg(2,0xa000,*(undefined4 *)(iVar18 + 0x70));
            setCopReg(2,0x3000,*(undefined4 *)(iVar18 + 0x70));
            lVar36 = DRAW_DisplayTFace_S();
            if (lVar36 < 0x100000000) {
              iVar24 = (int)*(char *)(iVar18 + 200) + 1;
              *(undefined *)(iVar18 + 200) = (char)iVar24;
              setCopReg(2,in_zero,*(undefined4 *)(iVar18 + 0x28));
              setCopReg(2,in_at,*(undefined4 *)(iVar18 + 0x2c));
              setCopReg(2,iVar24,*(undefined4 *)(iVar18 + 0x30));
              setCopReg(2,(int)lVar36,*(undefined4 *)(iVar18 + 0x34));
              setCopReg(2,piVar13,*(undefined4 *)(iVar18 + 0x40));
              setCopReg(2,uVar14,*(undefined4 *)(iVar18 + 0x44));
              copFunction(2,0x280030);
              uVar7 = *(uint *)(iVar18 + 0x5c);
              uVar21 = *(uint *)(iVar18 + 100);
              in_t0[3] = *(uint *)(iVar18 + 0x58);
              in_t0[6] = uVar7;
              in_t0[9] = uVar21;
              setCopReg(2,iVar28,*(undefined4 *)(iVar18 + 0x80));
              setCopReg(2,puVar29,*(undefined4 *)(iVar18 + 0x70));
              setCopReg(2,0xa000,*(undefined4 *)(iVar18 + 0x7c));
              setCopReg(2,0x3000,*(undefined4 *)(iVar18 + 0x7c));
              DRAW_DisplayTFace_S();
              *(short *)(iVar18 + 0x6a) = *(short *)(iVar18 + 0x5a);
              setCopReg(2,in_zero,*(undefined4 *)(iVar18 + 0x48));
              setCopReg(2,in_at,*(undefined4 *)(iVar18 + 0x4c));
              setCopReg(2,(int)*(short *)(iVar18 + 0x5a),*(undefined4 *)(iVar18 + 0x30));
              setCopReg(2,extraout_v1,*(undefined4 *)(iVar18 + 0x34));
              setCopReg(2,piVar13,*(undefined4 *)(iVar18 + 0x38));
              setCopReg(2,uVar14,*(undefined4 *)(iVar18 + 0x3c));
              copFunction(2,0x280030);
              uVar7 = *(uint *)(iVar18 + 0x5c);
              uVar21 = *(uint *)(iVar18 + 0x60);
              in_t0[3] = *(uint *)(iVar18 + 0x68);
              in_t0[6] = uVar7;
              in_t0[9] = uVar21;
              setCopReg(2,iVar28,*(undefined4 *)(iVar18 + 0x80));
              setCopReg(2,puVar29,*(undefined4 *)(iVar18 + 0x84));
              setCopReg(2,0xa000,*(undefined4 *)(iVar18 + 0x74));
              setCopReg(2,0x3000,*(undefined4 *)(iVar18 + 0x74));
              uVar37 = DRAW_DisplayTFace_S();
              setCopReg(2,in_zero,*(undefined4 *)(iVar18 + 0x28));
              setCopReg(2,in_at,*(undefined4 *)(iVar18 + 0x2c));
              setCopReg(2,(int)((ulonglong)uVar37 >> 0x20),*(undefined4 *)(iVar18 + 0x50));
              setCopReg(2,(int)uVar37,*(undefined4 *)(iVar18 + 0x54));
              setCopReg(2,piVar13,*(undefined4 *)(iVar18 + 0x38));
              setCopReg(2,uVar14,*(undefined4 *)(iVar18 + 0x3c));
              copFunction(2,0x280030);
              uVar7 = *(uint *)(iVar18 + 0x6c);
              uVar21 = *(uint *)(iVar18 + 0x60);
              in_t0[3] = *(uint *)(iVar18 + 0x58);
              in_t0[6] = uVar7;
              in_t0[9] = uVar21;
              setCopReg(2,iVar28,*(undefined4 *)(iVar18 + 0x78));
              setCopReg(2,puVar29,*(undefined4 *)(iVar18 + 0x84));
              setCopReg(2,0xa000,*(undefined4 *)(iVar18 + 0x7c));
              setCopReg(2,0x3000,*(undefined4 *)(iVar18 + 0x7c));
              DRAW_DisplayTFace_S();
            }
          }
        }
      }
      puVar26 = puVar26 + 3;
    } while (puVar26 < puVar29);
  }
  return;
}



// autogenerated function stub: 
// void do_poly() /* do_poly method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
void do_poly() 
{ // line 1906, offset 0x80026790
	/* begin block 1 */
		// Start line: 3813
	/* end block 1 */
	// End Line: 3814

	/* begin block 2 */
		// Start line: 3814
	/* end block 2 */
	// End Line: 3815

	/* begin block 3 */
		// Start line: 3815
	/* end block 3 */
	// End Line: 3816

	return null;
}


// autogenerated function stub: 
// void positive() /* positive method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
void positive() 
{ // line 2140, offset 0x800269c0
	/* begin block 1 */
		// Start line: 4281
	/* end block 1 */
	// End Line: 4282

	/* begin block 2 */
		// Start line: 4282
	/* end block 2 */
	// End Line: 4283

	return null;
}


// autogenerated function stub: 
// void not_quad() /* not_quad method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
void not_quad() 
{ // line 2205, offset 0x80026a80
	/* begin block 1 */
		// Start line: 4411
	/* end block 1 */
	// End Line: 4412

	/* begin block 2 */
		// Start line: 4412
	/* end block 2 */
	// End Line: 4413

	/* begin block 3 */
		// Start line: 4413
	/* end block 3 */
	// End Line: 4414

	/* begin block 4 */
		// Start line: 4414
	/* end block 4 */
	// End Line: 4415

	/* begin block 5 */
		// Start line: 4415
	/* end block 5 */
	// End Line: 4416

	/* begin block 6 */
		// Start line: 4416
	/* end block 6 */
	// End Line: 4417

	/* begin block 7 */
		// Start line: 4417
	/* end block 7 */
	// End Line: 4418

	/* begin block 8 */
		// Start line: 4418
	/* end block 8 */
	// End Line: 4419

	/* begin block 9 */
		// Start line: 4419
	/* end block 9 */
	// End Line: 4420

	return null;
}


// autogenerated function stub: 
// void no_subdiv() /* no_subdiv method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
void no_subdiv() 
{ // line 2220, offset 0x80026a94
	/* begin block 1 */
		// Start line: 4441
	/* end block 1 */
	// End Line: 4442

	/* begin block 2 */
		// Start line: 4442
	/* end block 2 */
	// End Line: 4443

	return null;
}


// autogenerated function stub: 
// void maxL1() /* maxL1 method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
void maxL1() 
{ // line 2241, offset 0x80026ad0
	/* begin block 1 */
		// Start line: 4483
	/* end block 1 */
	// End Line: 4484

	return null;
}


// autogenerated function stub: 
// void maxL2() /* maxL2 method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
void maxL2() 
{ // line 2246, offset 0x80026ae4
	/* begin block 1 */
		// Start line: 4493
	/* end block 1 */
	// End Line: 4494

	return null;
}


// autogenerated function stub: 
// void minL1() /* minL1 method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
void minL1() 
{ // line 2250, offset 0x80026af4
	/* begin block 1 */
		// Start line: 4501
	/* end block 1 */
	// End Line: 4502

	return null;
}


// autogenerated function stub: 
// void not_liquid_54() /* not_liquid_54 method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
void not_liquid_54() 
{ // line 2279, offset 0x80026c2c
	/* begin block 1 */
		// Start line: 4559
	/* end block 1 */
	// End Line: 4560

	return null;
}


// autogenerated function stub: 
// void depthQface() /* depthQface method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
void depthQface() 
{ // line 2301, offset 0x80026c70
	/* begin block 1 */
		// Start line: 4603
	/* end block 1 */
	// End Line: 4604

	/* begin block 2 */
		// Start line: 4604
	/* end block 2 */
	// End Line: 4605

	/* begin block 3 */
		// Start line: 4605
	/* end block 3 */
	// End Line: 4606

	/* begin block 4 */
		// Start line: 4609
	/* end block 4 */
	// End Line: 4610

	/* begin block 5 */
		// Start line: 4610
	/* end block 5 */
	// End Line: 4611

	return null;
}


// autogenerated function stub: 
// void no_depthQ() /* no_depthQ method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
void no_depthQ() 
{ // line 2446, offset 0x80026db4
	/* begin block 1 */
		// Start line: 4893
	/* end block 1 */
	// End Line: 4894

	/* begin block 2 */
		// Start line: 4894
	/* end block 2 */
	// End Line: 4895

	return null;
}


// autogenerated function stub: 
// void skip_tface() /* skip_tface method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
void skip_tface() 
{ // line 2454, offset 0x80026dcc
	/* begin block 1 */
		// Start line: 4909
	/* end block 1 */
	// End Line: 4910

	/* begin block 2 */
		// Start line: 4910
	/* end block 2 */
	// End Line: 4911

	return null;
}


// autogenerated function stub: 
// void no_blend2() /* no_blend2 method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
void no_blend2() 
{ // line 2462, offset 0x80026de4
	/* begin block 1 */
		// Start line: 4925
	/* end block 1 */
	// End Line: 4926

	/* begin block 2 */
		// Start line: 4926
	/* end block 2 */
	// End Line: 4927

	/* begin block 3 */
		// Start line: 4927
	/* end block 3 */
	// End Line: 4928

	/* begin block 4 */
		// Start line: 4928
	/* end block 4 */
	// End Line: 4929

	return null;
}


// autogenerated function stub: 
// void end_of_polytope() /* end_of_polytope method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
void end_of_polytope() 
{ // line 2473, offset 0x80026e00
	/* begin block 1 */
		// Start line: 4947
	/* end block 1 */
	// End Line: 4948

	/* begin block 2 */
		// Start line: 4948
	/* end block 2 */
	// End Line: 4949

	/* begin block 3 */
		// Start line: 4949
	/* end block 3 */
	// End Line: 4950

	/* begin block 4 */
		// Start line: 4950
	/* end block 4 */
	// End Line: 4951

	/* begin block 5 */
		// Start line: 4951
	/* end block 5 */
	// End Line: 4952

	/* begin block 6 */
		// Start line: 4952
	/* end block 6 */
	// End Line: 4953

	/* begin block 7 */
		// Start line: 4953
	/* end block 7 */
	// End Line: 4954

	return null;
}


// autogenerated function stub: 
// void draw_trans_fog() /* draw_trans_fog method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
void draw_trans_fog() 
{ // line 2492, offset 0x80026e30
	/* begin block 1 */
		// Start line: 4985
	/* end block 1 */
	// End Line: 4986

	/* begin block 2 */
		// Start line: 4986
	/* end block 2 */
	// End Line: 4987

	/* begin block 3 */
		// Start line: 4987
	/* end block 3 */
	// End Line: 4988

	/* begin block 4 */
		// Start line: 4988
	/* end block 4 */
	// End Line: 4989

	/* begin block 5 */
		// Start line: 4989
	/* end block 5 */
	// End Line: 4990

	/* begin block 6 */
		// Start line: 4990
	/* end block 6 */
	// End Line: 4991

	/* begin block 7 */
		// Start line: 4991
	/* end block 7 */
	// End Line: 4992

	/* begin block 8 */
		// Start line: 4992
	/* end block 8 */
	// End Line: 4993

	/* begin block 9 */
		// Start line: 4993
	/* end block 9 */
	// End Line: 4994

	return null;
}


// autogenerated function stub: 
// void OK() /* OK method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
void OK() 
{ // line 2512, offset 0x80026e64
	/* begin block 1 */
		// Start line: 5025
	/* end block 1 */
	// End Line: 5026

	/* begin block 2 */
		// Start line: 5026
	/* end block 2 */
	// End Line: 5027

	/* begin block 3 */
		// Start line: 5027
	/* end block 3 */
	// End Line: 5028

	/* begin block 4 */
		// Start line: 5028
	/* end block 4 */
	// End Line: 5029

	return null;
}


// autogenerated function stub: 
// void no_depthQ2() /* no_depthQ2 method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
void no_depthQ2() 
{ // line 2571, offset 0x80026f1c
	/* begin block 1 */
		// Start line: 5143
	/* end block 1 */
	// End Line: 5144

	/* begin block 2 */
		// Start line: 5144
	/* end block 2 */
	// End Line: 5145

	return null;
}


// autogenerated function stub: 
// void DRAW_DisplayPolytopeList_S() /* DRAW_DisplayPolytopeList_S method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
void DRAW_DisplayPolytopeList_S() 
{ // line 2579, offset 0x80026f34
	/* begin block 1 */
		// Start line: 5159
	/* end block 1 */
	// End Line: 5160

	/* begin block 2 */
		// Start line: 5160
	/* end block 2 */
	// End Line: 5161

	/* begin block 3 */
		// Start line: 5161
	/* end block 3 */
	// End Line: 5162

	/* begin block 4 */
		// Start line: 5162
	/* end block 4 */
	// End Line: 5163

	/* begin block 5 */
		// Start line: 5163
	/* end block 5 */
	// End Line: 5164

	/* begin block 6 */
		// Start line: 5164
	/* end block 6 */
	// End Line: 5165

	/* begin block 7 */
		// Start line: 5165
	/* end block 7 */
	// End Line: 5166

	/* begin block 8 */
		// Start line: 5166
	/* end block 8 */
	// End Line: 5167

	/* begin block 9 */
		// Start line: 5167
	/* end block 9 */
	// End Line: 5168

	/* begin block 10 */
		// Start line: 5168
	/* end block 10 */
	// End Line: 5169

	/* begin block 11 */
		// Start line: 5169
	/* end block 11 */
	// End Line: 5170

	/* begin block 12 */
		// Start line: 5170
	/* end block 12 */
	// End Line: 5171

	/* begin block 13 */
		// Start line: 5171
	/* end block 13 */
	// End Line: 5172

	/* begin block 14 */
		// Start line: 5172
	/* end block 14 */
	// End Line: 5173

	/* begin block 15 */
		// Start line: 5173
	/* end block 15 */
	// End Line: 5174

	/* begin block 16 */
		// Start line: 5174
	/* end block 16 */
	// End Line: 5175

	/* begin block 17 */
		// Start line: 5175
	/* end block 17 */
	// End Line: 5176

	/* begin block 18 */
		// Start line: 5176
	/* end block 18 */
	// End Line: 5177

	/* begin block 19 */
		// Start line: 5177
	/* end block 19 */
	// End Line: 5178

	/* begin block 20 */
		// Start line: 5178
	/* end block 20 */
	// End Line: 5179

	/* begin block 21 */
		// Start line: 5179
	/* end block 21 */
	// End Line: 5180

	/* begin block 22 */
		// Start line: 5180
	/* end block 22 */
	// End Line: 5181

	/* begin block 23 */
		// Start line: 5181
	/* end block 23 */
	// End Line: 5182

	/* begin block 24 */
		// Start line: 5182
	/* end block 24 */
	// End Line: 5183

	/* begin block 25 */
		// Start line: 5183
	/* end block 25 */
	// End Line: 5184

	/* begin block 26 */
		// Start line: 5184
	/* end block 26 */
	// End Line: 5185

	/* begin block 27 */
		// Start line: 5185
	/* end block 27 */
	// End Line: 5186

	/* begin block 28 */
		// Start line: 5186
	/* end block 28 */
	// End Line: 5187

	/* begin block 29 */
		// Start line: 5187
	/* end block 29 */
	// End Line: 5188

	/* begin block 30 */
		// Start line: 5188
	/* end block 30 */
	// End Line: 5189

	/* begin block 31 */
		// Start line: 5189
	/* end block 31 */
	// End Line: 5190

	return null;
}


// decompiled code
// original method signature: 
// void PIPE3D_TransformAnimatedInstanceVertices_S() /* PIPE3D_TransformAnimatedInstanceVertices_S method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
 // line 2777, offset 0x80027170
	/* begin block 1 */
		// Start line: 5555
	/* end block 1 */
	// End Line: 5556

	/* begin block 2 */
		// Start line: 5556
	/* end block 2 */
	// End Line: 5557

	/* begin block 3 */
		// Start line: 5557
	/* end block 3 */
	// End Line: 5558

	/* begin block 4 */
		// Start line: 5558
	/* end block 4 */
	// End Line: 5559

	/* begin block 5 */
		// Start line: 5559
	/* end block 5 */
	// End Line: 5560

	/* begin block 6 */
		// Start line: 5560
	/* end block 6 */
	// End Line: 5561

	/* begin block 7 */
		// Start line: 5561
	/* end block 7 */
	// End Line: 5562

	/* begin block 8 */
		// Start line: 5562
	/* end block 8 */
	// End Line: 5563

	/* begin block 9 */
		// Start line: 5563
	/* end block 9 */
	// End Line: 5564

	/* begin block 10 */
		// Start line: 5564
	/* end block 10 */
	// End Line: 5565

	/* begin block 11 */
		// Start line: 5565
	/* end block 11 */
	// End Line: 5566

	/* begin block 12 */
		// Start line: 5566
	/* end block 12 */
	// End Line: 5567

	/* begin block 13 */
		// Start line: 5567
	/* end block 13 */
	// End Line: 5568

	/* begin block 14 */
		// Start line: 5568
	/* end block 14 */
	// End Line: 5569

	/* begin block 15 */
		// Start line: 5634
	/* end block 15 */
	// End Line: 5635

	/* begin block 16 */
		// Start line: 5635
	/* end block 16 */
	// End Line: 5636

	/* begin block 17 */
		// Start line: 5636
	/* end block 17 */
	// End Line: 5637

	/* begin block 18 */
		// Start line: 5637
	/* end block 18 */
	// End Line: 5638

	/* begin block 19 */
		// Start line: 5638
	/* end block 19 */
	// End Line: 5639

	/* begin block 20 */
		// Start line: 5639
	/* end block 20 */
	// End Line: 5640

	/* begin block 21 */
		// Start line: 5640
	/* end block 21 */
	// End Line: 5641

	/* begin block 22 */
		// Start line: 5654
	/* end block 22 */
	// End Line: 5655

	/* begin block 23 */
		// Start line: 5655
	/* end block 23 */
	// End Line: 5656

	/* begin block 24 */
		// Start line: 5656
	/* end block 24 */
	// End Line: 5657

	/* begin block 25 */
		// Start line: 5657
	/* end block 25 */
	// End Line: 5658

	/* begin block 26 */
		// Start line: 5658
	/* end block 26 */
	// End Line: 5659

	/* begin block 27 */
		// Start line: 5672
	/* end block 27 */
	// End Line: 5673

	/* begin block 28 */
		// Start line: 5673
	/* end block 28 */
	// End Line: 5674

	/* begin block 29 */
		// Start line: 5674
	/* end block 29 */
	// End Line: 5675

	/* begin block 30 */
		// Start line: 5675
	/* end block 30 */
	// End Line: 5676

	/* begin block 31 */
		// Start line: 5676
	/* end block 31 */
	// End Line: 5677

	/* begin block 32 */
		// Start line: 5677
	/* end block 32 */
	// End Line: 5678

	/* begin block 33 */
		// Start line: 5678
	/* end block 33 */
	// End Line: 5679

	/* begin block 34 */
		// Start line: 5679
	/* end block 34 */
	// End Line: 5680

	/* begin block 35 */
		// Start line: 5680
	/* end block 35 */
	// End Line: 5681

	/* begin block 36 */
		// Start line: 5681
	/* end block 36 */
	// End Line: 5682

	/* begin block 37 */
		// Start line: 5682
	/* end block 37 */
	// End Line: 5683

	/* begin block 38 */
		// Start line: 5683
	/* end block 38 */
	// End Line: 5684

	/* begin block 39 */
		// Start line: 5684
	/* end block 39 */
	// End Line: 5685

	/* begin block 40 */
		// Start line: 5685
	/* end block 40 */
	// End Line: 5686

	/* begin block 41 */
		// Start line: 5686
	/* end block 41 */
	// End Line: 5687

	/* begin block 42 */
		// Start line: 5687
	/* end block 42 */
	// End Line: 5688

	/* begin block 43 */
		// Start line: 5688
	/* end block 43 */
	// End Line: 5689

	/* begin block 44 */
		// Start line: 5689
	/* end block 44 */
	// End Line: 5690

	/* begin block 45 */
		// Start line: 5719
	/* end block 45 */
	// End Line: 5720

	/* begin block 46 */
		// Start line: 5720
	/* end block 46 */
	// End Line: 5721

	/* begin block 47 */
		// Start line: 5721
	/* end block 47 */
	// End Line: 5722

	/* begin block 48 */
		// Start line: 5732
	/* end block 48 */
	// End Line: 5733

	/* begin block 49 */
		// Start line: 5733
	/* end block 49 */
	// End Line: 5734

	/* begin block 50 */
		// Start line: 5734
	/* end block 50 */
	// End Line: 5735

	/* begin block 51 */
		// Start line: 5735
	/* end block 51 */
	// End Line: 5736

	/* begin block 52 */
		// Start line: 5736
	/* end block 52 */
	// End Line: 5737

	/* begin block 53 */
		// Start line: 5737
	/* end block 53 */
	// End Line: 5738

	/* begin block 54 */
		// Start line: 5738
	/* end block 54 */
	// End Line: 5739

	/* begin block 55 */
		// Start line: 5739
	/* end block 55 */
	// End Line: 5740

	/* begin block 56 */
		// Start line: 5740
	/* end block 56 */
	// End Line: 5741

	/* begin block 57 */
		// Start line: 5741
	/* end block 57 */
	// End Line: 5742

	/* begin block 58 */
		// Start line: 5742
	/* end block 58 */
	// End Line: 5743

	/* begin block 59 */
		// Start line: 5743
	/* end block 59 */
	// End Line: 5744

	/* begin block 60 */
		// Start line: 5744
	/* end block 60 */
	// End Line: 5745

	/* begin block 61 */
		// Start line: 5745
	/* end block 61 */
	// End Line: 5746

	/* begin block 62 */
		// Start line: 5746
	/* end block 62 */
	// End Line: 5747

	/* begin block 63 */
		// Start line: 5747
	/* end block 63 */
	// End Line: 5748

	/* begin block 64 */
		// Start line: 5748
	/* end block 64 */
	// End Line: 5749

	/* begin block 65 */
		// Start line: 5749
	/* end block 65 */
	// End Line: 5750

	/* begin block 66 */
		// Start line: 5750
	/* end block 66 */
	// End Line: 5751

	/* begin block 67 */
		// Start line: 5751
	/* end block 67 */
	// End Line: 5752

	/* begin block 68 */
		// Start line: 5752
	/* end block 68 */
	// End Line: 5753

	/* begin block 69 */
		// Start line: 5753
	/* end block 69 */
	// End Line: 5754

	/* begin block 70 */
		// Start line: 5754
	/* end block 70 */
	// End Line: 5755

	/* begin block 71 */
		// Start line: 5755
	/* end block 71 */
	// End Line: 5756

	/* begin block 72 */
		// Start line: 5756
	/* end block 72 */
	// End Line: 5757

	/* begin block 73 */
		// Start line: 5757
	/* end block 73 */
	// End Line: 5758

	/* begin block 74 */
		// Start line: 5758
	/* end block 74 */
	// End Line: 5759

	/* begin block 75 */
		// Start line: 5759
	/* end block 75 */
	// End Line: 5760

	/* begin block 76 */
		// Start line: 5760
	/* end block 76 */
	// End Line: 5761

	/* begin block 77 */
		// Start line: 5761
	/* end block 77 */
	// End Line: 5762

	/* begin block 78 */
		// Start line: 5762
	/* end block 78 */
	// End Line: 5763

	/* begin block 79 */
		// Start line: 5763
	/* end block 79 */
	// End Line: 5764

	/* begin block 80 */
		// Start line: 5764
	/* end block 80 */
	// End Line: 5765

	/* begin block 81 */
		// Start line: 5765
	/* end block 81 */
	// End Line: 5766

	/* begin block 82 */
		// Start line: 5766
	/* end block 82 */
	// End Line: 5767

	/* begin block 83 */
		// Start line: 5767
	/* end block 83 */
	// End Line: 5768

	/* begin block 84 */
		// Start line: 5768
	/* end block 84 */
	// End Line: 5769

	/* begin block 85 */
		// Start line: 5769
	/* end block 85 */
	// End Line: 5770

	/* begin block 86 */
		// Start line: 5770
	/* end block 86 */
	// End Line: 5771

	/* begin block 87 */
		// Start line: 5771
	/* end block 87 */
	// End Line: 5772

	/* begin block 88 */
		// Start line: 5772
	/* end block 88 */
	// End Line: 5773

	/* begin block 89 */
		// Start line: 5773
	/* end block 89 */
	// End Line: 5774

	/* begin block 90 */
		// Start line: 5774
	/* end block 90 */
	// End Line: 5775

/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */

uint PIPE3D_TransformAnimatedInstanceVertices_S
               (int param_1,undefined4 *param_2,uint param_3,undefined4 *param_4,ushort *param_5,
               undefined4 *param_6,uint *param_7,uint *param_8)

{
  uint uVar1;
  int iVar2;
  undefined4 uVar3;
  undefined4 *puVar4;
  undefined4 *puVar5;
  int iVar6;
  uint uVar7;
  undefined4 uVar8;
  undefined4 *puVar9;
  int iVar10;
  uint uVar11;
  undefined4 uVar12;
  undefined4 uVar13;
  uint uVar14;
  int iVar15;
  undefined4 uVar16;
  undefined4 uVar17;
  undefined4 *puVar18;
  undefined4 unaff_s0;
  undefined4 uVar19;
  undefined4 unaff_s1;
  uint *puVar20;
  undefined4 unaff_s2;
  undefined4 unaff_s3;
  undefined4 unaff_s4;
  undefined4 unaff_s5;
  undefined4 unaff_s6;
  uint *puVar21;
  int iVar22;
  
  iVar6 = *(int *)(param_3 + 0x18);
  if (0 < iVar6) {
    iVar22 = *(int *)(param_3 + 0x1c);
    DAT_1f800000 = *param_4;
    DAT_1f800004 = param_4[1];
    DAT_1f800008 = param_4[2];
    DAT_1f80000c = param_4[3];
    DAT_1f800010 = param_4[4];
    DAT_1f800014 = param_4[5];
    DAT_1f800018 = param_4[6];
    DAT_1f80001c = param_4[7];
    uVar1 = 0xffffffff;
    param_3 = 0xffffffff;
    _DAT_1f80005c = unaff_s0;
    _DAT_1f800060 = unaff_s1;
    _DAT_1f800064 = unaff_s2;
    _DAT_1f800068 = unaff_s3;
    _DAT_1f80006c = unaff_s4;
    DAT_1f800070 = unaff_s5;
    DAT_1f800074 = unaff_s6;
    if (param_7 == (uint *)0x0) {
      do {
        iVar2 = (int)*(uint *)(iVar22 + 8) >> 0x10;
        if (iVar2 != -1) {
          puVar18 = (undefined4 *)(param_1 + iVar2 * 8);
          puVar4 = (undefined4 *)(param_1 + (*(uint *)(iVar22 + 8) & 0xffff) * 8);
          setCopControlWord(2,0,DAT_1f800000);
          setCopControlWord(2,0x800,DAT_1f800004);
          setCopControlWord(2,0x1000,DAT_1f800008);
          setCopControlWord(2,0x1800,DAT_1f80000c);
          setCopControlWord(2,0x2000,DAT_1f800010);
          setCopReg(2,0x4800,(uint)*param_5);
          setCopReg(2,0x5000,(uint)param_5[3]);
          setCopReg(2,0x5800,(uint)param_5[6]);
          copFunction(2,0x49e012);
          uVar7 = getCopReg(2,0x4800);
          iVar10 = getCopReg(2,0x5000);
          uVar14 = getCopReg(2,0x5800);
          setCopReg(2,0x4800,(uint)param_5[1]);
          setCopReg(2,0x5000,(uint)param_5[4]);
          setCopReg(2,0x5800,(uint)param_5[7]);
          copFunction(2,0x49e012);
          iVar2 = getCopReg(2,0x4800);
          uVar11 = getCopReg(2,0x5000);
          iVar15 = getCopReg(2,0x5800);
          DAT_1f800020 = uVar7 & 0xffff | iVar2 << 0x10;
          _DAT_1f80002c = uVar14 & 0xffff | iVar15 << 0x10;
          setCopReg(2,0x4800,(uint)param_5[2]);
          setCopReg(2,0x5000,(uint)param_5[5]);
          setCopReg(2,0x5800,(uint)param_5[8]);
          copFunction(2,0x49e012);
          uVar7 = getCopReg(2,0x4800);
          iVar2 = getCopReg(2,0x5000);
          uVar14 = getCopReg(2,0x5800);
          DAT_1f800024 = uVar7 & 0xffff | iVar10 << 0x10;
          DAT_1f800028 = uVar11 & 0xffff | iVar2 << 0x10;
          _DAT_1f800030 = _DAT_1f800030 & 0xffff0000 | uVar14 & 0xffff;
          setCopControlWord(2,0x2800,DAT_1f800014);
          setCopControlWord(2,0x3000,DAT_1f800018);
          setCopControlWord(2,0x3800,DAT_1f80001c);
          setCopReg(2,0,CONCAT22(param_5[0xc],param_5[10]));
          setCopReg(2,uVar1,*(undefined4 *)(param_5 + 0xe));
          copFunction(2,0x480012);
          uVar8 = getCopReg(2,0x4800);
          uVar12 = getCopReg(2,0x5000);
          uVar16 = getCopReg(2,0x5800);
          setCopControlWord(2,0x2800,uVar8);
          setCopControlWord(2,0x3000,uVar12);
          setCopControlWord(2,0x3800,uVar16);
          setCopControlWord(2,0,DAT_1f800020);
          setCopControlWord(2,0x800,DAT_1f800024);
          setCopControlWord(2,0x1000,DAT_1f800028);
          setCopControlWord(2,0x1800,_DAT_1f80002c);
          setCopControlWord(2,0x2000,_DAT_1f800030);
          uVar8 = *puVar4;
          uVar12 = puVar4[1];
          uVar16 = puVar4[2];
          uVar3 = puVar4[3];
          uVar13 = puVar4[4];
          uVar17 = puVar4[5];
          puVar9 = puVar4 + 4;
          puVar5 = param_2;
          while (puVar9 <= puVar18) {
            setCopReg(2,0,uVar8);
            setCopReg(2,0x800,uVar12);
            setCopReg(2,0x1000,uVar16);
            setCopReg(2,0x1800,uVar3);
            setCopReg(2,0x2000,uVar13);
            setCopReg(2,0x2800,uVar17);
            copFunction(2,0x280030);
            uVar8 = getCopReg(2,0xc);
            *puVar5 = uVar8;
            uVar8 = getCopReg(2,0x11);
            puVar5[1] = uVar8;
            uVar8 = getCopReg(2,0xd);
            puVar5[2] = uVar8;
            uVar1 = getCopControlWord(2,0xf800);
            uVar8 = getCopReg(2,0x12);
            puVar5[3] = uVar8;
            param_3 = param_3 & uVar1;
            uVar8 = getCopReg(2,0xe);
            puVar5[4] = uVar8;
            puVar9 = puVar4 + 10;
            uVar8 = getCopReg(2,0x13);
            puVar5[5] = uVar8;
            uVar8 = puVar4[6];
            uVar12 = puVar4[7];
            uVar16 = puVar4[8];
            uVar3 = puVar4[9];
            uVar13 = puVar4[10];
            uVar17 = puVar4[0xb];
            puVar5 = puVar5 + 6;
            puVar4 = puVar4 + 6;
          }
          uVar1 = (uint)((int)puVar18 < (int)puVar4);
          param_2 = puVar5;
          if ((int)puVar18 >= (int)puVar4) {
            setCopReg(2,0,uVar8);
            setCopReg(2,0x800,uVar12);
            copFunction(2,0x180001);
            uVar8 = getCopReg(2,0xe);
            *puVar5 = uVar8;
            uVar8 = getCopReg(2,0x13);
            puVar5[1] = uVar8;
            uVar7 = getCopControlWord(2,0xf800);
            getCopReg(2,0x4000);
            param_2 = puVar5 + 2;
            uVar1 = (uint)((int)puVar18 < (int)(puVar4 + 2));
            param_3 = param_3 & uVar7;
            if ((int)puVar18 >= (int)(puVar4 + 2)) {
              setCopReg(2,0,uVar16);
              setCopReg(2,0x800,uVar3);
              copFunction(2,0x180001);
              uVar8 = getCopReg(2,0xe);
              *param_2 = uVar8;
              uVar8 = getCopReg(2,0x13);
              puVar5[3] = uVar8;
              uVar7 = getCopControlWord(2,0xf800);
              getCopReg(2,0x4000);
              param_2 = puVar5 + 4;
              param_3 = param_3 & uVar7;
            }
          }
        }
        param_5 = param_5 + 0x10;
        iVar6 = iVar6 + -1;
        iVar22 = iVar22 + 0x18;
      } while (iVar6 != 0);
    }
    else {
      DAT_1f800034 = *param_6;
      DAT_1f800038 = param_6[1];
      DAT_1f80003c = param_6[2];
      _DAT_1f800040 = param_6[3];
      _DAT_1f800044 = param_6[4];
      if (param_8 == (uint *)0x0) {
        setCopReg(2,0x3000,0x34ffffff);
        do {
          iVar2 = (int)*(uint *)(iVar22 + 8) >> 0x10;
          if (iVar2 != -1) {
            puVar18 = (undefined4 *)(param_1 + iVar2 * 8);
            puVar4 = (undefined4 *)(param_1 + (*(uint *)(iVar22 + 8) & 0xffff) * 8);
            setCopControlWord(2,0,DAT_1f800034);
            setCopControlWord(2,0x800,DAT_1f800038);
            setCopControlWord(2,0x1000,DAT_1f80003c);
            setCopControlWord(2,0x1800,_DAT_1f800040);
            setCopControlWord(2,0x2000,_DAT_1f800044);
            setCopReg(2,0x4800,(uint)*param_5);
            setCopReg(2,0x5000,(uint)param_5[3]);
            setCopReg(2,0x5800,(uint)param_5[6]);
            copFunction(2,0x49e012);
            uVar7 = getCopReg(2,0x4800);
            iVar10 = getCopReg(2,0x5000);
            uVar14 = getCopReg(2,0x5800);
            setCopReg(2,0x4800,(uint)param_5[1]);
            setCopReg(2,0x5000,(uint)param_5[4]);
            setCopReg(2,0x5800,(uint)param_5[7]);
            copFunction(2,0x49e012);
            iVar2 = getCopReg(2,0x4800);
            uVar11 = getCopReg(2,0x5000);
            iVar15 = getCopReg(2,0x5800);
            _DAT_1f800048 = uVar7 & 0xffff | iVar2 << 0x10;
            DAT_1f800054 = uVar14 & 0xffff | iVar15 << 0x10;
            setCopReg(2,0x4800,(uint)param_5[2]);
            setCopReg(2,0x5000,(uint)param_5[5]);
            setCopReg(2,0x5800,(uint)param_5[8]);
            copFunction(2,0x49e012);
            uVar7 = getCopReg(2,0x4800);
            iVar2 = getCopReg(2,0x5000);
            uVar14 = getCopReg(2,0x5800);
            _DAT_1f80004c = uVar7 & 0xffff | iVar10 << 0x10;
            _DAT_1f800050 = uVar11 & 0xffff | iVar2 << 0x10;
            DAT_1f800058 = DAT_1f800058 & 0xffff0000 | uVar14 & 0xffff;
            setCopControlWord(2,0x4000,_DAT_1f800048);
            setCopControlWord(2,0x4800,_DAT_1f80004c);
            setCopControlWord(2,0x5000,_DAT_1f800050);
            setCopControlWord(2,0x5800,DAT_1f800054);
            setCopControlWord(2,0x6000,DAT_1f800058);
            setCopControlWord(2,0,DAT_1f800000);
            setCopControlWord(2,0x800,DAT_1f800004);
            setCopControlWord(2,0x1000,DAT_1f800008);
            setCopControlWord(2,0x1800,DAT_1f80000c);
            setCopControlWord(2,0x2000,DAT_1f800010);
            setCopReg(2,0x4800,(uint)*param_5);
            setCopReg(2,0x5000,(uint)param_5[3]);
            setCopReg(2,0x5800,(uint)param_5[6]);
            copFunction(2,0x49e012);
            uVar7 = getCopReg(2,0x4800);
            iVar10 = getCopReg(2,0x5000);
            uVar14 = getCopReg(2,0x5800);
            setCopReg(2,0x4800,(uint)param_5[1]);
            setCopReg(2,0x5000,(uint)param_5[4]);
            setCopReg(2,0x5800,(uint)param_5[7]);
            copFunction(2,0x49e012);
            iVar2 = getCopReg(2,0x4800);
            uVar11 = getCopReg(2,0x5000);
            iVar15 = getCopReg(2,0x5800);
            DAT_1f800020 = uVar7 & 0xffff | iVar2 << 0x10;
            _DAT_1f80002c = uVar14 & 0xffff | iVar15 << 0x10;
            setCopReg(2,0x4800,(uint)param_5[2]);
            setCopReg(2,0x5000,(uint)param_5[5]);
            setCopReg(2,0x5800,(uint)param_5[8]);
            copFunction(2,0x49e012);
            uVar7 = getCopReg(2,0x4800);
            iVar2 = getCopReg(2,0x5000);
            uVar14 = getCopReg(2,0x5800);
            DAT_1f800024 = uVar7 & 0xffff | iVar10 << 0x10;
            DAT_1f800028 = uVar11 & 0xffff | iVar2 << 0x10;
            _DAT_1f800030 = _DAT_1f800030 & 0xffff0000 | uVar14 & 0xffff;
            setCopControlWord(2,0x2800,DAT_1f800014);
            setCopControlWord(2,0x3000,DAT_1f800018);
            setCopControlWord(2,0x3800,DAT_1f80001c);
            setCopReg(2,0,CONCAT22(param_5[0xc],param_5[10]));
            setCopReg(2,uVar1,*(undefined4 *)(param_5 + 0xe));
            copFunction(2,0x480012);
            uVar8 = getCopReg(2,0x4800);
            uVar12 = getCopReg(2,0x5000);
            uVar16 = getCopReg(2,0x5800);
            setCopControlWord(2,0x2800,uVar8);
            setCopControlWord(2,0x3000,uVar12);
            setCopControlWord(2,0x3800,uVar16);
            setCopControlWord(2,0,DAT_1f800020);
            setCopControlWord(2,0x800,DAT_1f800024);
            setCopControlWord(2,0x1000,DAT_1f800028);
            setCopControlWord(2,0x1800,_DAT_1f80002c);
            setCopControlWord(2,0x2000,_DAT_1f800030);
            uVar8 = *puVar4;
            uVar7 = puVar4[1];
            uVar12 = puVar4[2];
            uVar11 = puVar4[3];
            uVar16 = puVar4[4];
            uVar1 = puVar4[5];
            puVar9 = puVar4 + 4;
            puVar5 = param_2;
            puVar20 = param_7;
            while (puVar9 <= puVar18) {
              setCopReg(2,0,uVar8);
              setCopReg(2,0x800,uVar7);
              setCopReg(2,0x1000,uVar12);
              setCopReg(2,0x1800,uVar11);
              setCopReg(2,0x2000,uVar16);
              setCopReg(2,0x2800,uVar1);
              copFunction(2,0x280030);
              uVar12 = *(undefined4 *)(&gNormalList + (uVar7 >> 0x10));
              uVar16 = *(undefined4 *)&(&gNormalList)[uVar7 >> 0x10].z;
              uVar13 = *(undefined4 *)(&gNormalList + (uVar11 >> 0x10));
              uVar17 = *(undefined4 *)&(&gNormalList)[uVar11 >> 0x10].z;
              uVar3 = *(undefined4 *)(&gNormalList + (uVar1 >> 0x10));
              uVar19 = *(undefined4 *)&(&gNormalList)[uVar1 >> 0x10].z;
              uVar8 = getCopReg(2,0xc);
              *puVar5 = uVar8;
              uVar8 = getCopReg(2,0x11);
              puVar5[1] = uVar8;
              uVar8 = getCopReg(2,0xd);
              puVar5[2] = uVar8;
              uVar1 = getCopControlWord(2,0xf800);
              uVar8 = getCopReg(2,0x12);
              puVar5[3] = uVar8;
              param_3 = param_3 & uVar1;
              uVar8 = getCopReg(2,0xe);
              puVar5[4] = uVar8;
              uVar8 = getCopReg(2,0x13);
              puVar5[5] = uVar8;
              iVar2 = getCopReg(2,0x4000);
              if (modelFadeValue != 0) {
                setCopReg(2,0x4000,modelFadeValue);
                iVar2 = modelFadeValue;
              }
              setCopReg(2,0,uVar12);
              setCopReg(2,0x800,uVar16);
              setCopReg(2,0x1000,uVar13);
              setCopReg(2,0x1800,uVar17);
              setCopReg(2,0x2000,uVar3);
              setCopReg(2,0x2800,uVar19);
              if (iVar2 == 0) {
                copFunction(2,0xd80420);
              }
              else {
                copFunction(2,0xf80416);
              }
              puVar9 = puVar4 + 10;
              uVar8 = puVar4[6];
              uVar7 = puVar4[7];
              uVar12 = puVar4[8];
              uVar11 = puVar4[9];
              uVar16 = puVar4[10];
              uVar1 = puVar4[0xb];
              uVar14 = getCopReg(2,0x14);
              *puVar20 = uVar14;
              uVar14 = getCopReg(2,0x15);
              puVar20[1] = uVar14;
              uVar14 = getCopReg(2,0x16);
              puVar20[2] = uVar14;
              puVar20 = puVar20 + 3;
              puVar5 = puVar5 + 6;
              puVar4 = puVar4 + 6;
            }
            uVar1 = (uint)((int)puVar18 < (int)puVar4);
            param_2 = puVar5;
            param_7 = puVar20;
            if ((int)puVar18 >= (int)puVar4) {
              setCopReg(2,0,uVar8);
              setCopReg(2,0x800,uVar7);
              copFunction(2,0x180001);
              uVar16 = *(undefined4 *)(&gNormalList + (uVar7 >> 0x10));
              uVar3 = *(undefined4 *)&(&gNormalList)[uVar7 >> 0x10].z;
              uVar8 = getCopReg(2,0xe);
              *puVar5 = uVar8;
              uVar8 = getCopReg(2,0x13);
              puVar5[1] = uVar8;
              uVar7 = getCopControlWord(2,0xf800);
              iVar2 = getCopReg(2,0x4000);
              if (modelFadeValue != 0) {
                setCopReg(2,0x4000,modelFadeValue);
                iVar2 = modelFadeValue;
              }
              setCopReg(2,0,uVar16);
              setCopReg(2,0x800,uVar3);
              if (iVar2 == 0) {
                copFunction(2,0xc8041e);
              }
              else {
                copFunction(2,0xe80413);
              }
              param_2 = puVar5 + 2;
              uVar1 = getCopReg(2,0x16);
              *puVar20 = uVar1;
              param_7 = puVar20 + 1;
              uVar1 = (uint)((int)puVar18 < (int)(puVar4 + 2));
              param_3 = param_3 & uVar7;
              if ((int)puVar18 >= (int)(puVar4 + 2)) {
                setCopReg(2,0,uVar12);
                setCopReg(2,0x800,uVar11);
                copFunction(2,0x180001);
                uVar12 = *(undefined4 *)(&gNormalList + (uVar11 >> 0x10));
                uVar16 = *(undefined4 *)&(&gNormalList)[uVar11 >> 0x10].z;
                uVar8 = getCopReg(2,0xe);
                *param_2 = uVar8;
                uVar8 = getCopReg(2,0x13);
                puVar5[3] = uVar8;
                uVar7 = getCopControlWord(2,0xf800);
                iVar2 = getCopReg(2,0x4000);
                if (modelFadeValue != 0) {
                  setCopReg(2,0x4000,modelFadeValue);
                  iVar2 = modelFadeValue;
                }
                setCopReg(2,0,uVar12);
                setCopReg(2,0x800,uVar16);
                if (iVar2 == 0) {
                  copFunction(2,0xc8041e);
                }
                else {
                  copFunction(2,0xe80413);
                }
                param_2 = puVar5 + 4;
                param_3 = param_3 & uVar7;
                uVar7 = getCopReg(2,0x16);
                *param_7 = uVar7;
                param_7 = puVar20 + 2;
              }
            }
          }
          param_5 = param_5 + 0x10;
          iVar6 = iVar6 + -1;
          iVar22 = iVar22 + 0x18;
        } while (iVar6 != 0);
      }
      else {
        param_3 = 0xffffffff;
        uVar1 = 0xffffffff;
        setCopReg(2,0x3000,0x34ffffff);
        do {
          iVar2 = (int)*(uint *)(iVar22 + 8) >> 0x10;
          if (iVar2 != -1) {
            puVar18 = (undefined4 *)(param_1 + iVar2 * 8);
            puVar4 = (undefined4 *)(param_1 + (*(uint *)(iVar22 + 8) & 0xffff) * 8);
            setCopControlWord(2,0,DAT_1f800034);
            setCopControlWord(2,0x800,DAT_1f800038);
            setCopControlWord(2,0x1000,DAT_1f80003c);
            setCopControlWord(2,0x1800,_DAT_1f800040);
            setCopControlWord(2,0x2000,_DAT_1f800044);
            setCopReg(2,0x4800,(uint)*param_5);
            setCopReg(2,0x5000,(uint)param_5[3]);
            setCopReg(2,0x5800,(uint)param_5[6]);
            copFunction(2,0x49e012);
            uVar7 = getCopReg(2,0x4800);
            iVar10 = getCopReg(2,0x5000);
            uVar14 = getCopReg(2,0x5800);
            setCopReg(2,0x4800,(uint)param_5[1]);
            setCopReg(2,0x5000,(uint)param_5[4]);
            setCopReg(2,0x5800,(uint)param_5[7]);
            copFunction(2,0x49e012);
            iVar2 = getCopReg(2,0x4800);
            uVar11 = getCopReg(2,0x5000);
            iVar15 = getCopReg(2,0x5800);
            _DAT_1f800048 = uVar7 & 0xffff | iVar2 << 0x10;
            DAT_1f800054 = uVar14 & 0xffff | iVar15 << 0x10;
            setCopReg(2,0x4800,(uint)param_5[2]);
            setCopReg(2,0x5000,(uint)param_5[5]);
            setCopReg(2,0x5800,(uint)param_5[8]);
            copFunction(2,0x49e012);
            uVar7 = getCopReg(2,0x4800);
            iVar2 = getCopReg(2,0x5000);
            uVar14 = getCopReg(2,0x5800);
            _DAT_1f80004c = uVar7 & 0xffff | iVar10 << 0x10;
            _DAT_1f800050 = uVar11 & 0xffff | iVar2 << 0x10;
            DAT_1f800058 = DAT_1f800058 & 0xffff0000 | uVar14 & 0xffff;
            setCopControlWord(2,0x4000,_DAT_1f800048);
            setCopControlWord(2,0x4800,_DAT_1f80004c);
            setCopControlWord(2,0x5000,_DAT_1f800050);
            setCopControlWord(2,0x5800,DAT_1f800054);
            setCopControlWord(2,0x6000,DAT_1f800058);
            setCopControlWord(2,0,DAT_1f800000);
            setCopControlWord(2,0x800,DAT_1f800004);
            setCopControlWord(2,0x1000,DAT_1f800008);
            setCopControlWord(2,0x1800,DAT_1f80000c);
            setCopControlWord(2,0x2000,DAT_1f800010);
            setCopReg(2,0x4800,(uint)*param_5);
            setCopReg(2,0x5000,(uint)param_5[3]);
            setCopReg(2,0x5800,(uint)param_5[6]);
            copFunction(2,0x49e012);
            uVar7 = getCopReg(2,0x4800);
            iVar10 = getCopReg(2,0x5000);
            uVar14 = getCopReg(2,0x5800);
            setCopReg(2,0x4800,(uint)param_5[1]);
            setCopReg(2,0x5000,(uint)param_5[4]);
            setCopReg(2,0x5800,(uint)param_5[7]);
            copFunction(2,0x49e012);
            iVar2 = getCopReg(2,0x4800);
            uVar11 = getCopReg(2,0x5000);
            iVar15 = getCopReg(2,0x5800);
            DAT_1f800020 = uVar7 & 0xffff | iVar2 << 0x10;
            _DAT_1f80002c = uVar14 & 0xffff | iVar15 << 0x10;
            setCopReg(2,0x4800,(uint)param_5[2]);
            setCopReg(2,0x5000,(uint)param_5[5]);
            setCopReg(2,0x5800,(uint)param_5[8]);
            copFunction(2,0x49e012);
            uVar7 = getCopReg(2,0x4800);
            iVar2 = getCopReg(2,0x5000);
            uVar14 = getCopReg(2,0x5800);
            DAT_1f800024 = uVar7 & 0xffff | iVar10 << 0x10;
            DAT_1f800028 = uVar11 & 0xffff | iVar2 << 0x10;
            _DAT_1f800030 = _DAT_1f800030 & 0xffff0000 | uVar14 & 0xffff;
            setCopControlWord(2,0x2800,DAT_1f800014);
            setCopControlWord(2,0x3000,DAT_1f800018);
            setCopControlWord(2,0x3800,DAT_1f80001c);
            setCopReg(2,0,CONCAT22(param_5[0xc],param_5[10]));
            setCopReg(2,uVar1,*(undefined4 *)(param_5 + 0xe));
            copFunction(2,0x480012);
            uVar8 = getCopReg(2,0x4800);
            uVar12 = getCopReg(2,0x5000);
            uVar16 = getCopReg(2,0x5800);
            setCopControlWord(2,0x2800,uVar8);
            setCopControlWord(2,0x3000,uVar12);
            setCopControlWord(2,0x3800,uVar16);
            setCopControlWord(2,0,DAT_1f800020);
            setCopControlWord(2,0x800,DAT_1f800024);
            setCopControlWord(2,0x1000,DAT_1f800028);
            setCopControlWord(2,0x1800,_DAT_1f80002c);
            setCopControlWord(2,0x2000,_DAT_1f800030);
            uVar8 = *puVar4;
            uVar7 = puVar4[1];
            uVar12 = puVar4[2];
            uVar11 = puVar4[3];
            uVar16 = puVar4[4];
            uVar1 = puVar4[5];
            puVar9 = puVar4 + 4;
            puVar5 = param_2;
            puVar20 = param_7;
            puVar21 = param_8;
            while (puVar9 <= puVar18) {
              setCopReg(2,0,uVar8);
              setCopReg(2,0x800,uVar7);
              setCopReg(2,0x1000,uVar12);
              setCopReg(2,0x1800,uVar11);
              setCopReg(2,0x2000,uVar16);
              setCopReg(2,0x2800,uVar1);
              copFunction(2,0x280030);
              uVar12 = *(undefined4 *)(&gNormalList + (uVar7 >> 0x10));
              uVar16 = *(undefined4 *)&(&gNormalList)[uVar7 >> 0x10].z;
              uVar14 = *puVar21;
              uVar8 = getCopReg(2,0xc);
              *puVar5 = uVar8;
              uVar8 = getCopReg(2,0x11);
              puVar5[1] = uVar8;
              uVar8 = getCopReg(2,0xd);
              puVar5[2] = uVar8;
              uVar7 = getCopControlWord(2,0xf800);
              uVar8 = getCopReg(2,0x12);
              puVar5[3] = uVar8;
              param_3 = param_3 & uVar7;
              uVar8 = getCopReg(2,0xe);
              puVar5[4] = uVar8;
              uVar8 = getCopReg(2,0x13);
              puVar5[5] = uVar8;
              iVar2 = getCopReg(2,0x4000);
              if (modelFadeValue != 0) {
                setCopReg(2,0x4000,modelFadeValue);
                iVar2 = modelFadeValue;
              }
              if ((uVar14 & 0x40000000) == 0) {
                setCopReg(2,0,uVar12);
                setCopReg(2,0x800,uVar16);
                setCopReg(2,0x3000,uVar14);
                if (iVar2 == 0) {
                  copFunction(2,0x108041b);
                }
                else {
                  copFunction(2,0xe80413);
                }
                uVar14 = getCopReg(2,0xb000);
              }
              *puVar20 = uVar14;
              uVar7 = puVar21[1];
              if ((uVar7 & 0x40000000) == 0) {
                setCopReg(2,0,*(undefined4 *)(&gNormalList + (uVar11 >> 0x10)));
                setCopReg(2,0x800,*(undefined4 *)&(&gNormalList)[uVar11 >> 0x10].z);
                setCopReg(2,0x3000,uVar7);
                if (iVar2 == 0) {
                  copFunction(2,0x108041b);
                }
                else {
                  copFunction(2,0xe80413);
                }
                uVar7 = getCopReg(2,0xb000);
              }
              puVar20[1] = uVar7;
              uVar7 = puVar21[2];
              if ((uVar7 & 0x40000000) == 0) {
                setCopReg(2,0,*(undefined4 *)(&gNormalList + (uVar1 >> 0x10)));
                setCopReg(2,0x800,*(undefined4 *)&(&gNormalList)[uVar1 >> 0x10].z);
                setCopReg(2,0x3000,uVar7);
                if (iVar2 == 0) {
                  copFunction(2,0x108041b);
                }
                else {
                  copFunction(2,0xe80413);
                }
                uVar7 = getCopReg(2,0xb000);
              }
              puVar20[2] = uVar7;
              puVar9 = puVar4 + 10;
              uVar8 = puVar4[6];
              uVar7 = puVar4[7];
              uVar12 = puVar4[8];
              uVar11 = puVar4[9];
              uVar16 = puVar4[10];
              uVar1 = puVar4[0xb];
              puVar20 = puVar20 + 3;
              puVar21 = puVar21 + 3;
              puVar5 = puVar5 + 6;
              puVar4 = puVar4 + 6;
            }
            uVar1 = (uint)((int)puVar18 < (int)puVar4);
            param_2 = puVar5;
            param_7 = puVar20;
            param_8 = puVar21;
            if ((int)puVar18 >= (int)puVar4) {
              setCopReg(2,0,uVar8);
              setCopReg(2,0x800,uVar7);
              copFunction(2,0x180001);
              uVar16 = *(undefined4 *)(&gNormalList + (uVar7 >> 0x10));
              uVar3 = *(undefined4 *)&(&gNormalList)[uVar7 >> 0x10].z;
              uVar1 = *puVar21;
              uVar8 = getCopReg(2,0xe);
              *puVar5 = uVar8;
              uVar8 = getCopReg(2,0x13);
              puVar5[1] = uVar8;
              uVar7 = getCopControlWord(2,0xf800);
              iVar2 = getCopReg(2,0x4000);
              if (modelFadeValue != 0) {
                setCopReg(2,0x4000,modelFadeValue);
                iVar2 = modelFadeValue;
              }
              if ((uVar1 & 0x40000000) == 0) {
                setCopReg(2,0,uVar16);
                setCopReg(2,0x800,uVar3);
                setCopReg(2,0x3000,uVar1);
                if (iVar2 == 0) {
                  copFunction(2,0x108041b);
                }
                else {
                  copFunction(2,0xe80413);
                }
                uVar1 = getCopReg(2,0xb000);
              }
              *puVar20 = uVar1;
              param_2 = puVar5 + 2;
              param_8 = puVar21 + 1;
              param_7 = puVar20 + 1;
              uVar1 = (uint)((int)puVar18 < (int)(puVar4 + 2));
              param_3 = param_3 & uVar7;
              if ((int)puVar18 >= (int)(puVar4 + 2)) {
                setCopReg(2,0,uVar12);
                setCopReg(2,0x800,uVar11);
                copFunction(2,0x180001);
                uVar12 = *(undefined4 *)(&gNormalList + (uVar11 >> 0x10));
                uVar16 = *(undefined4 *)&(&gNormalList)[uVar11 >> 0x10].z;
                uVar11 = *param_8;
                uVar8 = getCopReg(2,0xe);
                *param_2 = uVar8;
                uVar8 = getCopReg(2,0x13);
                puVar5[3] = uVar8;
                uVar7 = getCopControlWord(2,0xf800);
                uVar1 = 0x40000000;
                if ((uVar11 & 0x40000000) == 0) {
                  setCopReg(2,0,uVar12);
                  setCopReg(2,0x800,uVar16);
                  setCopReg(2,0x3000,uVar11);
                  if (iVar2 == 0) {
                    copFunction(2,0x108041b);
                  }
                  else {
                    copFunction(2,0xe80413);
                  }
                  uVar11 = getCopReg(2,0xb000);
                }
                *param_7 = uVar11;
                param_2 = puVar5 + 4;
                param_8 = puVar21 + 2;
                param_3 = param_3 & uVar7;
                param_7 = puVar20 + 2;
              }
            }
          }
          param_5 = param_5 + 0x10;
          iVar6 = iVar6 + -1;
          iVar22 = iVar22 + 0x18;
        } while (iVar6 != 0);
      }
    }
  }
  return param_3;
}



// decompiled code
// original method signature: 
// void DRAW_MFace3_S() /* DRAW_MFace3_S method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
 // line 3791, offset 0x80027fa8
	/* begin block 1 */
		// Start line: 7583
	/* end block 1 */
	// End Line: 7584

	/* begin block 2 */
		// Start line: 7584
	/* end block 2 */
	// End Line: 7585

	/* begin block 3 */
		// Start line: 7585
	/* end block 3 */
	// End Line: 7586

	/* begin block 4 */
		// Start line: 7586
	/* end block 4 */
	// End Line: 7587

	/* begin block 5 */
		// Start line: 7587
	/* end block 5 */
	// End Line: 7588

	/* begin block 6 */
		// Start line: 7588
	/* end block 6 */
	// End Line: 7589

	/* begin block 7 */
		// Start line: 7589
	/* end block 7 */
	// End Line: 7590

	/* begin block 8 */
		// Start line: 7590
	/* end block 8 */
	// End Line: 7591

	/* begin block 9 */
		// Start line: 7591
	/* end block 9 */
	// End Line: 7592

	/* begin block 10 */
		// Start line: 7592
	/* end block 10 */
	// End Line: 7593

	/* begin block 11 */
		// Start line: 7593
	/* end block 11 */
	// End Line: 7594

	/* begin block 12 */
		// Start line: 7594
	/* end block 12 */
	// End Line: 7595

	/* begin block 13 */
		// Start line: 7595
	/* end block 13 */
	// End Line: 7596

	/* begin block 14 */
		// Start line: 7596
	/* end block 14 */
	// End Line: 7597

	/* begin block 15 */
		// Start line: 7597
	/* end block 15 */
	// End Line: 7598

	/* begin block 16 */
		// Start line: 7598
	/* end block 16 */
	// End Line: 7599

	/* begin block 17 */
		// Start line: 7599
	/* end block 17 */
	// End Line: 7600

	/* begin block 18 */
		// Start line: 7600
	/* end block 18 */
	// End Line: 7601

	/* begin block 19 */
		// Start line: 7601
	/* end block 19 */
	// End Line: 7602

	/* begin block 20 */
		// Start line: 7602
	/* end block 20 */
	// End Line: 7603

	/* begin block 21 */
		// Start line: 7603
	/* end block 21 */
	// End Line: 7604

	/* begin block 22 */
		// Start line: 7604
	/* end block 22 */
	// End Line: 7605

	/* begin block 23 */
		// Start line: 7605
	/* end block 23 */
	// End Line: 7606

	/* begin block 24 */
		// Start line: 7606
	/* end block 24 */
	// End Line: 7607

	/* begin block 25 */
		// Start line: 7607
	/* end block 25 */
	// End Line: 7608

	/* begin block 26 */
		// Start line: 7608
	/* end block 26 */
	// End Line: 7609

	/* begin block 27 */
		// Start line: 7609
	/* end block 27 */
	// End Line: 7610

	/* begin block 28 */
		// Start line: 7610
	/* end block 28 */
	// End Line: 7611

	/* begin block 29 */
		// Start line: 7611
	/* end block 29 */
	// End Line: 7612

	/* begin block 30 */
		// Start line: 7612
	/* end block 30 */
	// End Line: 7613

	/* begin block 31 */
		// Start line: 7613
	/* end block 31 */
	// End Line: 7614

	/* begin block 32 */
		// Start line: 7614
	/* end block 32 */
	// End Line: 7615

	/* begin block 33 */
		// Start line: 7615
	/* end block 33 */
	// End Line: 7616

	/* begin block 34 */
		// Start line: 7616
	/* end block 34 */
	// End Line: 7617

	/* begin block 35 */
		// Start line: 7617
	/* end block 35 */
	// End Line: 7618

	/* begin block 36 */
		// Start line: 7618
	/* end block 36 */
	// End Line: 7619

	/* begin block 37 */
		// Start line: 7619
	/* end block 37 */
	// End Line: 7620

	/* begin block 38 */
		// Start line: 7620
	/* end block 38 */
	// End Line: 7621

	/* begin block 39 */
		// Start line: 7621
	/* end block 39 */
	// End Line: 7622

	/* begin block 40 */
		// Start line: 7622
	/* end block 40 */
	// End Line: 7623

	/* begin block 41 */
		// Start line: 7623
	/* end block 41 */
	// End Line: 7624

	/* begin block 42 */
		// Start line: 7624
	/* end block 42 */
	// End Line: 7625

	/* begin block 43 */
		// Start line: 7625
	/* end block 43 */
	// End Line: 7626

	/* begin block 44 */
		// Start line: 7626
	/* end block 44 */
	// End Line: 7627

	/* begin block 45 */
		// Start line: 7627
	/* end block 45 */
	// End Line: 7628

	/* begin block 46 */
		// Start line: 7628
	/* end block 46 */
	// End Line: 7629

	/* begin block 47 */
		// Start line: 7629
	/* end block 47 */
	// End Line: 7630

	/* begin block 48 */
		// Start line: 7630
	/* end block 48 */
	// End Line: 7631

	/* begin block 49 */
		// Start line: 7631
	/* end block 49 */
	// End Line: 7632

	/* begin block 50 */
		// Start line: 7632
	/* end block 50 */
	// End Line: 7633

	/* begin block 51 */
		// Start line: 7633
	/* end block 51 */
	// End Line: 7634

	/* begin block 52 */
		// Start line: 7634
	/* end block 52 */
	// End Line: 7635

	/* begin block 53 */
		// Start line: 7635
	/* end block 53 */
	// End Line: 7636

	/* begin block 54 */
		// Start line: 7636
	/* end block 54 */
	// End Line: 7637

	/* begin block 55 */
		// Start line: 7637
	/* end block 55 */
	// End Line: 7638

	/* begin block 56 */
		// Start line: 7638
	/* end block 56 */
	// End Line: 7639

	/* begin block 57 */
		// Start line: 7639
	/* end block 57 */
	// End Line: 7640

	/* begin block 58 */
		// Start line: 7640
	/* end block 58 */
	// End Line: 7641

	/* begin block 59 */
		// Start line: 7641
	/* end block 59 */
	// End Line: 7642

	/* begin block 60 */
		// Start line: 7642
	/* end block 60 */
	// End Line: 7643

	/* begin block 61 */
		// Start line: 7643
	/* end block 61 */
	// End Line: 7644

	/* begin block 62 */
		// Start line: 7644
	/* end block 62 */
	// End Line: 7645

	/* begin block 63 */
		// Start line: 7645
	/* end block 63 */
	// End Line: 7646

	/* begin block 64 */
		// Start line: 7646
	/* end block 64 */
	// End Line: 7647

	/* begin block 65 */
		// Start line: 7647
	/* end block 65 */
	// End Line: 7648

	/* begin block 66 */
		// Start line: 7648
	/* end block 66 */
	// End Line: 7649

	/* begin block 67 */
		// Start line: 7649
	/* end block 67 */
	// End Line: 7650

	/* begin block 68 */
		// Start line: 7650
	/* end block 68 */
	// End Line: 7651

	/* begin block 69 */
		// Start line: 7651
	/* end block 69 */
	// End Line: 7652

	/* begin block 70 */
		// Start line: 7652
	/* end block 70 */
	// End Line: 7653

	/* begin block 71 */
		// Start line: 7653
	/* end block 71 */
	// End Line: 7654

	/* begin block 72 */
		// Start line: 7654
	/* end block 72 */
	// End Line: 7655

	/* begin block 73 */
		// Start line: 7655
	/* end block 73 */
	// End Line: 7656

	/* begin block 74 */
		// Start line: 7656
	/* end block 74 */
	// End Line: 7657

	/* begin block 75 */
		// Start line: 7657
	/* end block 75 */
	// End Line: 7658

	/* begin block 76 */
		// Start line: 7658
	/* end block 76 */
	// End Line: 7659

	/* begin block 77 */
		// Start line: 7659
	/* end block 77 */
	// End Line: 7660

	/* begin block 78 */
		// Start line: 7660
	/* end block 78 */
	// End Line: 7661

	/* begin block 79 */
		// Start line: 7661
	/* end block 79 */
	// End Line: 7662

	/* begin block 80 */
		// Start line: 7662
	/* end block 80 */
	// End Line: 7663

	/* begin block 81 */
		// Start line: 7663
	/* end block 81 */
	// End Line: 7664

	/* begin block 82 */
		// Start line: 7664
	/* end block 82 */
	// End Line: 7665

	/* begin block 83 */
		// Start line: 7665
	/* end block 83 */
	// End Line: 7666

	/* begin block 84 */
		// Start line: 7666
	/* end block 84 */
	// End Line: 7667

	/* begin block 85 */
		// Start line: 7667
	/* end block 85 */
	// End Line: 7668

	/* begin block 86 */
		// Start line: 7668
	/* end block 86 */
	// End Line: 7669

	/* begin block 87 */
		// Start line: 7669
	/* end block 87 */
	// End Line: 7670

	/* begin block 88 */
		// Start line: 7670
	/* end block 88 */
	// End Line: 7671

	/* begin block 89 */
		// Start line: 7671
	/* end block 89 */
	// End Line: 7672

	/* begin block 90 */
		// Start line: 7672
	/* end block 90 */
	// End Line: 7673

	/* begin block 91 */
		// Start line: 7673
	/* end block 91 */
	// End Line: 7674

	/* begin block 92 */
		// Start line: 7674
	/* end block 92 */
	// End Line: 7675

	/* begin block 93 */
		// Start line: 7675
	/* end block 93 */
	// End Line: 7676

	/* begin block 94 */
		// Start line: 7676
	/* end block 94 */
	// End Line: 7677

	/* begin block 95 */
		// Start line: 7677
	/* end block 95 */
	// End Line: 7678

	/* begin block 96 */
		// Start line: 7678
	/* end block 96 */
	// End Line: 7679

	/* begin block 97 */
		// Start line: 7679
	/* end block 97 */
	// End Line: 7680

	/* begin block 98 */
		// Start line: 7680
	/* end block 98 */
	// End Line: 7681

	/* begin block 99 */
		// Start line: 7681
	/* end block 99 */
	// End Line: 7682

	/* begin block 100 */
		// Start line: 7682
	/* end block 100 */
	// End Line: 7683

	/* begin block 101 */
		// Start line: 7683
	/* end block 101 */
	// End Line: 7684

	/* begin block 102 */
		// Start line: 7684
	/* end block 102 */
	// End Line: 7685

	/* begin block 103 */
		// Start line: 7685
	/* end block 103 */
	// End Line: 7686

	/* begin block 104 */
		// Start line: 7686
	/* end block 104 */
	// End Line: 7687

	/* begin block 105 */
		// Start line: 7687
	/* end block 105 */
	// End Line: 7688

	/* begin block 106 */
		// Start line: 7688
	/* end block 106 */
	// End Line: 7689

	/* begin block 107 */
		// Start line: 7689
	/* end block 107 */
	// End Line: 7690

	/* begin block 108 */
		// Start line: 7690
	/* end block 108 */
	// End Line: 7691

	/* begin block 109 */
		// Start line: 7691
	/* end block 109 */
	// End Line: 7692

	/* begin block 110 */
		// Start line: 7692
	/* end block 110 */
	// End Line: 7693

	/* begin block 111 */
		// Start line: 7693
	/* end block 111 */
	// End Line: 7694

	/* begin block 112 */
		// Start line: 7694
	/* end block 112 */
	// End Line: 7695

	/* begin block 113 */
		// Start line: 7695
	/* end block 113 */
	// End Line: 7696

	/* begin block 114 */
		// Start line: 7696
	/* end block 114 */
	// End Line: 7697

	/* begin block 115 */
		// Start line: 7697
	/* end block 115 */
	// End Line: 7698

	/* begin block 116 */
		// Start line: 7698
	/* end block 116 */
	// End Line: 7699

	/* begin block 117 */
		// Start line: 7699
	/* end block 117 */
	// End Line: 7700

	/* begin block 118 */
		// Start line: 7700
	/* end block 118 */
	// End Line: 7701

	/* begin block 119 */
		// Start line: 7701
	/* end block 119 */
	// End Line: 7702

	/* begin block 120 */
		// Start line: 7702
	/* end block 120 */
	// End Line: 7703

	/* begin block 121 */
		// Start line: 7703
	/* end block 121 */
	// End Line: 7704

	/* begin block 122 */
		// Start line: 7704
	/* end block 122 */
	// End Line: 7705

	/* begin block 123 */
		// Start line: 7705
	/* end block 123 */
	// End Line: 7706

	/* begin block 124 */
		// Start line: 7706
	/* end block 124 */
	// End Line: 7707

	/* begin block 125 */
		// Start line: 7719
	/* end block 125 */
	// End Line: 7720

	/* begin block 126 */
		// Start line: 7720
	/* end block 126 */
	// End Line: 7721

	/* begin block 127 */
		// Start line: 7721
	/* end block 127 */
	// End Line: 7722

	/* begin block 128 */
		// Start line: 7722
	/* end block 128 */
	// End Line: 7723

	/* begin block 129 */
		// Start line: 7723
	/* end block 129 */
	// End Line: 7724

	/* begin block 130 */
		// Start line: 7724
	/* end block 130 */
	// End Line: 7725

	/* begin block 131 */
		// Start line: 7725
	/* end block 131 */
	// End Line: 7726

void DRAW_MFace3_S(undefined4 param_1,undefined4 param_2)

{
  char cVar1;
  byte bVar2;
  undefined4 in_zero;
  undefined4 in_at;
  uint in_v0;
  uint in_v1;
  uint uVar3;
  int iVar4;
  undefined4 uVar5;
  undefined4 uVar6;
  int iVar7;
  uint uVar8;
  uint uVar9;
  uint uVar10;
  uint uVar11;
  uint uVar12;
  undefined4 uVar13;
  int iVar14;
  uint *unaff_s0;
  uint *puVar15;
  int unaff_s1;
  int unaff_s3;
  uint *unaff_s5;
  uint *unaff_s6;
  uint *unaff_s7;
  int unaff_s8;
  
  uVar3 = getCopControlWord(2,0xf800);
  if ((uVar3 & 0x60000) != 0) {
    return;
  }
  copFunction(2,0x1400006);
  iVar4 = getCopReg(2,0xc000);
  if (-1 < iVar4) {
    return;
  }
  if ((in_v0 & 4) == 0) {
    iVar14 = getCopReg(2,0x8800);
    iVar4 = getCopReg(2,0x9000);
    iVar7 = getCopReg(2,0x9800);
    if (iVar4 <= iVar14) {
      iVar4 = iVar14;
    }
    iVar14 = iVar7 >> 2;
    if (iVar7 <= iVar4) {
      iVar14 = iVar4 >> 2;
    }
  }
  else {
    copFunction(2,0x158002d);
    iVar14 = getCopReg(2,0x3800);
  }
  if ((in_v0 & 2) != 0) {
    iVar14 = iVar14 + (int)*(char *)(in_v1 + 0xb) * 2;
  }
  iVar4 = iVar14 * 4 + *(int *)(unaff_s8 + 0x8c);
  if (iVar4 < 1) {
    return;
  }
  if (0x2fff < iVar4) {
    return;
  }
  bVar2 = (byte)unaff_s3;
  if ((in_v0 & 1) == 0) {
    if ((in_v0 & 2) == 0) {
      uVar3 = getCopReg(2,0xc);
      unaff_s0[2] = uVar3;
      uVar3 = getCopReg(2,0xd);
      unaff_s0[3] = uVar3;
      uVar3 = getCopReg(2,0xe);
      unaff_s0[4] = uVar3;
      if ((in_v0 & 8) != 0) {
        unaff_s0[1] = in_v1;
        *(byte *)((int)unaff_s0 + 7) = *(byte *)((int)unaff_s0 + 7) | bVar2;
        *unaff_s0 = *(uint *)(iVar4 + unaff_s1);
        *(undefined *)((int)unaff_s0 + 3) = 4;
        *(uint *)(iVar4 + unaff_s1) = (uint)unaff_s0 & 0xffffff;
        return;
      }
      setCopReg(2,in_zero,**(undefined4 **)(unaff_s8 + 0x4c));
      setCopReg(2,in_at,(*(undefined4 **)(unaff_s8 + 0x4c))[1]);
      setCopReg(2,0x3000,in_v1);
      copFunction(2,0xe80413);
      *unaff_s0 = *(uint *)(iVar4 + unaff_s1);
      *(undefined *)((int)unaff_s0 + 3) = 4;
      *(uint *)(iVar4 + unaff_s1) = (uint)unaff_s0 & 0xffffff;
      uVar3 = getCopReg(2,0x16);
      unaff_s0[1] = uVar3;
      *(byte *)((int)unaff_s0 + 7) = *(byte *)((int)unaff_s0 + 7) | bVar2;
      return;
    }
    uVar3 = getCopReg(2,0xc);
    unaff_s0[2] = uVar3;
    uVar3 = getCopReg(2,0xd);
    unaff_s0[4] = uVar3;
    uVar3 = getCopReg(2,0xe);
    unaff_s0[6] = uVar3;
    iVar14 = getCopReg(2,0x4000);
    if (iVar14 == 0) {
      if ((in_v0 & 8) != 0) {
        unaff_s0[1] = *(uint *)(in_v1 + 0xc);
        uVar3 = *unaff_s6;
        uVar8 = *unaff_s7;
        unaff_s0[3] = *unaff_s5;
        unaff_s0[5] = uVar3;
        unaff_s0[7] = uVar8;
        *(byte *)((int)unaff_s0 + 7) = *(byte *)((int)unaff_s0 + 7) | bVar2;
        *unaff_s0 = *(uint *)(iVar4 + unaff_s1);
        *(undefined *)((int)unaff_s0 + 3) = 7;
        *(uint *)(iVar4 + unaff_s1) = (uint)unaff_s0 & 0xffffff;
        return;
      }
      setCopReg(2,in_zero,**(undefined4 **)(unaff_s8 + 0x4c));
      setCopReg(2,in_at,(*(undefined4 **)(unaff_s8 + 0x4c))[1]);
      setCopReg(2,0x3000,*(undefined4 *)(in_v1 + 0xc));
      copFunction(2,0xe80413);
      uVar3 = *unaff_s6;
      uVar8 = *unaff_s7;
      unaff_s0[3] = *unaff_s5;
      unaff_s0[5] = uVar3;
      unaff_s0[7] = uVar8;
      *unaff_s0 = *(uint *)(iVar4 + unaff_s1);
      *(undefined *)((int)unaff_s0 + 3) = 7;
      *(uint *)(iVar4 + unaff_s1) = (uint)unaff_s0 & 0xffffff;
      uVar3 = getCopReg(2,0x16);
      unaff_s0[1] = uVar3;
      *(byte *)((int)unaff_s0 + 7) = *(byte *)((int)unaff_s0 + 7) | bVar2;
      return;
    }
    setCopReg(2,in_zero,**(undefined4 **)(unaff_s8 + 0x4c));
    setCopReg(2,in_at,(*(undefined4 **)(unaff_s8 + 0x4c))[1]);
    setCopReg(2,0x3000,*(uint *)(in_v1 + 0xc) & 0xefffffff | 0x2000000);
    copFunction(2,0xe80413);
    uVar3 = *unaff_s6;
    uVar8 = *unaff_s7;
    unaff_s0[3] = *unaff_s5;
    unaff_s0[5] = uVar3 | 0x200000;
    unaff_s0[7] = uVar8;
    *unaff_s0 = *(uint *)(iVar4 + unaff_s1);
    *(undefined *)((int)unaff_s0 + 3) = 7;
    *(uint *)(iVar4 + unaff_s1) = (uint)unaff_s0 & 0xffffff;
    uVar3 = getCopReg(2,0x16);
    unaff_s0[1] = uVar3;
    *(byte *)((int)unaff_s0 + 7) = *(byte *)((int)unaff_s0 + 7) | bVar2;
    puVar15 = unaff_s0 + 8;
DRAW_MFace3_fog_backface:
    uVar3 = depthQBackColor;
    setCopReg(2,0x3000,depthQBackColor);
    copFunction(2,0x780010);
    *puVar15 = *(uint *)(iVar4 + unaff_s1);
    *(undefined *)((int)puVar15 + 3) = 6;
    *(uint *)(iVar4 + unaff_s1) = (uint)puVar15 & 0xffffff;
    iVar4 = getCopReg(2,0xb000);
    uVar3 = (uVar3 | 0x30000000) - iVar4;
    puVar15[1] = uVar3;
    puVar15[3] = uVar3;
    puVar15[5] = uVar3;
    uVar3 = getCopReg(2,0xc);
    puVar15[2] = uVar3;
    uVar3 = getCopReg(2,0xd);
    puVar15[4] = uVar3;
    uVar3 = getCopReg(2,0xe);
    puVar15[6] = uVar3;
    return;
  }
  iVar14 = getCopReg(2,0x4000);
  if ((in_v0 & 2) == 0) {
    if (iVar14 != 0) {
      uVar5 = getCopControlWord(2,0xa800);
      uVar6 = getCopControlWord(2,0xb000);
      uVar13 = getCopControlWord(2,0xb800);
      *(undefined4 *)(unaff_s8 + 0x70) = uVar5;
      *(undefined4 *)(unaff_s8 + 0x74) = uVar6;
      *(undefined4 *)(unaff_s8 + 0x78) = uVar13;
      setCopControlWord(2,0xa800,(int)*(char *)(unaff_s8 + 0x7c) << 4);
      setCopControlWord(2,0xb000,(int)*(char *)(unaff_s8 + 0x7d) << 4);
      setCopControlWord(2,0xb800,(int)*(char *)(unaff_s8 + 0x7e) << 4);
      setCopReg(2,in_zero,**(undefined4 **)(unaff_s8 + 0x4c));
      setCopReg(2,in_at,(*(undefined4 **)(unaff_s8 + 0x4c))[1]);
      setCopReg(2,in_v0,**(undefined4 **)(unaff_s8 + 0x50));
      setCopReg(2,in_v1,(*(undefined4 **)(unaff_s8 + 0x50))[1]);
      setCopReg(2,param_1,**(undefined4 **)(unaff_s8 + 0x54));
      setCopReg(2,param_2,(*(undefined4 **)(unaff_s8 + 0x54))[1]);
      setCopReg(2,0x3000,in_v1);
      copFunction(2,0xf80416);
      *unaff_s0 = *(uint *)(iVar4 + unaff_s1);
      *(undefined *)((int)unaff_s0 + 3) = 6;
      *(uint *)(iVar4 + unaff_s1) = (uint)unaff_s0 & 0xffffff;
      uVar5 = *(undefined4 *)(unaff_s8 + 0x70);
      uVar6 = *(undefined4 *)(unaff_s8 + 0x74);
      uVar13 = *(undefined4 *)(unaff_s8 + 0x78);
      uVar3 = getCopReg(2,0x14);
      unaff_s0[1] = uVar3;
      uVar3 = getCopReg(2,0x15);
      unaff_s0[3] = uVar3;
      uVar3 = getCopReg(2,0x16);
      unaff_s0[5] = uVar3;
      *(byte *)((int)unaff_s0 + 7) = *(byte *)((int)unaff_s0 + 7) | bVar2;
      setCopControlWord(2,0xa800,uVar5);
      setCopControlWord(2,0xb000,uVar6);
      setCopControlWord(2,0xb800,uVar13);
      return;
    }
    if (unaff_s3 != 0) {
      unaff_s0[1] = 0xe1000268;
      uVar3 = getCopReg(2,0xc);
      unaff_s0[3] = uVar3;
      uVar3 = getCopReg(2,0xd);
      unaff_s0[5] = uVar3;
      uVar3 = getCopReg(2,0xe);
      unaff_s0[7] = uVar3;
      setCopReg(2,in_zero,**(undefined4 **)(unaff_s8 + 0x4c));
      setCopReg(2,in_at,(*(undefined4 **)(unaff_s8 + 0x4c))[1]);
      setCopReg(2,in_v0,**(undefined4 **)(unaff_s8 + 0x50));
      setCopReg(2,in_v1,(*(undefined4 **)(unaff_s8 + 0x50))[1]);
      setCopReg(2,param_1,**(undefined4 **)(unaff_s8 + 0x54));
      setCopReg(2,param_2,(*(undefined4 **)(unaff_s8 + 0x54))[1]);
      setCopReg(2,0x3000,in_v1);
      copFunction(2,0xf80416);
      *unaff_s0 = *(uint *)(iVar4 + unaff_s1);
      *(undefined *)((int)unaff_s0 + 3) = 7;
      *(uint *)(iVar4 + unaff_s1) = (uint)unaff_s0 & 0xffffff;
      uVar3 = getCopReg(2,0x14);
      unaff_s0[2] = uVar3;
      uVar3 = getCopReg(2,0x15);
      unaff_s0[4] = uVar3;
      uVar3 = getCopReg(2,0x16);
      unaff_s0[6] = uVar3;
      *(byte *)((int)unaff_s0 + 0xb) = *(byte *)((int)unaff_s0 + 0xb) | bVar2;
      return;
    }
    uVar3 = getCopReg(2,0xc);
    unaff_s0[2] = uVar3;
    uVar3 = getCopReg(2,0xd);
    unaff_s0[4] = uVar3;
    uVar3 = getCopReg(2,0xe);
    unaff_s0[6] = uVar3;
    setCopReg(2,in_zero,**(undefined4 **)(unaff_s8 + 0x4c));
    setCopReg(2,in_at,(*(undefined4 **)(unaff_s8 + 0x4c))[1]);
    setCopReg(2,in_v0,**(undefined4 **)(unaff_s8 + 0x50));
    setCopReg(2,in_v1,(*(undefined4 **)(unaff_s8 + 0x50))[1]);
    setCopReg(2,param_1,**(undefined4 **)(unaff_s8 + 0x54));
    setCopReg(2,param_2,(*(undefined4 **)(unaff_s8 + 0x54))[1]);
    setCopReg(2,0x3000,in_v1);
    copFunction(2,0xf80416);
    *unaff_s0 = *(uint *)(iVar4 + unaff_s1);
    *(undefined *)((int)unaff_s0 + 3) = 6;
    *(uint *)(iVar4 + unaff_s1) = (uint)unaff_s0 & 0xffffff;
    uVar3 = getCopReg(2,0x14);
    unaff_s0[1] = uVar3;
    uVar3 = getCopReg(2,0x15);
    unaff_s0[3] = uVar3;
    uVar3 = getCopReg(2,0x16);
    unaff_s0[5] = uVar3;
    *(undefined *)((int)unaff_s0 + 7) = *(undefined *)((int)unaff_s0 + 7);
    return;
  }
  uVar3 = getCopReg(2,0xc);
  unaff_s0[2] = uVar3;
  uVar3 = getCopReg(2,0xd);
  unaff_s0[5] = uVar3;
  uVar3 = getCopReg(2,0xe);
  unaff_s0[8] = uVar3;
  iVar14 = getCopReg(2,0x4000);
  if (iVar14 != 0) {
    uVar3 = *(uint *)(unaff_s8 + 0x50);
    uVar8 = *(uint *)(unaff_s8 + 0x54);
    unaff_s0[1] = *(uint *)(unaff_s8 + 0x4c) & 0xffffff | 0x36000000;
    unaff_s0[4] = uVar3 & 0xffffff | 0x36000000;
    unaff_s0[7] = uVar8 & 0xffffff | 0x36000000;
    uVar3 = *unaff_s6;
    uVar8 = *unaff_s7;
    unaff_s0[3] = *unaff_s5;
    unaff_s0[6] = uVar3 | 0x200000;
    unaff_s0[9] = uVar8;
    *unaff_s0 = *(uint *)(iVar4 + unaff_s1);
    *(undefined *)((int)unaff_s0 + 3) = 9;
    *(uint *)(iVar4 + unaff_s1) = (uint)unaff_s0 & 0xffffff;
    uVar3 = getCopReg(2,0xc);
    unaff_s0[2] = uVar3;
    uVar3 = getCopReg(2,0xd);
    unaff_s0[5] = uVar3;
    uVar3 = getCopReg(2,0xe);
    unaff_s0[8] = uVar3;
    puVar15 = unaff_s0 + 10;
    goto DRAW_MFace3_fog_backface;
  }
  uVar3 = *(uint *)(unaff_s8 + 0x50);
  uVar8 = *(uint *)(unaff_s8 + 0x54);
  unaff_s0[1] = *(uint *)(unaff_s8 + 0x4c) & 0x2ffffff | 0x34000000;
  unaff_s0[4] = uVar3 & 0x2ffffff | 0x34000000;
  unaff_s0[7] = uVar8 & 0x2ffffff | 0x34000000;
  uVar3 = *unaff_s6;
  uVar8 = *unaff_s7;
  if (*(int *)(unaff_s8 + 0x80) != 0) {
    uVar3 = uVar3 & 0xffff | (uVar3 >> 0x10 & 0xff9f | 0x20) << 0x10;
  }
  unaff_s0[3] = *unaff_s5;
  unaff_s0[6] = uVar3;
  unaff_s0[9] = uVar8;
  *(byte *)((int)unaff_s0 + 7) = *(byte *)((int)unaff_s0 + 7) | bVar2;
  *unaff_s0 = *(uint *)(iVar4 + unaff_s1);
  *(undefined *)((int)unaff_s0 + 3) = 9;
  *(uint *)(iVar4 + unaff_s1) = (uint)unaff_s0 & 0xffffff;
  if (*(int *)(unaff_s8 + 0x80) == 0) {
    return;
  }
  setCopReg(2,0x4000,*(int *)(unaff_s8 + 0x80));
  uVar3 = getCopReg(2,0x6000);
  uVar9 = getCopReg(2,0x6800);
  uVar11 = getCopReg(2,0x7000);
  setCopReg(2,0x3000,0x808080);
  unaff_s0[0xc] = uVar3;
  unaff_s0[0xe] = uVar9;
  unaff_s0[0x10] = uVar11;
  copFunction(2,0x780010);
  *(undefined *)((int)unaff_s0 + 0x35) = (char)(uVar3 >> 0x10);
  *(undefined *)((int)unaff_s0 + 0x3d) = (char)(uVar9 >> 0x10);
  *(undefined *)((int)unaff_s0 + 0x45) = (char)(uVar11 >> 0x10);
  uVar8 = uVar3 & 0xffff;
  uVar10 = uVar9 & 0xffff;
  uVar12 = uVar11 & 0xffff;
  if (uVar10 < uVar8) {
    if (uVar10 <= uVar12) {
      uVar3 = uVar9 & 0xffc0;
      goto DMF_faded_tpage_calc;
    }
  }
  else {
    if (uVar8 <= uVar12) {
      uVar3 = uVar3 & 0xffc0;
      goto DMF_faded_tpage_calc;
    }
  }
  uVar3 = uVar11 & 0xffc0;
DMF_faded_tpage_calc:
  cVar1 = (char)uVar3;
  *(char *)(unaff_s0 + 0xd) = (char)uVar8 - cVar1;
  *(char *)(unaff_s0 + 0xf) = (char)uVar10 - cVar1;
  *(char *)(unaff_s0 + 0x11) = (char)uVar12 - cVar1;
  *(ushort *)((int)unaff_s0 + 0x3e) =
       (ushort)(uVar3 >> 6) | (ushort)*(undefined4 *)(unaff_s8 + 0x88);
  unaff_s0[10] = *(uint *)(iVar4 + unaff_s1);
  *(undefined *)((int)unaff_s0 + 0x2b) = 7;
  *(uint *)(iVar4 + unaff_s1) = (uint)(unaff_s0 + 10) & 0xffffff;
  iVar4 = getCopReg(2,0xb000);
  unaff_s0[0xb] = 0x24808080 - iVar4;
  return;
}



// autogenerated function stub: 
// void DRAW_MFace3_MAXZ0() /* DRAW_MFace3_MAXZ0 method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
void DRAW_MFace3_MAXZ0() 
{ // line 3964, offset 0x80027fe8
	/* begin block 1 */
		// Start line: 7929
	/* end block 1 */
	// End Line: 7930

	/* begin block 2 */
		// Start line: 7930
	/* end block 2 */
	// End Line: 7931

	/* begin block 3 */
		// Start line: 7931
	/* end block 3 */
	// End Line: 7932

	return null;
}


// autogenerated function stub: 
// void DRAW_MFace3_MAXZ1() /* DRAW_MFace3_MAXZ1 method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
void DRAW_MFace3_MAXZ1() 
{ // line 3975, offset 0x80028004
	/* begin block 1 */
		// Start line: 7951
	/* end block 1 */
	// End Line: 7952

	/* begin block 2 */
		// Start line: 7952
	/* end block 2 */
	// End Line: 7953

	return null;
}


// autogenerated function stub: 
// void DRAW_MFace3_MT() /* DRAW_MFace3_MT method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
void DRAW_MFace3_MT() 
{ // line 3981, offset 0x80028014
	/* begin block 1 */
		// Start line: 7963
	/* end block 1 */
	// End Line: 7964

	/* begin block 2 */
		// Start line: 7964
	/* end block 2 */
	// End Line: 7965

	return null;
}


// autogenerated function stub: 
// void DRAW_MFace3_OTZ() /* DRAW_MFace3_OTZ method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
void DRAW_MFace3_OTZ() 
{ // line 3990, offset 0x80028030
	/* begin block 1 */
		// Start line: 7981
	/* end block 1 */
	// End Line: 7982

	/* begin block 2 */
		// Start line: 7982
	/* end block 2 */
	// End Line: 7983

	return null;
}


// autogenerated function stub: 
// void DRAW_MFace3_F3() /* DRAW_MFace3_F3 method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
void DRAW_MFace3_F3() 
{ // line 4015, offset 0x8002805c
	/* begin block 1 */
		// Start line: 8031
	/* end block 1 */
	// End Line: 8032

	/* begin block 2 */
		// Start line: 8032
	/* end block 2 */
	// End Line: 8033

	return null;
}


// autogenerated function stub: 
// void DRAW_MFace3_F3_NCDPQ() /* DRAW_MFace3_F3_NCDPQ method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
void DRAW_MFace3_F3_NCDPQ() 
{ // line 4026, offset 0x80028080
	/* begin block 1 */
		// Start line: 8053
	/* end block 1 */
	// End Line: 8054

	/* begin block 2 */
		// Start line: 8054
	/* end block 2 */
	// End Line: 8055

	/* begin block 3 */
		// Start line: 8055
	/* end block 3 */
	// End Line: 8056

	return null;
}


// autogenerated function stub: 
// void DRAW_MFace3_F3_AddPrim() /* DRAW_MFace3_F3_AddPrim method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
void DRAW_MFace3_F3_AddPrim() 
{ // line 4050, offset 0x800280e0
	/* begin block 1 */
		// Start line: 8101
	/* end block 1 */
	// End Line: 8102

	/* begin block 2 */
		// Start line: 8102
	/* end block 2 */
	// End Line: 8103

	return null;
}


// autogenerated function stub: 
// void DRAW_MFace3_FT3() /* DRAW_MFace3_FT3 method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
void DRAW_MFace3_FT3() 
{ // line 4059, offset 0x8002811c
	/* begin block 1 */
		// Start line: 8119
	/* end block 1 */
	// End Line: 8120

	/* begin block 2 */
		// Start line: 8120
	/* end block 2 */
	// End Line: 8121

	/* begin block 3 */
		// Start line: 8121
	/* end block 3 */
	// End Line: 8122

	/* begin block 4 */
		// Start line: 8122
	/* end block 4 */
	// End Line: 8123

	/* begin block 5 */
		// Start line: 8123
	/* end block 5 */
	// End Line: 8124

	/* begin block 6 */
		// Start line: 8124
	/* end block 6 */
	// End Line: 8125

	return null;
}


// autogenerated function stub: 
// void DRAW_MFace3_FT3_NCDPQ() /* DRAW_MFace3_FT3_NCDPQ method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
void DRAW_MFace3_FT3_NCDPQ() 
{ // line 4081, offset 0x80028154
	/* begin block 1 */
		// Start line: 8163
	/* end block 1 */
	// End Line: 8164

	/* begin block 2 */
		// Start line: 8164
	/* end block 2 */
	// End Line: 8165

	/* begin block 3 */
		// Start line: 8165
	/* end block 3 */
	// End Line: 8166

	return null;
}


// autogenerated function stub: 
// void DRAW_MFace3_FT3_AddPrim() /* DRAW_MFace3_FT3_AddPrim method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
void DRAW_MFace3_FT3_AddPrim() 
{ // line 4112, offset 0x800281d4
	/* begin block 1 */
		// Start line: 8225
	/* end block 1 */
	// End Line: 8226

	/* begin block 2 */
		// Start line: 8226
	/* end block 2 */
	// End Line: 8227

	/* begin block 3 */
		// Start line: 8227
	/* end block 3 */
	// End Line: 8228

	return null;
}


// autogenerated function stub: 
// void DRAW_MFace3_Gouraud() /* DRAW_MFace3_Gouraud method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
void DRAW_MFace3_Gouraud() 
{ // line 4130, offset 0x80028228
	/* begin block 1 */
		// Start line: 8261
	/* end block 1 */
	// End Line: 8262

	/* begin block 2 */
		// Start line: 8262
	/* end block 2 */
	// End Line: 8263

	return null;
}


// autogenerated function stub: 
// void DRAW_MFace3_G3() /* DRAW_MFace3_G3 method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
void DRAW_MFace3_G3() 
{ // line 4191, offset 0x800282d4
	/* begin block 1 */
		// Start line: 8383
	/* end block 1 */
	// End Line: 8384

	/* begin block 2 */
		// Start line: 8384
	/* end block 2 */
	// End Line: 8385

	/* begin block 3 */
		// Start line: 8385
	/* end block 3 */
	// End Line: 8386

	/* begin block 4 */
		// Start line: 8386
	/* end block 4 */
	// End Line: 8387

	/* begin block 5 */
		// Start line: 8387
	/* end block 5 */
	// End Line: 8388

	return null;
}


// autogenerated function stub: 
// void DRAW_MFace3_GT3() /* DRAW_MFace3_GT3 method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
void DRAW_MFace3_GT3() 
{ // line 4232, offset 0x8002835c
	/* begin block 1 */
		// Start line: 8465
	/* end block 1 */
	// End Line: 8466

	/* begin block 2 */
		// Start line: 8466
	/* end block 2 */
	// End Line: 8467

	/* begin block 3 */
		// Start line: 8467
	/* end block 3 */
	// End Line: 8468

	/* begin block 4 */
		// Start line: 8468
	/* end block 4 */
	// End Line: 8469

	/* begin block 5 */
		// Start line: 8469
	/* end block 5 */
	// End Line: 8470

	/* begin block 6 */
		// Start line: 8470
	/* end block 6 */
	// End Line: 8471

	/* begin block 7 */
		// Start line: 8471
	/* end block 7 */
	// End Line: 8472

	/* begin block 8 */
		// Start line: 8472
	/* end block 8 */
	// End Line: 8473

	return null;
}


// autogenerated function stub: 
// void DRAW_MFace3_GT_nofade() /* DRAW_MFace3_GT_nofade method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
void DRAW_MFace3_GT_nofade() 
{ // line 4281, offset 0x800283dc
	/* begin block 1 */
		// Start line: 8563
	/* end block 1 */
	// End Line: 8564

	/* begin block 2 */
		// Start line: 8564
	/* end block 2 */
	// End Line: 8565

	return null;
}


// autogenerated function stub: 
// void DRAW_MFace3_Return() /* DRAW_MFace3_Return method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
void DRAW_MFace3_Return() 
{ // line 4303, offset 0x8002842c
	/* begin block 1 */
		// Start line: 8607
	/* end block 1 */
	// End Line: 8608

	/* begin block 2 */
		// Start line: 8608
	/* end block 2 */
	// End Line: 8609

	return null;
}


// autogenerated function stub: 
// void DRAW_MFace3_FadeBackpoly() /* DRAW_MFace3_FadeBackpoly method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
void DRAW_MFace3_FadeBackpoly() 
{ // line 4307, offset 0x80028434
	/* begin block 1 */
		// Start line: 8615
	/* end block 1 */
	// End Line: 8616

	/* begin block 2 */
		// Start line: 8616
	/* end block 2 */
	// End Line: 8617

	/* begin block 3 */
		// Start line: 8617
	/* end block 3 */
	// End Line: 8618

	/* begin block 4 */
		// Start line: 8618
	/* end block 4 */
	// End Line: 8619

	/* begin block 5 */
		// Start line: 8619
	/* end block 5 */
	// End Line: 8620

	return null;
}


// autogenerated function stub: 
// void DMF_faded_t2_smaller() /* DMF_faded_t2_smaller method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
void DMF_faded_t2_smaller() 
{ // line 4348, offset 0x800284a4
	/* begin block 1 */
		// Start line: 8697
	/* end block 1 */
	// End Line: 8698

	/* begin block 2 */
		// Start line: 8698
	/* end block 2 */
	// End Line: 8699

	return null;
}


// autogenerated function stub: 
// void DMF_faded_t3_min() /* DMF_faded_t3_min method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
void DMF_faded_t3_min() 
{ // line 4355, offset 0x800284b8
	/* begin block 1 */
		// Start line: 8711
	/* end block 1 */
	// End Line: 8712

	/* begin block 2 */
		// Start line: 8712
	/* end block 2 */
	// End Line: 8713

	return null;
}


// autogenerated function stub: 
// void DMF_faded_tpage_calc() /* DMF_faded_tpage_calc method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
void DMF_faded_tpage_calc() 
{ // line 4358, offset 0x800284bc
	/* begin block 1 */
		// Start line: 8717
	/* end block 1 */
	// End Line: 8718

	/* begin block 2 */
		// Start line: 8718
	/* end block 2 */
	// End Line: 8719

	/* begin block 3 */
		// Start line: 8719
	/* end block 3 */
	// End Line: 8720

	/* begin block 4 */
		// Start line: 8720
	/* end block 4 */
	// End Line: 8721

	return null;
}


// autogenerated function stub: 
// void DRAW_MFace3_fog_g3() /* DRAW_MFace3_fog_g3 method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
void DRAW_MFace3_fog_g3() 
{ // line 4384, offset 0x80028524
	/* begin block 1 */
		// Start line: 8769
	/* end block 1 */
	// End Line: 8770

	/* begin block 2 */
		// Start line: 8770
	/* end block 2 */
	// End Line: 8771

	/* begin block 3 */
		// Start line: 8771
	/* end block 3 */
	// End Line: 8772

	/* begin block 4 */
		// Start line: 8772
	/* end block 4 */
	// End Line: 8773

	/* begin block 5 */
		// Start line: 8773
	/* end block 5 */
	// End Line: 8774

	return null;
}


// autogenerated function stub: 
// void DRAW_MFace3_fog_ft3() /* DRAW_MFace3_fog_ft3 method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
void DRAW_MFace3_fog_ft3() 
{ // line 4444, offset 0x800285f4
	/* begin block 1 */
		// Start line: 8889
	/* end block 1 */
	// End Line: 8890

	/* begin block 2 */
		// Start line: 8890
	/* end block 2 */
	// End Line: 8891

	/* begin block 3 */
		// Start line: 8891
	/* end block 3 */
	// End Line: 8892

	/* begin block 4 */
		// Start line: 8892
	/* end block 4 */
	// End Line: 8893

	/* begin block 5 */
		// Start line: 8893
	/* end block 5 */
	// End Line: 8894

	return null;
}


// autogenerated function stub: 
// void DRAW_MFace3_fog_gt3() /* DRAW_MFace3_fog_gt3 method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
void DRAW_MFace3_fog_gt3() 
{ // line 4485, offset 0x8002868c
	/* begin block 1 */
		// Start line: 8971
	/* end block 1 */
	// End Line: 8972

	/* begin block 2 */
		// Start line: 8972
	/* end block 2 */
	// End Line: 8973

	/* begin block 3 */
		// Start line: 8973
	/* end block 3 */
	// End Line: 8974

	/* begin block 4 */
		// Start line: 8974
	/* end block 4 */
	// End Line: 8975

	/* begin block 5 */
		// Start line: 8975
	/* end block 5 */
	// End Line: 8976

	/* begin block 6 */
		// Start line: 8976
	/* end block 6 */
	// End Line: 8977

	/* begin block 7 */
		// Start line: 8977
	/* end block 7 */
	// End Line: 8978

	/* begin block 8 */
		// Start line: 8978
	/* end block 8 */
	// End Line: 8979

	/* begin block 9 */
		// Start line: 8979
	/* end block 9 */
	// End Line: 8980

	/* begin block 10 */
		// Start line: 8980
	/* end block 10 */
	// End Line: 8981

	/* begin block 11 */
		// Start line: 8981
	/* end block 11 */
	// End Line: 8982

	return null;
}


// autogenerated function stub: 
// void DRAW_MFace3_fog_backface() /* DRAW_MFace3_fog_backface method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
void DRAW_MFace3_fog_backface() 
{ // line 4534, offset 0x8002871c
	/* begin block 1 */
		// Start line: 9069
	/* end block 1 */
	// End Line: 9070

	/* begin block 2 */
		// Start line: 9070
	/* end block 2 */
	// End Line: 9071

	/* begin block 3 */
		// Start line: 9071
	/* end block 3 */
	// End Line: 9072

	/* begin block 4 */
		// Start line: 9072
	/* end block 4 */
	// End Line: 9073

	/* begin block 5 */
		// Start line: 9073
	/* end block 5 */
	// End Line: 9074

	return null;
}


// decompiled code
// original method signature: 
// void DRAW_SplitModel_S() /* DRAW_SplitModel_S method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
 // line 4567, offset 0x8002878c
	/* begin block 1 */
		// Start line: 9135
	/* end block 1 */
	// End Line: 9136

	/* begin block 2 */
		// Start line: 9136
	/* end block 2 */
	// End Line: 9137

	/* begin block 3 */
		// Start line: 9137
	/* end block 3 */
	// End Line: 9138

	/* begin block 4 */
		// Start line: 9138
	/* end block 4 */
	// End Line: 9139

	/* begin block 5 */
		// Start line: 9139
	/* end block 5 */
	// End Line: 9140

	/* begin block 6 */
		// Start line: 9140
	/* end block 6 */
	// End Line: 9141

	/* begin block 7 */
		// Start line: 9141
	/* end block 7 */
	// End Line: 9142

	/* begin block 8 */
		// Start line: 9142
	/* end block 8 */
	// End Line: 9143

	/* begin block 9 */
		// Start line: 9143
	/* end block 9 */
	// End Line: 9144

	/* begin block 10 */
		// Start line: 9144
	/* end block 10 */
	// End Line: 9145

	/* begin block 11 */
		// Start line: 9145
	/* end block 11 */
	// End Line: 9146

	/* begin block 12 */
		// Start line: 9146
	/* end block 12 */
	// End Line: 9147

	/* begin block 13 */
		// Start line: 9147
	/* end block 13 */
	// End Line: 9148

	/* begin block 14 */
		// Start line: 9185
	/* end block 14 */
	// End Line: 9186

	/* begin block 15 */
		// Start line: 9186
	/* end block 15 */
	// End Line: 9187

	/* begin block 16 */
		// Start line: 9223
	/* end block 16 */
	// End Line: 9224

	/* begin block 17 */
		// Start line: 9224
	/* end block 17 */
	// End Line: 9225

	/* begin block 18 */
		// Start line: 9225
	/* end block 18 */
	// End Line: 9226

	/* begin block 19 */
		// Start line: 9259
	/* end block 19 */
	// End Line: 9260

	/* begin block 20 */
		// Start line: 9260
	/* end block 20 */
	// End Line: 9261

	/* begin block 21 */
		// Start line: 9290
	/* end block 21 */
	// End Line: 9291

	/* begin block 22 */
		// Start line: 9291
	/* end block 22 */
	// End Line: 9292

	/* begin block 23 */
		// Start line: 9298
	/* end block 23 */
	// End Line: 9299

	/* begin block 24 */
		// Start line: 9299
	/* end block 24 */
	// End Line: 9300

	/* begin block 25 */
		// Start line: 9300
	/* end block 25 */
	// End Line: 9301

	/* begin block 26 */
		// Start line: 9301
	/* end block 26 */
	// End Line: 9302

	/* begin block 27 */
		// Start line: 9302
	/* end block 27 */
	// End Line: 9303

	/* begin block 28 */
		// Start line: 9303
	/* end block 28 */
	// End Line: 9304

	/* begin block 29 */
		// Start line: 9304
	/* end block 29 */
	// End Line: 9305

	/* begin block 30 */
		// Start line: 9305
	/* end block 30 */
	// End Line: 9306

	/* begin block 31 */
		// Start line: 9306
	/* end block 31 */
	// End Line: 9307

	/* begin block 32 */
		// Start line: 9307
	/* end block 32 */
	// End Line: 9308

	/* begin block 33 */
		// Start line: 9308
	/* end block 33 */
	// End Line: 9309

	/* begin block 34 */
		// Start line: 9309
	/* end block 34 */
	// End Line: 9310

	/* begin block 35 */
		// Start line: 9310
	/* end block 35 */
	// End Line: 9311

/* WARNING: Instruction at (ram,0x80028868) overlaps instruction at (ram,0x80028864)
    */
/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */

uint DRAW_SplitModel_S(int param_1,undefined4 param_2,int param_3,undefined4 *param_4,int param_5)

{
  uint uVar1;
  ushort *puVar2;
  
  puVar2 = *(ushort **)(param_1 + 0x14);
  DAT_1f800020 = puVar2 + *(int *)(param_1 + 0x10) * 6;
  DAT_1f800024 = *(uint *)(param_5 + 8);
  DAT_1f800090 = 0;
  DAT_1f80007c = depthQBackColor;
  DAT_1f800080 = modelFadeValue;
  DAT_1f800084 = modelFadeValue;
  if (modelFadeValue != 0) {
    DAT_1f800084 = 2;
  }
  DAT_1f800088 = (gameTrackerX.gameData.asmData.dispPage ^ 1U) << 4 | 0x100;
  if (draw_belowSplit == 0) {
    DAT_1f800000 = (undefined *)0x80028928;
  }
  else {
    DAT_1f800000 = &DSM_Outcode0;
  }
  DAT_1f800004 = &DSM_Outcode1;
  DAT_1f800008 = &DSM_Outcode2;
  DAT_1f80000c = &DSM_Outcode3;
  DAT_1f800010 = &DSM_Outcode4;
  DAT_1f800014 = &DSM_Outcode5;
  DAT_1f800018 = &DSM_Outcode6;
  DAT_1f80001c = &DSM_Outcode7;
  DAT_1f80002c = 0;
  DAT_1f800034._0_2_ = 0;
  DAT_1f80003c._0_2_ = 0;
  setCopControlWord(2,0,*param_4);
  setCopControlWord(2,0x800,param_4[1]);
  setCopControlWord(2,0x1000,param_4[2]);
  setCopControlWord(2,0x1800,param_4[3]);
  setCopControlWord(2,0x2000,param_4[4]);
  setCopControlWord(2,0x2800,param_4[5]);
  setCopControlWord(2,0x3000,param_4[6]);
  setCopControlWord(2,0x3800,param_4[7]);
  while ((puVar2 < DAT_1f800020 && (*(uint *)(param_5 + 4) < DAT_1f800024))) {
    if ((*(byte *)((int)puVar2 + 7) & 0x10) == 0) {
      _DAT_1f80008c = 0;
                    /* WARNING: Could not recover jumptable at 0x800289cc. Too many branches */
                    /* WARNING: Treating indirect jump as call */
      uVar1 = (**(code **)((((uint)(0 < *(short *)(param_3 + (uint)puVar2[2] * 8 + 4)) << 1 |
                            (uint)(0 < *(short *)(param_3 + (uint)puVar2[1] * 8 + 4))) << 1 |
                           (uint)(0 < *(short *)(param_3 + (uint)*puVar2 * 8 + 4))) * 4 + 0x1f800000
                          ))(&gNormalList,*(undefined4 *)(param_1 + 4));
      return uVar1;
    }
    puVar2 = puVar2 + 6;
  }
  DAT_1f800004 = &DSM_Outcode1;
  DAT_1f800008 = &DSM_Outcode2;
  DAT_1f80000c = &DSM_Outcode3;
  DAT_1f800010 = &DSM_Outcode4;
  DAT_1f800014 = &DSM_Outcode5;
  DAT_1f800018 = &DSM_Outcode6;
  DAT_1f80001c = &DSM_Outcode7;
  DAT_1f80002c = 0;
  DAT_1f800034._0_2_ = 0;
  DAT_1f80003c._0_2_ = 0;
  DAT_1f800090 = 0;
  return *(uint *)(param_5 + 4);
}



// autogenerated function stub: 
// void DSM_noFade() /* DSM_noFade method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
void DSM_noFade() 
{ // line 4782, offset 0x80028820
	/* begin block 1 */
		// Start line: 9565
	/* end block 1 */
	// End Line: 9566

	return null;
}


// autogenerated function stub: 
// void DSM_SetOutcode0() /* DSM_SetOutcode0 method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
void DSM_SetOutcode0() 
{ // line 4807, offset 0x80028868
	/* begin block 1 */
		// Start line: 9615
	/* end block 1 */
	// End Line: 9616

	return null;
}


// autogenerated function stub: 
// void DSM_SetOutcode1() /* DSM_SetOutcode1 method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
void DSM_SetOutcode1() 
{ // line 4811, offset 0x80028874
	/* begin block 1 */
		// Start line: 9623
	/* end block 1 */
	// End Line: 9624

	return null;
}


// autogenerated function stub: 
// void DSM_IncrementMFace() /* DSM_IncrementMFace method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
void DSM_IncrementMFace() 
{ // line 4871, offset 0x80028928
	/* begin block 1 */
		// Start line: 9743
	/* end block 1 */
	// End Line: 9744

	/* begin block 2 */
		// Start line: 9744
	/* end block 2 */
	// End Line: 9745

	return null;
}


// autogenerated function stub: 
// void DSM_BeginLoop() /* DSM_BeginLoop method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
void DSM_BeginLoop() 
{ // line 4874, offset 0x8002892c
	/* begin block 1 */
		// Start line: 9749
	/* end block 1 */
	// End Line: 9750

	/* begin block 2 */
		// Start line: 9750
	/* end block 2 */
	// End Line: 9751

	/* begin block 3 */
		// Start line: 9751
	/* end block 3 */
	// End Line: 9752

	return null;
}


// autogenerated function stub: 
// void DSM_Outcode0() /* DSM_Outcode0 method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
void DSM_Outcode0() 
{ // line 4926, offset 0x800289d4
	/* begin block 1 */
		// Start line: 9853
	/* end block 1 */
	// End Line: 9854

	/* begin block 2 */
		// Start line: 9854
	/* end block 2 */
	// End Line: 9855

	/* begin block 3 */
		// Start line: 9855
	/* end block 3 */
	// End Line: 9856

	/* begin block 4 */
		// Start line: 9856
	/* end block 4 */
	// End Line: 9857

	/* begin block 5 */
		// Start line: 9857
	/* end block 5 */
	// End Line: 9858

	/* begin block 6 */
		// Start line: 9858
	/* end block 6 */
	// End Line: 9859

	/* begin block 7 */
		// Start line: 9859
	/* end block 7 */
	// End Line: 9860

	return null;
}


// autogenerated function stub: 
// void DSM_Outcode7() /* DSM_Outcode7 method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
void DSM_Outcode7() 
{ // line 4938, offset 0x800289e4
	/* begin block 1 */
		// Start line: 9877
	/* end block 1 */
	// End Line: 9878

	/* begin block 2 */
		// Start line: 9878
	/* end block 2 */
	// End Line: 9879

	/* begin block 3 */
		// Start line: 9879
	/* end block 3 */
	// End Line: 9880

	/* begin block 4 */
		// Start line: 9880
	/* end block 4 */
	// End Line: 9881

	/* begin block 5 */
		// Start line: 9881
	/* end block 5 */
	// End Line: 9882

	/* begin block 6 */
		// Start line: 9882
	/* end block 6 */
	// End Line: 9883

	/* begin block 7 */
		// Start line: 9883
	/* end block 7 */
	// End Line: 9884

	return null;
}


// autogenerated function stub: 
// void DSM_Outcode7_LDV3() /* DSM_Outcode7_LDV3 method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
void DSM_Outcode7_LDV3() 
{ // line 4946, offset 0x800289e8
	/* begin block 1 */
		// Start line: 9893
	/* end block 1 */
	// End Line: 9894

	/* begin block 2 */
		// Start line: 9894
	/* end block 2 */
	// End Line: 9895

	/* begin block 3 */
		// Start line: 9895
	/* end block 3 */
	// End Line: 9896

	/* begin block 4 */
		// Start line: 9896
	/* end block 4 */
	// End Line: 9897

	return null;
}


// autogenerated function stub: 
// void DSM_Outcode7_MG() /* DSM_Outcode7_MG method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
void DSM_Outcode7_MG() 
{ // line 4976, offset 0x80028a3c
	/* begin block 1 */
		// Start line: 9953
	/* end block 1 */
	// End Line: 9954

	/* begin block 2 */
		// Start line: 9954
	/* end block 2 */
	// End Line: 9955

	/* begin block 3 */
		// Start line: 9955
	/* end block 3 */
	// End Line: 9956

	return null;
}


// autogenerated function stub: 
// void DSM_Outcode7_G() /* DSM_Outcode7_G method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
void DSM_Outcode7_G() 
{ // line 4991, offset 0x80028af4
	/* begin block 1 */
		// Start line: 9983
	/* end block 1 */
	// End Line: 9984

	/* begin block 2 */
		// Start line: 9984
	/* end block 2 */
	// End Line: 9985

	return null;
}


// autogenerated function stub: 
// void DSM_Outcode7_Flat() /* DSM_Outcode7_Flat method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
void DSM_Outcode7_Flat() 
{ // line 4997, offset 0x80028b08
	/* begin block 1 */
		// Start line: 9995
	/* end block 1 */
	// End Line: 9996

	/* begin block 2 */
		// Start line: 9996
	/* end block 2 */
	// End Line: 9997

	return null;
}


// autogenerated function stub: 
// void DSM_Outcode7_Draw() /* DSM_Outcode7_Draw method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
void DSM_Outcode7_Draw() 
{ // line 5004, offset 0x80028b1c
	/* begin block 1 */
		// Start line: 10009
	/* end block 1 */
	// End Line: 10010

	/* begin block 2 */
		// Start line: 10010
	/* end block 2 */
	// End Line: 10011

	return null;
}


// autogenerated function stub: 
// void DSM_Outcode1() /* DSM_Outcode1 method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
void DSM_Outcode1() 
{ // line 5011, offset 0x80028b2c
	/* begin block 1 */
		// Start line: 10023
	/* end block 1 */
	// End Line: 10024

	/* begin block 2 */
		// Start line: 10024
	/* end block 2 */
	// End Line: 10025

	/* begin block 3 */
		// Start line: 10025
	/* end block 3 */
	// End Line: 10026

	/* begin block 4 */
		// Start line: 10026
	/* end block 4 */
	// End Line: 10027

	/* begin block 5 */
		// Start line: 10027
	/* end block 5 */
	// End Line: 10028

	/* begin block 6 */
		// Start line: 10028
	/* end block 6 */
	// End Line: 10029

	/* begin block 7 */
		// Start line: 10029
	/* end block 7 */
	// End Line: 10030

	return null;
}


// autogenerated function stub: 
// void DSM_Outcode1_MG() /* DSM_Outcode1_MG method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
void DSM_Outcode1_MG() 
{ // line 5053, offset 0x80028e78
	/* begin block 1 */
		// Start line: 10107
	/* end block 1 */
	// End Line: 10108

	/* begin block 2 */
		// Start line: 10108
	/* end block 2 */
	// End Line: 10109

	/* begin block 3 */
		// Start line: 10109
	/* end block 3 */
	// End Line: 10110

	return null;
}


// autogenerated function stub: 
// void DSM_Outcode1_G() /* DSM_Outcode1_G method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
void DSM_Outcode1_G() 
{ // line 5068, offset 0x80028f30
	/* begin block 1 */
		// Start line: 10137
	/* end block 1 */
	// End Line: 10138

	/* begin block 2 */
		// Start line: 10138
	/* end block 2 */
	// End Line: 10139

	return null;
}


// autogenerated function stub: 
// void DSM_Outcode1_Flat() /* DSM_Outcode1_Flat method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
void DSM_Outcode1_Flat() 
{ // line 5074, offset 0x80028f44
	/* begin block 1 */
		// Start line: 10149
	/* end block 1 */
	// End Line: 10150

	/* begin block 2 */
		// Start line: 10150
	/* end block 2 */
	// End Line: 10151

	return null;
}


// autogenerated function stub: 
// void DSM_Outcode1_Draw() /* DSM_Outcode1_Draw method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
void DSM_Outcode1_Draw() 
{ // line 5083, offset 0x80028f60
	/* begin block 1 */
		// Start line: 10167
	/* end block 1 */
	// End Line: 10168

	/* begin block 2 */
		// Start line: 10168
	/* end block 2 */
	// End Line: 10169

	return null;
}


// autogenerated function stub: 
// void DSM_Outcode2() /* DSM_Outcode2 method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
void DSM_Outcode2() 
{ // line 5149, offset 0x80029010
	/* begin block 1 */
		// Start line: 10299
	/* end block 1 */
	// End Line: 10300

	/* begin block 2 */
		// Start line: 10300
	/* end block 2 */
	// End Line: 10301

	/* begin block 3 */
		// Start line: 10301
	/* end block 3 */
	// End Line: 10302

	/* begin block 4 */
		// Start line: 10302
	/* end block 4 */
	// End Line: 10303

	/* begin block 5 */
		// Start line: 10303
	/* end block 5 */
	// End Line: 10304

	/* begin block 6 */
		// Start line: 10304
	/* end block 6 */
	// End Line: 10305

	/* begin block 7 */
		// Start line: 10305
	/* end block 7 */
	// End Line: 10306

	return null;
}


// autogenerated function stub: 
// void DSM_Outcode2_MG() /* DSM_Outcode2_MG method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
void DSM_Outcode2_MG() 
{ // line 5194, offset 0x80029364
	/* begin block 1 */
		// Start line: 10389
	/* end block 1 */
	// End Line: 10390

	/* begin block 2 */
		// Start line: 10390
	/* end block 2 */
	// End Line: 10391

	/* begin block 3 */
		// Start line: 10391
	/* end block 3 */
	// End Line: 10392

	return null;
}


// autogenerated function stub: 
// void DSM_Outcode2_G() /* DSM_Outcode2_G method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
void DSM_Outcode2_G() 
{ // line 5210, offset 0x8002941c
	/* begin block 1 */
		// Start line: 10421
	/* end block 1 */
	// End Line: 10422

	/* begin block 2 */
		// Start line: 10422
	/* end block 2 */
	// End Line: 10423

	return null;
}


// autogenerated function stub: 
// void DSM_Outcode2_Flat() /* DSM_Outcode2_Flat method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
void DSM_Outcode2_Flat() 
{ // line 5216, offset 0x80029430
	/* begin block 1 */
		// Start line: 10433
	/* end block 1 */
	// End Line: 10434

	/* begin block 2 */
		// Start line: 10434
	/* end block 2 */
	// End Line: 10435

	return null;
}


// autogenerated function stub: 
// void DSM_Outcode2_Draw() /* DSM_Outcode2_Draw method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
void DSM_Outcode2_Draw() 
{ // line 5225, offset 0x8002944c
	/* begin block 1 */
		// Start line: 10451
	/* end block 1 */
	// End Line: 10452

	/* begin block 2 */
		// Start line: 10452
	/* end block 2 */
	// End Line: 10453

	return null;
}


// autogenerated function stub: 
// void DSM_Outcode4() /* DSM_Outcode4 method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
void DSM_Outcode4() 
{ // line 5302, offset 0x80029510
	/* begin block 1 */
		// Start line: 10605
	/* end block 1 */
	// End Line: 10606

	/* begin block 2 */
		// Start line: 10606
	/* end block 2 */
	// End Line: 10607

	/* begin block 3 */
		// Start line: 10607
	/* end block 3 */
	// End Line: 10608

	/* begin block 4 */
		// Start line: 10608
	/* end block 4 */
	// End Line: 10609

	/* begin block 5 */
		// Start line: 10609
	/* end block 5 */
	// End Line: 10610

	/* begin block 6 */
		// Start line: 10610
	/* end block 6 */
	// End Line: 10611

	/* begin block 7 */
		// Start line: 10611
	/* end block 7 */
	// End Line: 10612

	return null;
}


// autogenerated function stub: 
// void DSM_Outcode4_MG() /* DSM_Outcode4_MG method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
void DSM_Outcode4_MG() 
{ // line 5347, offset 0x80029864
	/* begin block 1 */
		// Start line: 10695
	/* end block 1 */
	// End Line: 10696

	/* begin block 2 */
		// Start line: 10696
	/* end block 2 */
	// End Line: 10697

	/* begin block 3 */
		// Start line: 10697
	/* end block 3 */
	// End Line: 10698

	return null;
}


// autogenerated function stub: 
// void DSM_Outcode4_G() /* DSM_Outcode4_G method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
void DSM_Outcode4_G() 
{ // line 5362, offset 0x80029920
	/* begin block 1 */
		// Start line: 10725
	/* end block 1 */
	// End Line: 10726

	/* begin block 2 */
		// Start line: 10726
	/* end block 2 */
	// End Line: 10727

	return null;
}


// autogenerated function stub: 
// void DSM_Outcode4_Flat() /* DSM_Outcode4_Flat method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
void DSM_Outcode4_Flat() 
{ // line 5368, offset 0x80029934
	/* begin block 1 */
		// Start line: 10737
	/* end block 1 */
	// End Line: 10738

	/* begin block 2 */
		// Start line: 10738
	/* end block 2 */
	// End Line: 10739

	return null;
}


// autogenerated function stub: 
// void DSM_Outcode4_Draw() /* DSM_Outcode4_Draw method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
void DSM_Outcode4_Draw() 
{ // line 5377, offset 0x80029950
	/* begin block 1 */
		// Start line: 10755
	/* end block 1 */
	// End Line: 10756

	/* begin block 2 */
		// Start line: 10756
	/* end block 2 */
	// End Line: 10757

	return null;
}


// autogenerated function stub: 
// void DSM_Outcode3() /* DSM_Outcode3 method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
void DSM_Outcode3() 
{ // line 5454, offset 0x80029a10
	/* begin block 1 */
		// Start line: 10909
	/* end block 1 */
	// End Line: 10910

	/* begin block 2 */
		// Start line: 10910
	/* end block 2 */
	// End Line: 10911

	/* begin block 3 */
		// Start line: 10911
	/* end block 3 */
	// End Line: 10912

	/* begin block 4 */
		// Start line: 10912
	/* end block 4 */
	// End Line: 10913

	/* begin block 5 */
		// Start line: 10913
	/* end block 5 */
	// End Line: 10914

	/* begin block 6 */
		// Start line: 10914
	/* end block 6 */
	// End Line: 10915

	/* begin block 7 */
		// Start line: 10915
	/* end block 7 */
	// End Line: 10916

	return null;
}


// autogenerated function stub: 
// void DSM_Outcode3_MG() /* DSM_Outcode3_MG method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
void DSM_Outcode3_MG() 
{ // line 5492, offset 0x80029d54
	/* begin block 1 */
		// Start line: 10985
	/* end block 1 */
	// End Line: 10986

	/* begin block 2 */
		// Start line: 10986
	/* end block 2 */
	// End Line: 10987

	/* begin block 3 */
		// Start line: 10987
	/* end block 3 */
	// End Line: 10988

	return null;
}


// autogenerated function stub: 
// void DSM_Outcode3_G() /* DSM_Outcode3_G method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
void DSM_Outcode3_G() 
{ // line 5507, offset 0x80029e0c
	/* begin block 1 */
		// Start line: 11015
	/* end block 1 */
	// End Line: 11016

	/* begin block 2 */
		// Start line: 11016
	/* end block 2 */
	// End Line: 11017

	return null;
}


// autogenerated function stub: 
// void DSM_Outcode3_Flat() /* DSM_Outcode3_Flat method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
void DSM_Outcode3_Flat() 
{ // line 5513, offset 0x80029e20
	/* begin block 1 */
		// Start line: 11027
	/* end block 1 */
	// End Line: 11028

	/* begin block 2 */
		// Start line: 11028
	/* end block 2 */
	// End Line: 11029

	return null;
}


// autogenerated function stub: 
// void DSM_Outcode3_Draw() /* DSM_Outcode3_Draw method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
void DSM_Outcode3_Draw() 
{ // line 5522, offset 0x80029e3c
	/* begin block 1 */
		// Start line: 11045
	/* end block 1 */
	// End Line: 11046

	/* begin block 2 */
		// Start line: 11046
	/* end block 2 */
	// End Line: 11047

	return null;
}


// autogenerated function stub: 
// void DSM_Outcode5() /* DSM_Outcode5 method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
void DSM_Outcode5() 
{ // line 5586, offset 0x80029eec
	/* begin block 1 */
		// Start line: 11173
	/* end block 1 */
	// End Line: 11174

	/* begin block 2 */
		// Start line: 11174
	/* end block 2 */
	// End Line: 11175

	/* begin block 3 */
		// Start line: 11175
	/* end block 3 */
	// End Line: 11176

	/* begin block 4 */
		// Start line: 11176
	/* end block 4 */
	// End Line: 11177

	/* begin block 5 */
		// Start line: 11177
	/* end block 5 */
	// End Line: 11178

	/* begin block 6 */
		// Start line: 11178
	/* end block 6 */
	// End Line: 11179

	/* begin block 7 */
		// Start line: 11179
	/* end block 7 */
	// End Line: 11180

	return null;
}


// autogenerated function stub: 
// void DSM_Outcode5_MG() /* DSM_Outcode5_MG method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
void DSM_Outcode5_MG() 
{ // line 5631, offset 0x8002a240
	/* begin block 1 */
		// Start line: 11263
	/* end block 1 */
	// End Line: 11264

	/* begin block 2 */
		// Start line: 11264
	/* end block 2 */
	// End Line: 11265

	/* begin block 3 */
		// Start line: 11265
	/* end block 3 */
	// End Line: 11266

	return null;
}


// autogenerated function stub: 
// void DSM_Outcode5_G() /* DSM_Outcode5_G method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
void DSM_Outcode5_G() 
{ // line 5646, offset 0x8002a2fc
	/* begin block 1 */
		// Start line: 11293
	/* end block 1 */
	// End Line: 11294

	/* begin block 2 */
		// Start line: 11294
	/* end block 2 */
	// End Line: 11295

	return null;
}


// autogenerated function stub: 
// void DSM_Outcode5_Flat() /* DSM_Outcode5_Flat method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
void DSM_Outcode5_Flat() 
{ // line 5652, offset 0x8002a310
	/* begin block 1 */
		// Start line: 11305
	/* end block 1 */
	// End Line: 11306

	/* begin block 2 */
		// Start line: 11306
	/* end block 2 */
	// End Line: 11307

	return null;
}


// autogenerated function stub: 
// void DSM_Outcode5_Draw() /* DSM_Outcode5_Draw method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
void DSM_Outcode5_Draw() 
{ // line 5661, offset 0x8002a32c
	/* begin block 1 */
		// Start line: 11323
	/* end block 1 */
	// End Line: 11324

	/* begin block 2 */
		// Start line: 11324
	/* end block 2 */
	// End Line: 11325

	return null;
}


// autogenerated function stub: 
// void DSM_Outcode6() /* DSM_Outcode6 method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
void DSM_Outcode6() 
{ // line 5727, offset 0x8002a3e4
	/* begin block 1 */
		// Start line: 11455
	/* end block 1 */
	// End Line: 11456

	/* begin block 2 */
		// Start line: 11456
	/* end block 2 */
	// End Line: 11457

	/* begin block 3 */
		// Start line: 11457
	/* end block 3 */
	// End Line: 11458

	/* begin block 4 */
		// Start line: 11458
	/* end block 4 */
	// End Line: 11459

	/* begin block 5 */
		// Start line: 11459
	/* end block 5 */
	// End Line: 11460

	/* begin block 6 */
		// Start line: 11460
	/* end block 6 */
	// End Line: 11461

	/* begin block 7 */
		// Start line: 11461
	/* end block 7 */
	// End Line: 11462

	return null;
}


// autogenerated function stub: 
// void DSM_Outcode6_MG() /* DSM_Outcode6_MG method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
void DSM_Outcode6_MG() 
{ // line 5772, offset 0x8002a738
	/* begin block 1 */
		// Start line: 11545
	/* end block 1 */
	// End Line: 11546

	/* begin block 2 */
		// Start line: 11546
	/* end block 2 */
	// End Line: 11547

	/* begin block 3 */
		// Start line: 11547
	/* end block 3 */
	// End Line: 11548

	return null;
}


// autogenerated function stub: 
// void DSM_Outcode6_G() /* DSM_Outcode6_G method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
void DSM_Outcode6_G() 
{ // line 5787, offset 0x8002a7f0
	/* begin block 1 */
		// Start line: 11575
	/* end block 1 */
	// End Line: 11576

	/* begin block 2 */
		// Start line: 11576
	/* end block 2 */
	// End Line: 11577

	return null;
}


// autogenerated function stub: 
// void DSM_Outcode6_Flat() /* DSM_Outcode6_Flat method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
void DSM_Outcode6_Flat() 
{ // line 5793, offset 0x8002a804
	/* begin block 1 */
		// Start line: 11587
	/* end block 1 */
	// End Line: 11588

	/* begin block 2 */
		// Start line: 11588
	/* end block 2 */
	// End Line: 11589

	return null;
}


// autogenerated function stub: 
// void DSM_Outcode6_Draw() /* DSM_Outcode6_Draw method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
void DSM_Outcode6_Draw() 
{ // line 5802, offset 0x8002a820
	/* begin block 1 */
		// Start line: 11605
	/* end block 1 */
	// End Line: 11606

	/* begin block 2 */
		// Start line: 11606
	/* end block 2 */
	// End Line: 11607

	return null;
}


// autogenerated function stub: 
// void DSM_CleanUp() /* DSM_CleanUp method signature is not contained in the debug symbol data. This is likely either a library function or the game was compiled without debug symbols. Please refer to the TDR documentation for additional guidance. */
void DSM_CleanUp() 
{ // line 5868, offset 0x8002a8d8
	/* begin block 1 */
		// Start line: 11737
	/* end block 1 */
	// End Line: 11738

	/* begin block 2 */
		// Start line: 11738
	/* end block 2 */
	// End Line: 11739

	/* begin block 3 */
		// Start line: 11739
	/* end block 3 */
	// End Line: 11740

	return null;
}




